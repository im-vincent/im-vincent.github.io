<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hive分析窗口函数</title>
    <link href="/2019/09/19/Hive%E5%88%86%E6%9E%90%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/"/>
    <url>/2019/09/19/Hive%E5%88%86%E6%9E%90%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<p>转自<a href="http://lxw1234.com/">http://lxw1234.com/</a></p><h1 id="Hive分析窗口函数-一-SUM-AVG-MIN-MAX"><a href="#Hive分析窗口函数-一-SUM-AVG-MIN-MAX" class="headerlink" title="Hive分析窗口函数(一) SUM,AVG,MIN,MAX"></a>Hive分析窗口函数(一) SUM,AVG,MIN,MAX</h1><p>Hive中提供了越来越多的分析函数，用于完成负责的统计分析。抽时间将所有的分析窗口函数理一遍，将陆续发布。</p><p>今天先看几个基础的，SUM、AVG、MIN、MAX。</p><p>用于实现分组内所有和连续累积的统计。</p><h2 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">EXTERNAL</span> <span class="hljs-keyword">TABLE</span> lxw1234 (<br>cookieid string,<br>createtime string,   <span class="hljs-comment">--day </span><br>pv <span class="hljs-type">INT</span><br>) <span class="hljs-type">ROW</span> FORMAT DELIMITED <br>FIELDS TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;,&#x27;</span> <br>stored <span class="hljs-keyword">as</span> textfile location <span class="hljs-string">&#x27;/tmp/lxw11/&#x27;</span>;<br> <br><span class="hljs-keyword">DESC</span> lxw1234;<br>cookieid                STRING <br>createtime              STRING <br>pv <span class="hljs-type">INT</span> <br> <br>hive<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> lxw1234;<br>OK<br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-10</span>      <span class="hljs-number">1</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-11</span>      <span class="hljs-number">5</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">7</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">3</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-14</span>      <span class="hljs-number">2</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">4</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><p>SUM — 注意,结果和ORDER BY相关,默认为升序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> cookieid,<br>createtime,<br>pv,<br><span class="hljs-built_in">SUM</span>(pv) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> cookieid <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> createtime) <span class="hljs-keyword">AS</span> pv1, <span class="hljs-comment">-- 默认为从起点到当前行</span><br><span class="hljs-built_in">SUM</span>(pv) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> cookieid <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> createtime <span class="hljs-keyword">ROWS</span> <span class="hljs-keyword">BETWEEN</span> UNBOUNDED PRECEDING <span class="hljs-keyword">AND</span> <span class="hljs-keyword">CURRENT</span> <span class="hljs-type">ROW</span>) <span class="hljs-keyword">AS</span> pv2, <span class="hljs-comment">--从起点到当前行，结果同pv1 </span><br><span class="hljs-built_in">SUM</span>(pv) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> cookieid) <span class="hljs-keyword">AS</span> pv3,<span class="hljs-comment">--分组内所有行</span><br><span class="hljs-built_in">SUM</span>(pv) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> cookieid <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> createtime <span class="hljs-keyword">ROWS</span> <span class="hljs-keyword">BETWEEN</span> <span class="hljs-number">3</span> PRECEDING <span class="hljs-keyword">AND</span> <span class="hljs-keyword">CURRENT</span> <span class="hljs-type">ROW</span>) <span class="hljs-keyword">AS</span> pv4,   <span class="hljs-comment">--当前行+往前3行</span><br><span class="hljs-built_in">SUM</span>(pv) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> cookieid <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> createtime <span class="hljs-keyword">ROWS</span> <span class="hljs-keyword">BETWEEN</span> <span class="hljs-number">3</span> PRECEDING <span class="hljs-keyword">AND</span> <span class="hljs-number">1</span> FOLLOWING) <span class="hljs-keyword">AS</span> pv5,    <span class="hljs-comment">--当前行+往前3行+往后1行</span><br><span class="hljs-built_in">SUM</span>(pv) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> cookieid <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> createtime <span class="hljs-keyword">ROWS</span> <span class="hljs-keyword">BETWEEN</span> <span class="hljs-keyword">CURRENT</span> <span class="hljs-type">ROW</span> <span class="hljs-keyword">AND</span> UNBOUNDED FOLLOWING) <span class="hljs-keyword">AS</span> pv6   <span class="hljs-comment">---当前行+往后所有行  </span><br><span class="hljs-keyword">FROM</span> lxw1234;<br> <br>cookieid createtime     pv      pv1     pv2     pv3     pv4     pv5      pv6 <br><span class="hljs-comment">-----------------------------------------------------------------------------</span><br>cookie1  <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-10</span>      <span class="hljs-number">1</span>       <span class="hljs-number">1</span>       <span class="hljs-number">1</span>       <span class="hljs-number">26</span>      <span class="hljs-number">1</span>       <span class="hljs-number">6</span>       <span class="hljs-number">26</span><br>cookie1  <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-11</span>      <span class="hljs-number">5</span>       <span class="hljs-number">6</span>       <span class="hljs-number">6</span>       <span class="hljs-number">26</span>      <span class="hljs-number">6</span>       <span class="hljs-number">13</span>      <span class="hljs-number">25</span><br>cookie1  <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">7</span>       <span class="hljs-number">13</span>      <span class="hljs-number">13</span>      <span class="hljs-number">26</span>      <span class="hljs-number">13</span>      <span class="hljs-number">16</span>      <span class="hljs-number">20</span><br>cookie1  <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">3</span>       <span class="hljs-number">16</span>      <span class="hljs-number">16</span>      <span class="hljs-number">26</span>      <span class="hljs-number">16</span>      <span class="hljs-number">18</span>      <span class="hljs-number">13</span><br>cookie1  <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-14</span>      <span class="hljs-number">2</span>       <span class="hljs-number">18</span>      <span class="hljs-number">18</span>      <span class="hljs-number">26</span>      <span class="hljs-number">17</span>      <span class="hljs-number">21</span>      <span class="hljs-number">10</span><br>cookie1  <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">4</span>       <span class="hljs-number">22</span>      <span class="hljs-number">22</span>      <span class="hljs-number">26</span>      <span class="hljs-number">16</span>      <span class="hljs-number">20</span>      <span class="hljs-number">8</span><br>cookie1  <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">4</span>       <span class="hljs-number">26</span>      <span class="hljs-number">26</span>      <span class="hljs-number">26</span>      <span class="hljs-number">13</span>      <span class="hljs-number">13</span>      <span class="hljs-number">4</span> <br></code></pre></td></tr></table></figure><p>pv1: 分组内从起点到当前行的pv累积，如，11号的pv1=10号的pv+11号的pv, 12号=10号+11号+12号<br>pv2: 同pv1<br>pv3: 分组内(cookie1)所有的pv累加<br>pv4: 分组内当前行+往前3行，如，11号=10号+11号， 12号=10号+11号+12号， 13号=10号+11号+12号+13号， 14号=11号+12号+13号+14号<br>pv5: 分组内当前行+往前3行+往后1行，如，14号=11号+12号+13号+14号+15号=5+7+3+2+4=21<br>pv6: 分组内当前行+往后所有行，如，13号=13号+14号+15号+16号=3+2+4+4=13，14号=14号+15号+16号=2+4+4=10</p><p> 如果不指定ROWS BETWEEN,默认为从起点到当前行;<br>如果不指定ORDER BY，则将分组内所有值累加;<br><strong>关键是理解ROWS BETWEEN含义,也叫做WINDOW子句</strong>：<br>PRECEDING：往前<br>FOLLOWING：往后<br>CURRENT ROW：当前行<br>UNBOUNDED：起点，UNBOUNDED PRECEDING 表示从前面的起点， UNBOUNDED FOLLOWING：表示到后面的终点</p><p>–其他AVG，MIN，MAX，和SUM用法一样。</p><h1 id="Hive分析窗口函数-二-NTILE-ROW-NUMBER-RANK-DENSE-RANK"><a href="#Hive分析窗口函数-二-NTILE-ROW-NUMBER-RANK-DENSE-RANK" class="headerlink" title="Hive分析窗口函数(二) NTILE,ROW_NUMBER,RANK,DENSE_RANK"></a>Hive分析窗口函数(二) NTILE,ROW_NUMBER,RANK,DENSE_RANK</h1><p><strong>注意： 序列函数不支持WINDOW子句</strong></p><p>数据准备：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs SQL">cookie1,<span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-10</span>,<span class="hljs-number">1</span><br>cookie1,<span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-11</span>,<span class="hljs-number">5</span><br>cookie1,<span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>,<span class="hljs-number">7</span><br>cookie1,<span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>,<span class="hljs-number">3</span><br>cookie1,<span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-14</span>,<span class="hljs-number">2</span><br>cookie1,<span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>,<span class="hljs-number">4</span><br>cookie1,<span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>,<span class="hljs-number">4</span><br>cookie2,<span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-10</span>,<span class="hljs-number">2</span><br>cookie2,<span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-11</span>,<span class="hljs-number">3</span><br>cookie2,<span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>,<span class="hljs-number">5</span><br>cookie2,<span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>,<span class="hljs-number">6</span><br>cookie2,<span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-14</span>,<span class="hljs-number">3</span><br>cookie2,<span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>,<span class="hljs-number">9</span><br>cookie2,<span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>,<span class="hljs-number">7</span><br> <br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">EXTERNAL</span> <span class="hljs-keyword">TABLE</span> lxw1234 (<br>cookieid string,<br>createtime string,   <span class="hljs-comment">--day </span><br>pv <span class="hljs-type">INT</span><br>) <span class="hljs-type">ROW</span> FORMAT DELIMITED <br>FIELDS TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;,&#x27;</span> <br>stored <span class="hljs-keyword">as</span> textfile location <span class="hljs-string">&#x27;/tmp/lxw11/&#x27;</span>;<br> <br><span class="hljs-keyword">DESC</span> lxw1234;<br>cookieid                STRING <br>createtime              STRING <br>pv <span class="hljs-type">INT</span> <br> <br>hive<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> lxw1234;<br>OK<br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-10</span>      <span class="hljs-number">1</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-11</span>      <span class="hljs-number">5</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">7</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">3</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-14</span>      <span class="hljs-number">2</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">4</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">4</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-10</span>      <span class="hljs-number">2</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-11</span>      <span class="hljs-number">3</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">5</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">6</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-14</span>      <span class="hljs-number">3</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">9</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><h2 id="NTILE"><a href="#NTILE" class="headerlink" title="NTILE"></a>NTILE</h2><p>NTILE(n)，用于将分组数据按照顺序切分成n片，返回当前切片值<br>NTILE不支持ROWS BETWEEN，比如 NTILE(2) OVER(PARTITION BY cookieid ORDER BY createtime ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)<br>如果切片不均匀，默认增加第一个切片的分布</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <br>cookieid,<br>createtime,<br>pv,<br><span class="hljs-built_in">NTILE</span>(<span class="hljs-number">2</span>) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> cookieid <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> createtime) <span class="hljs-keyword">AS</span> rn1,<span class="hljs-comment">--分组内将数据分成2片</span><br><span class="hljs-built_in">NTILE</span>(<span class="hljs-number">3</span>) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> cookieid <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> createtime) <span class="hljs-keyword">AS</span> rn2,  <span class="hljs-comment">--分组内将数据分成3片</span><br><span class="hljs-built_in">NTILE</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> createtime) <span class="hljs-keyword">AS</span> rn3        <span class="hljs-comment">--将所有数据分成4片</span><br><span class="hljs-keyword">FROM</span> lxw1234 <br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> cookieid,createtime;<br> <br>cookieid <span class="hljs-keyword">day</span>           pv       rn1     rn2     rn3<br><span class="hljs-comment">-------------------------------------------------</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-10</span>      <span class="hljs-number">1</span>       <span class="hljs-number">1</span>       <span class="hljs-number">1</span>       <span class="hljs-number">1</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-11</span>      <span class="hljs-number">5</span>       <span class="hljs-number">1</span>       <span class="hljs-number">1</span>       <span class="hljs-number">1</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">7</span>       <span class="hljs-number">1</span>       <span class="hljs-number">1</span>       <span class="hljs-number">2</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">3</span>       <span class="hljs-number">1</span>       <span class="hljs-number">2</span>       <span class="hljs-number">2</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-14</span>      <span class="hljs-number">2</span>       <span class="hljs-number">2</span>       <span class="hljs-number">2</span>       <span class="hljs-number">3</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">4</span>       <span class="hljs-number">2</span>       <span class="hljs-number">3</span>       <span class="hljs-number">3</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">4</span>       <span class="hljs-number">2</span>       <span class="hljs-number">3</span>       <span class="hljs-number">4</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-10</span>      <span class="hljs-number">2</span>       <span class="hljs-number">1</span>       <span class="hljs-number">1</span>       <span class="hljs-number">1</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-11</span>      <span class="hljs-number">3</span>       <span class="hljs-number">1</span>       <span class="hljs-number">1</span>       <span class="hljs-number">1</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">5</span>       <span class="hljs-number">1</span>       <span class="hljs-number">1</span>       <span class="hljs-number">2</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">6</span>       <span class="hljs-number">1</span>       <span class="hljs-number">2</span>       <span class="hljs-number">2</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-14</span>      <span class="hljs-number">3</span>       <span class="hljs-number">2</span>       <span class="hljs-number">2</span>       <span class="hljs-number">3</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">9</span>       <span class="hljs-number">2</span>       <span class="hljs-number">3</span>       <span class="hljs-number">4</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">7</span>       <span class="hljs-number">2</span>       <span class="hljs-number">3</span>       <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><p>–比如，统计一个cookie，pv数最多的前1/3的天</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <br>cookieid,<br>createtime,<br>pv,<br><span class="hljs-built_in">NTILE</span>(<span class="hljs-number">3</span>) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> cookieid <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> pv <span class="hljs-keyword">DESC</span>) <span class="hljs-keyword">AS</span> rn <br><span class="hljs-keyword">FROM</span> lxw1234;<br> <br><span class="hljs-comment">--rn = 1 的记录，就是我们想要的结果</span><br> <br>cookieid <span class="hljs-keyword">day</span>           pv       rn<br><span class="hljs-comment">----------------------------------</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">7</span>       <span class="hljs-number">1</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-11</span>      <span class="hljs-number">5</span>       <span class="hljs-number">1</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">4</span>       <span class="hljs-number">1</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">4</span>       <span class="hljs-number">2</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">3</span>       <span class="hljs-number">2</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-14</span>      <span class="hljs-number">2</span>       <span class="hljs-number">3</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-10</span>      <span class="hljs-number">1</span>       <span class="hljs-number">3</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">9</span>       <span class="hljs-number">1</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">7</span>       <span class="hljs-number">1</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">6</span>       <span class="hljs-number">1</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">5</span>       <span class="hljs-number">2</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-14</span>      <span class="hljs-number">3</span>       <span class="hljs-number">2</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-11</span>      <span class="hljs-number">3</span>       <span class="hljs-number">3</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-10</span>      <span class="hljs-number">2</span>       <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h2 id="ROW-NUMBER"><a href="#ROW-NUMBER" class="headerlink" title="ROW_NUMBER"></a>ROW_NUMBER</h2><p>ROW_NUMBER() –从1开始，按照顺序，生成分组内记录的序列<br>–比如，按照pv降序排列，生成分组内每天的pv名次<br>ROW_NUMBER() 的应用场景非常多，再比如，获取分组内排序第一的记录;获取一个session中的第一条refer等。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> <br>cookieid,<br>createtime,<br>pv,<br><span class="hljs-built_in">ROW_NUMBER</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> cookieid <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> pv <span class="hljs-keyword">desc</span>) <span class="hljs-keyword">AS</span> rn <br><span class="hljs-keyword">FROM</span> lxw1234;<br> <br>cookieid <span class="hljs-keyword">day</span>           pv       rn<br><span class="hljs-comment">------------------------------------------- </span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">7</span>       <span class="hljs-number">1</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-11</span>      <span class="hljs-number">5</span>       <span class="hljs-number">2</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">4</span>       <span class="hljs-number">3</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">4</span>       <span class="hljs-number">4</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">3</span>       <span class="hljs-number">5</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-14</span>      <span class="hljs-number">2</span>       <span class="hljs-number">6</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-10</span>      <span class="hljs-number">1</span>       <span class="hljs-number">7</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">9</span>       <span class="hljs-number">1</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">7</span>       <span class="hljs-number">2</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">6</span>       <span class="hljs-number">3</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">5</span>       <span class="hljs-number">4</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-14</span>      <span class="hljs-number">3</span>       <span class="hljs-number">5</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-11</span>      <span class="hljs-number">3</span>       <span class="hljs-number">6</span><br>cookie2 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-10</span>      <span class="hljs-number">2</span>       <span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><h2 id="RANK-和-DENSE-RANK"><a href="#RANK-和-DENSE-RANK" class="headerlink" title="RANK 和 DENSE_RANK"></a>RANK 和 DENSE_RANK</h2><p>—RANK() 生成数据项在分组中的排名，排名相等会在名次中留下空位<br>—DENSE_RANK() 生成数据项在分组中的排名，排名相等会在名次中不会留下空位</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> <br>cookieid,<br>createtime,<br>pv,<br><span class="hljs-built_in">RANK</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> cookieid <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> pv <span class="hljs-keyword">desc</span>) <span class="hljs-keyword">AS</span> rn1,<br><span class="hljs-built_in">DENSE_RANK</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> cookieid <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> pv <span class="hljs-keyword">desc</span>) <span class="hljs-keyword">AS</span> rn2,<br><span class="hljs-built_in">ROW_NUMBER</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> cookieid <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> pv <span class="hljs-keyword">DESC</span>) <span class="hljs-keyword">AS</span> rn3 <br><span class="hljs-keyword">FROM</span> lxw1234 <br><span class="hljs-keyword">WHERE</span> cookieid <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;cookie1&#x27;</span>;<br> <br>cookieid <span class="hljs-keyword">day</span>           pv       rn1     rn2     rn3 <br><span class="hljs-comment">-------------------------------------------------- </span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">7</span>       <span class="hljs-number">1</span>       <span class="hljs-number">1</span>       <span class="hljs-number">1</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-11</span>      <span class="hljs-number">5</span>       <span class="hljs-number">2</span>       <span class="hljs-number">2</span>       <span class="hljs-number">2</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">4</span>       <span class="hljs-number">3</span>       <span class="hljs-number">3</span>       <span class="hljs-number">3</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">4</span>       <span class="hljs-number">3</span>       <span class="hljs-number">3</span>       <span class="hljs-number">4</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">3</span>       <span class="hljs-number">5</span>       <span class="hljs-number">4</span>       <span class="hljs-number">5</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-14</span>      <span class="hljs-number">2</span>       <span class="hljs-number">6</span>       <span class="hljs-number">5</span>       <span class="hljs-number">6</span><br>cookie1 <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-10</span>      <span class="hljs-number">1</span>       <span class="hljs-number">7</span>       <span class="hljs-number">6</span>       <span class="hljs-number">7</span><br> <br>rn1: <span class="hljs-number">15</span>号和<span class="hljs-number">16</span>号并列第<span class="hljs-number">3</span>, <span class="hljs-number">13</span>号排第<span class="hljs-number">5</span><br>rn2: <span class="hljs-number">15</span>号和<span class="hljs-number">16</span>号并列第<span class="hljs-number">3</span>, <span class="hljs-number">13</span>号排第<span class="hljs-number">4</span><br>rn3: 如果相等，则按记录值排序，生成唯一的次序，如果所有记录值都相等，或许会随机排吧。<br></code></pre></td></tr></table></figure><h1 id="Hive分析窗口函数-三-CUME-DIST-PERCENT-RANK"><a href="#Hive分析窗口函数-三-CUME-DIST-PERCENT-RANK" class="headerlink" title="Hive分析窗口函数(三) CUME_DIST,PERCENT_RANK"></a>Hive分析窗口函数(三) CUME_DIST,PERCENT_RANK</h1><p>数据准备：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sql">d1,user1,<span class="hljs-number">1000</span><br>d1,user2,<span class="hljs-number">2000</span><br>d1,user3,<span class="hljs-number">3000</span><br>d2,user4,<span class="hljs-number">4000</span><br>d2,user5,<span class="hljs-number">5000</span><br> <br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">EXTERNAL</span> <span class="hljs-keyword">TABLE</span> lxw1234 (<br>dept STRING,<br>userid string,<br>sal <span class="hljs-type">INT</span><br>) <span class="hljs-type">ROW</span> FORMAT DELIMITED <br>FIELDS TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;,&#x27;</span> <br>stored <span class="hljs-keyword">as</span> textfile location <span class="hljs-string">&#x27;/tmp/lxw11/&#x27;</span>;<br> <br> <br>hive<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> lxw1234;<br>OK<br>d1      user1   <span class="hljs-number">1000</span><br>d1      user2   <span class="hljs-number">2000</span><br>d1      user3   <span class="hljs-number">3000</span><br>d2      user4   <span class="hljs-number">4000</span><br>d2      user5   <span class="hljs-number">5000</span><br></code></pre></td></tr></table></figure><h2 id="CUME-DIST"><a href="#CUME-DIST" class="headerlink" title="CUME_DIST"></a>CUME_DIST</h2><p>–CUME_DIST 小于等于当前值的行数/分组内总行数<br>–比如，统计小于等于当前薪水的人数，所占总人数的比例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <br>dept,<br>userid,<br>sal,<br><span class="hljs-built_in">CUME_DIST</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> sal) <span class="hljs-keyword">AS</span> rn1,<br><span class="hljs-built_in">CUME_DIST</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> dept <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> sal) <span class="hljs-keyword">AS</span> rn2 <br><span class="hljs-keyword">FROM</span> lxw1234;<br> <br>dept    userid   sal   rn1       rn2 <br><span class="hljs-comment">-------------------------------------------</span><br>d1      user1   <span class="hljs-number">1000</span>    <span class="hljs-number">0.2</span>     <span class="hljs-number">0.3333333333333333</span><br>d1      user2   <span class="hljs-number">2000</span>    <span class="hljs-number">0.4</span>     <span class="hljs-number">0.6666666666666666</span><br>d1      user3   <span class="hljs-number">3000</span>    <span class="hljs-number">0.6</span>     <span class="hljs-number">1.0</span><br>d2      user4   <span class="hljs-number">4000</span>    <span class="hljs-number">0.8</span>     <span class="hljs-number">0.5</span><br>d2      user5   <span class="hljs-number">5000</span>    <span class="hljs-number">1.0</span>     <span class="hljs-number">1.0</span><br> <br>rn1: 没有<span class="hljs-keyword">partition</span>,所有数据均为<span class="hljs-number">1</span>组，总行数为<span class="hljs-number">5</span>，<br>     第一行：小于等于<span class="hljs-number">1000</span>的行数为<span class="hljs-number">1</span>，因此，<span class="hljs-number">1</span><span class="hljs-operator">/</span><span class="hljs-number">5</span><span class="hljs-operator">=</span><span class="hljs-number">0.2</span><br>     第三行：小于等于<span class="hljs-number">3000</span>的行数为<span class="hljs-number">3</span>，因此，<span class="hljs-number">3</span><span class="hljs-operator">/</span><span class="hljs-number">5</span><span class="hljs-operator">=</span><span class="hljs-number">0.6</span><br>rn2: 按照部门分组，dpet<span class="hljs-operator">=</span>d1的行数为<span class="hljs-number">3</span>,<br>     第二行：小于等于<span class="hljs-number">2000</span>的行数为<span class="hljs-number">2</span>，因此，<span class="hljs-number">2</span><span class="hljs-operator">/</span><span class="hljs-number">3</span><span class="hljs-operator">=</span><span class="hljs-number">0.6666666666666666</span><br></code></pre></td></tr></table></figure><h2 id="PERCENT-RANK"><a href="#PERCENT-RANK" class="headerlink" title="PERCENT_RANK"></a>PERCENT_RANK</h2><p>–PERCENT_RANK 分组内当前行的RANK值-1/分组内总行数-1<br>应用场景不了解，可能在一些特殊算法的实现中可以用到吧。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <br>dept,<br>userid,<br>sal,<br><span class="hljs-built_in">PERCENT_RANK</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> sal) <span class="hljs-keyword">AS</span> rn1,   <span class="hljs-comment">--分组内</span><br><span class="hljs-built_in">RANK</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> sal) <span class="hljs-keyword">AS</span> rn11,          <span class="hljs-comment">--分组内RANK值</span><br><span class="hljs-built_in">SUM</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">NULL</span>) <span class="hljs-keyword">AS</span> rn12,     <span class="hljs-comment">--分组内总行数</span><br><span class="hljs-built_in">PERCENT_RANK</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> dept <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> sal) <span class="hljs-keyword">AS</span> rn2 <br><span class="hljs-keyword">FROM</span> lxw1234;<br> <br>dept    userid   sal    rn1    rn11     rn12    rn2<br><span class="hljs-comment">---------------------------------------------------</span><br>d1      user1   <span class="hljs-number">1000</span>    <span class="hljs-number">0.0</span>     <span class="hljs-number">1</span>       <span class="hljs-number">5</span>       <span class="hljs-number">0.0</span><br>d1      user2   <span class="hljs-number">2000</span>    <span class="hljs-number">0.25</span>    <span class="hljs-number">2</span>       <span class="hljs-number">5</span>       <span class="hljs-number">0.5</span><br>d1      user3   <span class="hljs-number">3000</span>    <span class="hljs-number">0.5</span>     <span class="hljs-number">3</span>       <span class="hljs-number">5</span>       <span class="hljs-number">1.0</span><br>d2      user4   <span class="hljs-number">4000</span>    <span class="hljs-number">0.75</span>    <span class="hljs-number">4</span>       <span class="hljs-number">5</span>       <span class="hljs-number">0.0</span><br>d2      user5   <span class="hljs-number">5000</span>    <span class="hljs-number">1.0</span>     <span class="hljs-number">5</span>       <span class="hljs-number">5</span>       <span class="hljs-number">1.0</span><br> <br>rn1: rn1 <span class="hljs-operator">=</span> (rn11<span class="hljs-number">-1</span>) <span class="hljs-operator">/</span> (rn12<span class="hljs-number">-1</span>) <br>   第一行,(<span class="hljs-number">1</span><span class="hljs-number">-1</span>)<span class="hljs-operator">/</span>(<span class="hljs-number">5</span><span class="hljs-number">-1</span>)<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-operator">/</span><span class="hljs-number">4</span><span class="hljs-operator">=</span><span class="hljs-number">0</span><br>   第二行,(<span class="hljs-number">2</span><span class="hljs-number">-1</span>)<span class="hljs-operator">/</span>(<span class="hljs-number">5</span><span class="hljs-number">-1</span>)<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-operator">/</span><span class="hljs-number">4</span><span class="hljs-operator">=</span><span class="hljs-number">0.25</span><br>   第四行,(<span class="hljs-number">4</span><span class="hljs-number">-1</span>)<span class="hljs-operator">/</span>(<span class="hljs-number">5</span><span class="hljs-number">-1</span>)<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-operator">/</span><span class="hljs-number">4</span><span class="hljs-operator">=</span><span class="hljs-number">0.75</span><br>rn2: 按照dept分组，<br>     dept<span class="hljs-operator">=</span>d1的总行数为<span class="hljs-number">3</span><br>     第一行，(<span class="hljs-number">1</span><span class="hljs-number">-1</span>)<span class="hljs-operator">/</span>(<span class="hljs-number">3</span><span class="hljs-number">-1</span>)<span class="hljs-operator">=</span><span class="hljs-number">0</span><br>     第三行，(<span class="hljs-number">3</span><span class="hljs-number">-1</span>)<span class="hljs-operator">/</span>(<span class="hljs-number">3</span><span class="hljs-number">-1</span>)<span class="hljs-operator">=</span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h1 id="Hive分析窗口函数-四-LAG-LEAD-FIRST-VALUE-LAST-VALUE"><a href="#Hive分析窗口函数-四-LAG-LEAD-FIRST-VALUE-LAST-VALUE" class="headerlink" title="Hive分析窗口函数(四) LAG,LEAD,FIRST_VALUE,LAST_VALUE"></a>Hive分析窗口函数(四) LAG,LEAD,FIRST_VALUE,LAST_VALUE</h1><p><strong>注意： 这几个函数不支持WINDOW子句</strong></p><p>数据准备：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs dns">cookie<span class="hljs-number">1,2015-04</span>-<span class="hljs-number">10 10:00:02</span>,url2<br>cookie<span class="hljs-number">1,2015-04</span>-<span class="hljs-number">10 10:00:00</span>,url1<br>cookie<span class="hljs-number">1,2015-04</span>-<span class="hljs-number">10 10:03:04</span>,<span class="hljs-number">1</span>url3<br>cookie<span class="hljs-number">1,2015-04</span>-<span class="hljs-number">10 10:50:05</span>,url6<br>cookie<span class="hljs-number">1,2015-04</span>-<span class="hljs-number">10 11:00:00</span>,url7<br>cookie<span class="hljs-number">1,2015-04</span>-<span class="hljs-number">10 10:10:00</span>,url4<br>cookie<span class="hljs-number">1,2015-04</span>-<span class="hljs-number">10 10:50:01</span>,url5<br>cookie<span class="hljs-number">2,2015-04</span>-<span class="hljs-number">10 10:00:02</span>,url22<br>cookie<span class="hljs-number">2,2015-04</span>-<span class="hljs-number">10 10:00:00</span>,url11<br>cookie<span class="hljs-number">2,2015-04</span>-<span class="hljs-number">10 10:03:04</span>,<span class="hljs-number">1</span>url33<br>cookie<span class="hljs-number">2,2015-04</span>-<span class="hljs-number">10 10:50:05</span>,url66<br>cookie<span class="hljs-number">2,2015-04</span>-<span class="hljs-number">10 11:00:00</span>,url77<br>cookie<span class="hljs-number">2,2015-04</span>-<span class="hljs-number">10 10:10:00</span>,url44<br>cookie<span class="hljs-number">2,2015-04</span>-<span class="hljs-number">10 10:50:01</span>,url55<br> <br>CREATE EXTERNAL TABLE lxw1234 (<br>cookieid string,<br>createtime string,  --页面访问时间<br>url STRING       --被访问页面<br>) ROW FORMAT DELIMITED <br>FIELDS TERMINATED BY &#x27;,&#x27; <br>stored as textfile location &#x27;/tmp/lxw11/&#x27;<span class="hljs-comment">;</span><br> <br> <br>hive&gt; select * from lxw1234<span class="hljs-comment">;</span><br>OK<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:00:02</span>     url2<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:00:00</span>     url1<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:03:04</span>     <span class="hljs-number">1</span>url3<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:50:05</span>     url6<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 11:00:00</span>     url7<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:10:00</span>     url4<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:50:01</span>     url5<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:00:02</span>     url22<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:00:00</span>     url11<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:03:04</span>     <span class="hljs-number">1</span>url33<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:50:05</span>     url66<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 11:00:00</span>     url77<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:10:00</span>     url44<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:50:01</span>     url55<br></code></pre></td></tr></table></figure><h2 id="LAG"><a href="#LAG" class="headerlink" title="LAG"></a>LAG</h2><p>LAG(col,n,DEFAULT) 用于统计窗口内往上第n行值<br>第一个参数为列名，第二个参数为往上第n行（可选，默认为1），第三个参数为默认值（当往上第n行为NULL时候，取默认值，如不指定，则为NULL）</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs subunit">SELECT cookieid,<br>createtime,<br>url,<br>ROW_NUMBER() OVER(PARTITION BY cookieid ORDER BY createtime) AS rn,<br>LAG(createtime,1,&#x27;1970<span class="hljs-string">-01</span><span class="hljs-string">-01</span> 00:00:00&#x27;) OVER(PARTITION BY cookieid ORDER BY createtime) AS last_1_time,<br>LAG(createtime,2) OVER(PARTITION BY cookieid ORDER BY createtime) AS last_2_time <br>FROM lxw1234;<br> <br> <br>cookieid createtime             url    rn       last_1_time             last_2_time<br>-------------------------------------------------------------------------------------------<br>cookie1 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:00     url1    1       1970<span class="hljs-string">-01</span><span class="hljs-string">-01</span> 00:00:00     NULL<br>cookie1 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:02     url2    2       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:00     NULL<br>cookie1 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:03:04     1url3   3       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:02     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:00<br>cookie1 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:10:00     url4    4       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:03:04     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:02<br>cookie1 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:01     url5    5       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:10:00     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:03:04<br>cookie1 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:05     url6    6       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:01     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:10:00<br>cookie1 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 11:00:00     url7    7       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:05     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:01<br>cookie2 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:00     url11   1       1970<span class="hljs-string">-01</span><span class="hljs-string">-01</span> 00:00:00     NULL<br>cookie2 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:02     url22   2       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:00     NULL<br>cookie2 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:03:04     1url33  3       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:02     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:00<br>cookie2 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:10:00     url44   4       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:03:04     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:02<br>cookie2 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:01     url55   5       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:10:00     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:03:04<br>cookie2 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:05     url66   6       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:01     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:10:00<br>cookie2 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 11:00:00     url77   7       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:05     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:01<br> <br> <br>last_1_time: 指定了往上第1行的值，default为&#x27;1970<span class="hljs-string">-01</span><span class="hljs-string">-01</span> 00:00:00&#x27;  <br>             cookie1第一行，往上1行为NULL,因此取默认值 1970<span class="hljs-string">-01</span><span class="hljs-string">-01</span> 00:00:00<br>             cookie1第三行，往上1行值为第二行值，2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:02<br>             cookie1第六行，往上1行值为第五行值，2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:01<br>last_2_time: 指定了往上第2行的值，为指定默认值<br> cookie1第一行，往上2行为NULL<br> cookie1第二行，往上2行为NULL<br> cookie1第四行，往上2行为第二行值，2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:02<br> cookie1第七行，往上2行为第五行值，2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:01<br></code></pre></td></tr></table></figure><h2 id="LEAD"><a href="#LEAD" class="headerlink" title="LEAD"></a>LEAD</h2><p>与LAG相反<br>LEAD(col,n,DEFAULT) 用于统计窗口内往下第n行值<br>第一个参数为列名，第二个参数为往下第n行（可选，默认为1），第三个参数为默认值（当往下第n行为NULL时候，取默认值，如不指定，则为NULL）</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs subunit">SELECT cookieid,<br>createtime,<br>url,<br>ROW_NUMBER() OVER(PARTITION BY cookieid ORDER BY createtime) AS rn,<br>LEAD(createtime,1,&#x27;1970<span class="hljs-string">-01</span><span class="hljs-string">-01</span> 00:00:00&#x27;) OVER(PARTITION BY cookieid ORDER BY createtime) AS next_1_time,<br>LEAD(createtime,2) OVER(PARTITION BY cookieid ORDER BY createtime) AS next_2_time <br>FROM lxw1234;<br> <br> <br>cookieid createtime             url    rn       next_1_time             next_2_time <br>-------------------------------------------------------------------------------------------<br>cookie1 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:00     url1    1       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:02     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:03:04<br>cookie1 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:02     url2    2       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:03:04     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:10:00<br>cookie1 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:03:04     1url3   3       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:10:00     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:01<br>cookie1 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:10:00     url4    4       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:01     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:05<br>cookie1 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:01     url5    5       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:05     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 11:00:00<br>cookie1 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:05     url6    6       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 11:00:00     NULL<br>cookie1 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 11:00:00     url7    7       1970<span class="hljs-string">-01</span><span class="hljs-string">-01</span> 00:00:00     NULL<br>cookie2 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:00     url11   1       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:02     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:03:04<br>cookie2 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:00:02     url22   2       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:03:04     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:10:00<br>cookie2 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:03:04     1url33  3       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:10:00     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:01<br>cookie2 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:10:00     url44   4       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:01     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:05<br>cookie2 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:01     url55   5       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:05     2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 11:00:00<br>cookie2 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 10:50:05     url66   6       2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 11:00:00     NULL<br>cookie2 2015<span class="hljs-string">-04</span><span class="hljs-string">-10</span> 11:00:00     url77   7       1970<span class="hljs-string">-01</span><span class="hljs-string">-01</span> 00:00:00     NULL<br> <br>--逻辑与LAG一样，只不过LAG是往上，LEAD是往下。<br></code></pre></td></tr></table></figure><h2 id="FIRST-VALUE"><a href="#FIRST-VALUE" class="headerlink" title="FIRST_VALUE"></a>FIRST_VALUE</h2><p>取分组内排序后，截止到当前行，第一个值</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs dns">SELECT cookieid,<br>createtime,<br>url,<br>ROW_NUMBER() OVER(PARTITION BY cookieid ORDER BY createtime) AS rn,<br>FIRST_VALUE(url) OVER(PARTITION BY cookieid ORDER BY createtime) AS first1 <br>FROM lxw1234<span class="hljs-comment">;</span><br> <br>cookieid  createtime            url     rn      first1<br>---------------------------------------------------------<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:00:00</span>     url1    <span class="hljs-number">1</span>       url1<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:00:02</span>     url2    <span class="hljs-number">2</span>       url1<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:03:04</span>     <span class="hljs-number">1</span>url3   <span class="hljs-number">3</span>       url1<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:10:00</span>     url4    <span class="hljs-number">4</span>       url1<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:50:01</span>     url5    <span class="hljs-number">5</span>       url1<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:50:05</span>     url6    <span class="hljs-number">6</span>       url1<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 11:00:00</span>     url7    <span class="hljs-number">7</span>       url1<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:00:00</span>     url11   <span class="hljs-number">1</span>       url11<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:00:02</span>     url22   <span class="hljs-number">2</span>       url11<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:03:04</span>     <span class="hljs-number">1</span>url33  <span class="hljs-number">3</span>       url11<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:10:00</span>     url44   <span class="hljs-number">4</span>       url11<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:50:01</span>     url55   <span class="hljs-number">5</span>       url11<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:50:05</span>     url66   <span class="hljs-number">6</span>       url11<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 11:00:00</span>     url77   <span class="hljs-number">7</span>       url11<br></code></pre></td></tr></table></figure><h2 id="LAST-VALUE"><a href="#LAST-VALUE" class="headerlink" title="LAST_VALUE"></a>LAST_VALUE</h2><p>取分组内排序后，截止到当前行，最后一个值</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs dns">SELECT cookieid,<br>createtime,<br>url,<br>ROW_NUMBER() OVER(PARTITION BY cookieid ORDER BY createtime) AS rn,<br>LAST_VALUE(url) OVER(PARTITION BY cookieid ORDER BY createtime) AS last1 <br>FROM lxw1234<span class="hljs-comment">;</span><br> <br> <br>cookieid  createtime            url    rn       last1  <br>-----------------------------------------------------------------<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:00:00</span>     url1    <span class="hljs-number">1</span>       url1<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:00:02</span>     url2    <span class="hljs-number">2</span>       url2<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:03:04</span>     <span class="hljs-number">1</span>url3   <span class="hljs-number">3</span>       <span class="hljs-number">1</span>url3<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:10:00</span>     url4    <span class="hljs-number">4</span>       url4<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:50:01</span>     url5    <span class="hljs-number">5</span>       url5<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:50:05</span>     url6    <span class="hljs-number">6</span>       url6<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 11:00:00</span>     url7    <span class="hljs-number">7</span>       url7<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:00:00</span>     url11   <span class="hljs-number">1</span>       url11<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:00:02</span>     url22   <span class="hljs-number">2</span>       url22<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:03:04</span>     <span class="hljs-number">1</span>url33  <span class="hljs-number">3</span>       <span class="hljs-number">1</span>url33<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:10:00</span>     url44   <span class="hljs-number">4</span>       url44<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:50:01</span>     url55   <span class="hljs-number">5</span>       url55<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:50:05</span>     url66   <span class="hljs-number">6</span>       url66<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 11:00:00</span>     url77   <span class="hljs-number">7</span>       url77<br></code></pre></td></tr></table></figure><h3 id="如果不指定ORDER-BY，则默认按照记录在文件中的偏移量进行排序，会出现错误的结果"><a href="#如果不指定ORDER-BY，则默认按照记录在文件中的偏移量进行排序，会出现错误的结果" class="headerlink" title="如果不指定ORDER BY，则默认按照记录在文件中的偏移量进行排序，会出现错误的结果"></a>如果不指定ORDER BY，则默认按照记录在文件中的偏移量进行排序，会出现错误的结果</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs dns">SELECT cookieid,<br>createtime,<br>url,<br>FIRST_VALUE(url) OVER(PARTITION BY cookieid) AS first2  <br>FROM lxw1234<span class="hljs-comment">;</span><br> <br>cookieid  createtime            url     first2<br>----------------------------------------------<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:00:02</span>     url2    url2<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:00:00</span>     url1    url2<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:03:04</span>     <span class="hljs-number">1</span>url3   url2<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:50:05</span>     url6    url2<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 11:00:00</span>     url7    url2<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:10:00</span>     url4    url2<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:50:01</span>     url5    url2<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:00:02</span>     url22   url22<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:00:00</span>     url11   url22<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:03:04</span>     <span class="hljs-number">1</span>url33  url22<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:50:05</span>     url66   url22<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 11:00:00</span>     url77   url22<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:10:00</span>     url44   url22<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:50:01</span>     url55   url22<br> <br>SELECT cookieid,<br>createtime,<br>url,<br>LAST_VALUE(url) OVER(PARTITION BY cookieid) AS last2  <br>FROM lxw1234<span class="hljs-comment">;</span><br> <br>cookieid  createtime            url     last2<br>----------------------------------------------<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:00:02</span>     url2    url5<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:00:00</span>     url1    url5<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:03:04</span>     <span class="hljs-number">1</span>url3   url5<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:50:05</span>     url6    url5<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 11:00:00</span>     url7    url5<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:10:00</span>     url4    url5<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:50:01</span>     url5    url5<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:00:02</span>     url22   url55<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:00:00</span>     url11   url55<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:03:04</span>     <span class="hljs-number">1</span>url33  url55<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:50:05</span>     url66   url55<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 11:00:00</span>     url77   url55<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:10:00</span>     url44   url55<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:50:01</span>     url55   url55<br></code></pre></td></tr></table></figure><h3 id="如果想要取分组内排序后最后一个值，则需要变通一下："><a href="#如果想要取分组内排序后最后一个值，则需要变通一下：" class="headerlink" title="如果想要取分组内排序后最后一个值，则需要变通一下："></a><strong>如果想要取分组内排序后最后一个值，则需要变通一下：</strong></h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs dns">SELECT cookieid,<br>createtime,<br>url,<br>ROW_NUMBER() OVER(PARTITION BY cookieid ORDER BY createtime) AS rn,<br>LAST_VALUE(url) OVER(PARTITION BY cookieid ORDER BY createtime) AS last1,<br>FIRST_VALUE(url) OVER(PARTITION BY cookieid ORDER BY createtime DESC) AS last2 <br>FROM lxw1234 <br>ORDER BY cookieid,createtime<span class="hljs-comment">;</span><br> <br>cookieid  createtime            url     rn     last1    last2<br>-------------------------------------------------------------<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:00:00</span>     url1    <span class="hljs-number">1</span>       url1    url7<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:00:02</span>     url2    <span class="hljs-number">2</span>       url2    url7<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:03:04</span>     <span class="hljs-number">1</span>url3   <span class="hljs-number">3</span>       <span class="hljs-number">1</span>url3   url7<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:10:00</span>     url4    <span class="hljs-number">4</span>       url4    url7<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:50:01</span>     url5    <span class="hljs-number">5</span>       url5    url7<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 10:50:05</span>     url6    <span class="hljs-number">6</span>       url6    url7<br>cookie<span class="hljs-number">1 2015-04</span>-<span class="hljs-number">10 11:00:00</span>     url7    <span class="hljs-number">7</span>       url7    url7<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:00:00</span>     url11   <span class="hljs-number">1</span>       url11   url77<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:00:02</span>     url22   <span class="hljs-number">2</span>       url22   url77<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:03:04</span>     <span class="hljs-number">1</span>url33  <span class="hljs-number">3</span>       <span class="hljs-number">1</span>url33  url77<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:10:00</span>     url44   <span class="hljs-number">4</span>       url44   url77<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:50:01</span>     url55   <span class="hljs-number">5</span>       url55   url77<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 10:50:05</span>     url66   <span class="hljs-number">6</span>       url66   url77<br>cookie<span class="hljs-number">2 2015-04</span>-<span class="hljs-number">10 11:00:00</span>     url77   <span class="hljs-number">7</span>       url77   url77<br></code></pre></td></tr></table></figure><h3 id="提示：在使用分析函数的过程中，要特别注意ORDER-BY子句，用的不恰当，统计出的结果就不是你所期望的"><a href="#提示：在使用分析函数的过程中，要特别注意ORDER-BY子句，用的不恰当，统计出的结果就不是你所期望的" class="headerlink" title="提示：在使用分析函数的过程中，要特别注意ORDER BY子句，用的不恰当，统计出的结果就不是你所期望的"></a>提示：在使用分析函数的过程中，要特别注意ORDER BY子句，用的不恰当，统计出的结果就不是你所期望的</h3><h1 id="Hive分析窗口函数-五-GROUPING-SETS-GROUPING-ID-CUBE-ROLLUP"><a href="#Hive分析窗口函数-五-GROUPING-SETS-GROUPING-ID-CUBE-ROLLUP" class="headerlink" title="Hive分析窗口函数(五) GROUPING SETS,GROUPING__ID,CUBE,ROLLUP"></a>Hive分析窗口函数(五) GROUPING SETS,GROUPING__ID,CUBE,ROLLUP</h1><p>GROUPING SETS,GROUPING__ID,CUBE,ROLLUP</p><p>这几个分析函数通常用于OLAP中，不能累加，而且需要根据不同维度上钻和下钻的指标统计，比如，分小时、天、月的UV数。</p><p>数据准备：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs subunit">2015<span class="hljs-string">-03</span>,2015<span class="hljs-string">-03</span><span class="hljs-string">-10</span>,cookie1<br>2015<span class="hljs-string">-03</span>,2015<span class="hljs-string">-03</span><span class="hljs-string">-10</span>,cookie5<br>2015<span class="hljs-string">-03</span>,2015<span class="hljs-string">-03</span><span class="hljs-string">-12</span>,cookie7<br>2015<span class="hljs-string">-04</span>,2015<span class="hljs-string">-04</span><span class="hljs-string">-12</span>,cookie3<br>2015<span class="hljs-string">-04</span>,2015<span class="hljs-string">-04</span><span class="hljs-string">-13</span>,cookie2<br>2015<span class="hljs-string">-04</span>,2015<span class="hljs-string">-04</span><span class="hljs-string">-13</span>,cookie4<br>2015<span class="hljs-string">-04</span>,2015<span class="hljs-string">-04</span><span class="hljs-string">-16</span>,cookie4<br>2015<span class="hljs-string">-03</span>,2015<span class="hljs-string">-03</span><span class="hljs-string">-10</span>,cookie2<br>2015<span class="hljs-string">-03</span>,2015<span class="hljs-string">-03</span><span class="hljs-string">-10</span>,cookie3<br>2015<span class="hljs-string">-04</span>,2015<span class="hljs-string">-04</span><span class="hljs-string">-12</span>,cookie5<br>2015<span class="hljs-string">-04</span>,2015<span class="hljs-string">-04</span><span class="hljs-string">-13</span>,cookie6<br>2015<span class="hljs-string">-04</span>,2015<span class="hljs-string">-04</span><span class="hljs-string">-15</span>,cookie3<br>2015<span class="hljs-string">-04</span>,2015<span class="hljs-string">-04</span><span class="hljs-string">-15</span>,cookie2<br>2015<span class="hljs-string">-04</span>,2015<span class="hljs-string">-04</span><span class="hljs-string">-16</span>,cookie1<br> <br>CREATE EXTERNAL TABLE lxw1234 (<br>month STRING,<br>day STRING, <br>cookieid STRING <br>) ROW FORMAT DELIMITED <br>FIELDS TERMINATED BY &#x27;,&#x27; <br>stored as textfile location &#x27;/tmp/lxw11/&#x27;;<br> <br> <br>hive&gt; select * from lxw1234;<br>OK<br>2015<span class="hljs-string">-03</span> 2015<span class="hljs-string">-03</span><span class="hljs-string">-10</span>      cookie1<br>2015<span class="hljs-string">-03</span> 2015<span class="hljs-string">-03</span><span class="hljs-string">-10</span>      cookie5<br>2015<span class="hljs-string">-03</span> 2015<span class="hljs-string">-03</span><span class="hljs-string">-12</span>      cookie7<br>2015<span class="hljs-string">-04</span> 2015<span class="hljs-string">-04</span><span class="hljs-string">-12</span>      cookie3<br>2015<span class="hljs-string">-04</span> 2015<span class="hljs-string">-04</span><span class="hljs-string">-13</span>      cookie2<br>2015<span class="hljs-string">-04</span> 2015<span class="hljs-string">-04</span><span class="hljs-string">-13</span>      cookie4<br>2015<span class="hljs-string">-04</span> 2015<span class="hljs-string">-04</span><span class="hljs-string">-16</span>      cookie4<br>2015<span class="hljs-string">-03</span> 2015<span class="hljs-string">-03</span><span class="hljs-string">-10</span>      cookie2<br>2015<span class="hljs-string">-03</span> 2015<span class="hljs-string">-03</span><span class="hljs-string">-10</span>      cookie3<br>2015<span class="hljs-string">-04</span> 2015<span class="hljs-string">-04</span><span class="hljs-string">-12</span>      cookie5<br>2015<span class="hljs-string">-04</span> 2015<span class="hljs-string">-04</span><span class="hljs-string">-13</span>      cookie6<br>2015<span class="hljs-string">-04</span> 2015<span class="hljs-string">-04</span><span class="hljs-string">-15</span>      cookie3<br>2015<span class="hljs-string">-04</span> 2015<span class="hljs-string">-04</span><span class="hljs-string">-15</span>      cookie2<br>2015<span class="hljs-string">-04</span> 2015<span class="hljs-string">-04</span><span class="hljs-string">-16</span>      cookie1<br></code></pre></td></tr></table></figure><h2 id="GROUPING-SETS"><a href="#GROUPING-SETS" class="headerlink" title="GROUPING SETS"></a>GROUPING SETS</h2><p>在一个GROUP BY查询中，根据不同的维度组合进行聚合，等价于将不同维度的GROUP BY结果集进行UNION ALL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <br><span class="hljs-keyword">month</span>,<br><span class="hljs-keyword">day</span>,<br><span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">DISTINCT</span> cookieid) <span class="hljs-keyword">AS</span> uv,<br>GROUPING__ID <br><span class="hljs-keyword">FROM</span> lxw1234 <br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">month</span>,<span class="hljs-keyword">day</span> <br><span class="hljs-keyword">GROUPING</span> SETS (<span class="hljs-keyword">month</span>,<span class="hljs-keyword">day</span>) <br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> GROUPING__ID;<br> <br><span class="hljs-keyword">month</span>      <span class="hljs-keyword">day</span>            uv      GROUPING__ID<br><span class="hljs-comment">------------------------------------------------</span><br><span class="hljs-number">2015</span><span class="hljs-number">-03</span>    <span class="hljs-keyword">NULL</span>            <span class="hljs-number">5</span>       <span class="hljs-number">1</span><br><span class="hljs-number">2015</span><span class="hljs-number">-04</span>    <span class="hljs-keyword">NULL</span>            <span class="hljs-number">6</span>       <span class="hljs-number">1</span><br><span class="hljs-keyword">NULL</span>       <span class="hljs-number">2015</span><span class="hljs-number">-03</span><span class="hljs-number">-10</span>      <span class="hljs-number">4</span>       <span class="hljs-number">2</span><br><span class="hljs-keyword">NULL</span>       <span class="hljs-number">2015</span><span class="hljs-number">-03</span><span class="hljs-number">-12</span>      <span class="hljs-number">1</span>       <span class="hljs-number">2</span><br><span class="hljs-keyword">NULL</span>       <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">2</span>       <span class="hljs-number">2</span><br><span class="hljs-keyword">NULL</span>       <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">3</span>       <span class="hljs-number">2</span><br><span class="hljs-keyword">NULL</span>       <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">2</span>       <span class="hljs-number">2</span><br><span class="hljs-keyword">NULL</span>       <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">2</span>       <span class="hljs-number">2</span><br> <br> <br>等价于 <br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">month</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">DISTINCT</span> cookieid) <span class="hljs-keyword">AS</span> uv,<span class="hljs-number">1</span> <span class="hljs-keyword">AS</span> GROUPING__ID <span class="hljs-keyword">FROM</span> lxw1234 <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">month</span> <br><span class="hljs-keyword">UNION</span> <span class="hljs-keyword">ALL</span> <br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">NULL</span>,<span class="hljs-keyword">day</span>,<span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">DISTINCT</span> cookieid) <span class="hljs-keyword">AS</span> uv,<span class="hljs-number">2</span> <span class="hljs-keyword">AS</span> GROUPING__ID <span class="hljs-keyword">FROM</span> lxw1234 <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">day</span><br></code></pre></td></tr></table></figure><p>再如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <br><span class="hljs-keyword">month</span>,<br><span class="hljs-keyword">day</span>,<br><span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">DISTINCT</span> cookieid) <span class="hljs-keyword">AS</span> uv,<br>GROUPING__ID <br><span class="hljs-keyword">FROM</span> lxw1234 <br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">month</span>,<span class="hljs-keyword">day</span> <br><span class="hljs-keyword">GROUPING</span> SETS (<span class="hljs-keyword">month</span>,<span class="hljs-keyword">day</span>,(<span class="hljs-keyword">month</span>,<span class="hljs-keyword">day</span>)) <br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> GROUPING__ID;<br> <br><span class="hljs-keyword">month</span>         <span class="hljs-keyword">day</span>             uv      GROUPING__ID<br><span class="hljs-comment">------------------------------------------------</span><br><span class="hljs-number">2015</span><span class="hljs-number">-03</span>       <span class="hljs-keyword">NULL</span>            <span class="hljs-number">5</span>       <span class="hljs-number">1</span><br><span class="hljs-number">2015</span><span class="hljs-number">-04</span>       <span class="hljs-keyword">NULL</span>            <span class="hljs-number">6</span>       <span class="hljs-number">1</span><br><span class="hljs-keyword">NULL</span>          <span class="hljs-number">2015</span><span class="hljs-number">-03</span><span class="hljs-number">-10</span>      <span class="hljs-number">4</span>       <span class="hljs-number">2</span><br><span class="hljs-keyword">NULL</span>          <span class="hljs-number">2015</span><span class="hljs-number">-03</span><span class="hljs-number">-12</span>      <span class="hljs-number">1</span>       <span class="hljs-number">2</span><br><span class="hljs-keyword">NULL</span>          <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">2</span>       <span class="hljs-number">2</span><br><span class="hljs-keyword">NULL</span>          <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">3</span>       <span class="hljs-number">2</span><br><span class="hljs-keyword">NULL</span>          <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">2</span>       <span class="hljs-number">2</span><br><span class="hljs-keyword">NULL</span>          <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">2</span>       <span class="hljs-number">2</span><br><span class="hljs-number">2015</span><span class="hljs-number">-03</span>       <span class="hljs-number">2015</span><span class="hljs-number">-03</span><span class="hljs-number">-10</span>      <span class="hljs-number">4</span>       <span class="hljs-number">3</span><br><span class="hljs-number">2015</span><span class="hljs-number">-03</span>       <span class="hljs-number">2015</span><span class="hljs-number">-03</span><span class="hljs-number">-12</span>      <span class="hljs-number">1</span>       <span class="hljs-number">3</span><br><span class="hljs-number">2015</span><span class="hljs-number">-04</span>       <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">2</span>       <span class="hljs-number">3</span><br><span class="hljs-number">2015</span><span class="hljs-number">-04</span>       <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">3</span>       <span class="hljs-number">3</span><br><span class="hljs-number">2015</span><span class="hljs-number">-04</span>       <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">2</span>       <span class="hljs-number">3</span><br><span class="hljs-number">2015</span><span class="hljs-number">-04</span>       <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">2</span>       <span class="hljs-number">3</span><br> <br> <br>等价于<br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">month</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">DISTINCT</span> cookieid) <span class="hljs-keyword">AS</span> uv,<span class="hljs-number">1</span> <span class="hljs-keyword">AS</span> GROUPING__ID <span class="hljs-keyword">FROM</span> lxw1234 <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">month</span> <br><span class="hljs-keyword">UNION</span> <span class="hljs-keyword">ALL</span> <br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">NULL</span>,<span class="hljs-keyword">day</span>,<span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">DISTINCT</span> cookieid) <span class="hljs-keyword">AS</span> uv,<span class="hljs-number">2</span> <span class="hljs-keyword">AS</span> GROUPING__ID <span class="hljs-keyword">FROM</span> lxw1234 <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">day</span><br><span class="hljs-keyword">UNION</span> <span class="hljs-keyword">ALL</span> <br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">month</span>,<span class="hljs-keyword">day</span>,<span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">DISTINCT</span> cookieid) <span class="hljs-keyword">AS</span> uv,<span class="hljs-number">3</span> <span class="hljs-keyword">AS</span> GROUPING__ID <span class="hljs-keyword">FROM</span> lxw1234 <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">month</span>,<span class="hljs-keyword">day</span><br></code></pre></td></tr></table></figure><p>其中的 <strong>GROUPING__ID</strong>，表示结果属于哪一个分组集合。</p><h2 id="CUBE"><a href="#CUBE" class="headerlink" title="CUBE"></a>CUBE</h2><p>根据GROUP BY的维度的所有组合进行聚合。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <br><span class="hljs-keyword">month</span>,<br><span class="hljs-keyword">day</span>,<br><span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">DISTINCT</span> cookieid) <span class="hljs-keyword">AS</span> uv,<br>GROUPING__ID <br><span class="hljs-keyword">FROM</span> lxw1234 <br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">month</span>,<span class="hljs-keyword">day</span> <br><span class="hljs-keyword">WITH</span> <span class="hljs-keyword">CUBE</span> <br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> GROUPING__ID;<br> <br> <br><span class="hljs-keyword">month</span>      <span class="hljs-keyword">day</span>             uv     GROUPING__ID<br><span class="hljs-comment">--------------------------------------------</span><br><span class="hljs-keyword">NULL</span>            <span class="hljs-keyword">NULL</span>            <span class="hljs-number">7</span>       <span class="hljs-number">0</span><br><span class="hljs-number">2015</span><span class="hljs-number">-03</span>         <span class="hljs-keyword">NULL</span>            <span class="hljs-number">5</span>       <span class="hljs-number">1</span><br><span class="hljs-number">2015</span><span class="hljs-number">-04</span>         <span class="hljs-keyword">NULL</span>            <span class="hljs-number">6</span>       <span class="hljs-number">1</span><br><span class="hljs-keyword">NULL</span>            <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">2</span>       <span class="hljs-number">2</span><br><span class="hljs-keyword">NULL</span>            <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">3</span>       <span class="hljs-number">2</span><br><span class="hljs-keyword">NULL</span>            <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">2</span>       <span class="hljs-number">2</span><br><span class="hljs-keyword">NULL</span>            <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">2</span>       <span class="hljs-number">2</span><br><span class="hljs-keyword">NULL</span>            <span class="hljs-number">2015</span><span class="hljs-number">-03</span><span class="hljs-number">-10</span>      <span class="hljs-number">4</span>       <span class="hljs-number">2</span><br><span class="hljs-keyword">NULL</span>            <span class="hljs-number">2015</span><span class="hljs-number">-03</span><span class="hljs-number">-12</span>      <span class="hljs-number">1</span>       <span class="hljs-number">2</span><br><span class="hljs-number">2015</span><span class="hljs-number">-03</span>         <span class="hljs-number">2015</span><span class="hljs-number">-03</span><span class="hljs-number">-10</span>      <span class="hljs-number">4</span>       <span class="hljs-number">3</span><br><span class="hljs-number">2015</span><span class="hljs-number">-03</span>         <span class="hljs-number">2015</span><span class="hljs-number">-03</span><span class="hljs-number">-12</span>      <span class="hljs-number">1</span>       <span class="hljs-number">3</span><br><span class="hljs-number">2015</span><span class="hljs-number">-04</span>         <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-16</span>      <span class="hljs-number">2</span>       <span class="hljs-number">3</span><br><span class="hljs-number">2015</span><span class="hljs-number">-04</span>         <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-12</span>      <span class="hljs-number">2</span>       <span class="hljs-number">3</span><br><span class="hljs-number">2015</span><span class="hljs-number">-04</span>         <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-13</span>      <span class="hljs-number">3</span>       <span class="hljs-number">3</span><br><span class="hljs-number">2015</span><span class="hljs-number">-04</span>         <span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-15</span>      <span class="hljs-number">2</span>       <span class="hljs-number">3</span><br> <br> <br> <br>等价于<br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">NULL</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">DISTINCT</span> cookieid) <span class="hljs-keyword">AS</span> uv,<span class="hljs-number">0</span> <span class="hljs-keyword">AS</span> GROUPING__ID <span class="hljs-keyword">FROM</span> lxw1234<br><span class="hljs-keyword">UNION</span> <span class="hljs-keyword">ALL</span> <br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">month</span>,<span class="hljs-keyword">NULL</span>,<span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">DISTINCT</span> cookieid) <span class="hljs-keyword">AS</span> uv,<span class="hljs-number">1</span> <span class="hljs-keyword">AS</span> GROUPING__ID <span class="hljs-keyword">FROM</span> lxw1234 <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">month</span> <br><span class="hljs-keyword">UNION</span> <span class="hljs-keyword">ALL</span> <br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">NULL</span>,<span class="hljs-keyword">day</span>,<span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">DISTINCT</span> cookieid) <span class="hljs-keyword">AS</span> uv,<span class="hljs-number">2</span> <span class="hljs-keyword">AS</span> GROUPING__ID <span class="hljs-keyword">FROM</span> lxw1234 <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">day</span><br><span class="hljs-keyword">UNION</span> <span class="hljs-keyword">ALL</span> <br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">month</span>,<span class="hljs-keyword">day</span>,<span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">DISTINCT</span> cookieid) <span class="hljs-keyword">AS</span> uv,<span class="hljs-number">3</span> <span class="hljs-keyword">AS</span> GROUPING__ID <span class="hljs-keyword">FROM</span> lxw1234 <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">month</span>,<span class="hljs-keyword">day</span><br></code></pre></td></tr></table></figure><h2 id="ROLLUP"><a href="#ROLLUP" class="headerlink" title="ROLLUP"></a>ROLLUP</h2><p>是CUBE的子集，以最左侧的维度为主，从该维度进行层级聚合。</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs subunit">比如，以month维度进行层级聚合：<br>SELECT <br>month,<br>day,<br>COUNT(DISTINCT cookieid) AS uv,<br>GROUPING__ID  <br>FROM lxw1234 <br>GROUP BY month,day<br>WITH ROLLUP <br>ORDER BY GROUPING__ID;<br> <br>month      day             uv     GROUPING__ID<br>---------------------------------------------------<br>NULL             NULL            7       0<br>2015<span class="hljs-string">-03</span>          NULL            5       1<br>2015<span class="hljs-string">-04</span>          NULL            6       1<br>2015<span class="hljs-string">-03</span>          2015<span class="hljs-string">-03</span><span class="hljs-string">-10</span>      4       3<br>2015<span class="hljs-string">-03</span>          2015<span class="hljs-string">-03</span><span class="hljs-string">-12</span>      1       3<br>2015<span class="hljs-string">-04</span>          2015<span class="hljs-string">-04</span><span class="hljs-string">-12</span>      2       3<br>2015<span class="hljs-string">-04</span>          2015<span class="hljs-string">-04</span><span class="hljs-string">-13</span>      3       3<br>2015<span class="hljs-string">-04</span>          2015<span class="hljs-string">-04</span><span class="hljs-string">-15</span>      2       3<br>2015<span class="hljs-string">-04</span>          2015<span class="hljs-string">-04</span><span class="hljs-string">-16</span>      2       3<br> <br>可以实现这样的上钻过程：<br>月天的UV-&gt;月的UV-&gt;总UV<br><br>--把month和day调换顺序，则以day维度进行层级聚合：<br> <br>SELECT <br>day,<br>month,<br>COUNT(DISTINCT cookieid) AS uv,<br>GROUPING__ID  <br>FROM lxw1234 <br>GROUP BY day,month <br>WITH ROLLUP <br>ORDER BY GROUPING__ID;<br> <br> <br>day        month              uv     GROUPING__ID<br>-------------------------------------------------------<br>NULL            NULL               7       0<br>2015<span class="hljs-string">-04</span><span class="hljs-string">-13</span>      NULL               3       1<br>2015<span class="hljs-string">-03</span><span class="hljs-string">-12</span>      NULL               1       1<br>2015<span class="hljs-string">-04</span><span class="hljs-string">-15</span>      NULL               2       1<br>2015<span class="hljs-string">-03</span><span class="hljs-string">-10</span>      NULL               4       1<br>2015<span class="hljs-string">-04</span><span class="hljs-string">-16</span>      NULL               2       1<br>2015<span class="hljs-string">-04</span><span class="hljs-string">-12</span>      NULL               2       1<br>2015<span class="hljs-string">-04</span><span class="hljs-string">-12</span>      2015<span class="hljs-string">-04</span>            2       3<br>2015<span class="hljs-string">-03</span><span class="hljs-string">-10</span>      2015<span class="hljs-string">-03</span>            4       3<br>2015<span class="hljs-string">-03</span><span class="hljs-string">-12</span>      2015<span class="hljs-string">-03</span>            1       3<br>2015<span class="hljs-string">-04</span><span class="hljs-string">-13</span>      2015<span class="hljs-string">-04</span>            3       3<br>2015<span class="hljs-string">-04</span><span class="hljs-string">-15</span>      2015<span class="hljs-string">-04</span>            2       3<br>2015<span class="hljs-string">-04</span><span class="hljs-string">-16</span>      2015<span class="hljs-string">-04</span>            2       3<br> <br>可以实现这样的上钻过程：<br>天月的UV-&gt;天的UV-&gt;总UV<br>（这里，根据天和月进行聚合，和根据天聚合结果一样，因为有父子关系，如果是其他维度组合的话，就会不一样）<br></code></pre></td></tr></table></figure><p>这种函数，需要结合实际场景和数据去使用和研究，只看说明的话，很难理解。</p><p>官网的介绍： <a href="https://cwiki.apache.org/confluence/display/Hive/Enhanced+Aggregation%2C+Cube%2C+Grouping+and+Rollup">https://cwiki.apache.org/confluence/display/Hive/Enhanced+Aggregation%2C+Cube%2C+Grouping+and+Rollup</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>hive</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux 下创建虚拟环境 python</title>
    <link href="/2019/09/18/linux-%E4%B8%8B%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83-python/"/>
    <url>/2019/09/18/linux-%E4%B8%8B%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83-python/</url>
    
    <content type="html"><![CDATA[<h1 id="linux-下创建虚拟环境-python"><a href="#linux-下创建虚拟环境-python" class="headerlink" title="linux 下创建虚拟环境 python"></a>linux 下创建虚拟环境 python</h1><p>virtualenv是一个可以在同一计算机中隔离多个python版本的工具。有时，两个不同的项目可能需要不同版本的python，如 python2.7 / python3.6 ，但是如果都装到一起，经常会导致问题。virtualenv能够用于创建独立的Python虚拟环境，多个Python相互独立，互不影响。<br>virtualenvwrapper这个软件包可以让我们管理虚拟环境变得更加简单。不用再跑到某个目录下通过virtualenv来创建虚拟环境，并且激活的时候也要跑到具体的目录下去激活。</p><p>下面介绍安装python虚拟环境的方法：</p><p>使用pip安装包前，先更新pip。</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># pip3 install --upgrade pip</span><br></code></pre></td></tr></table></figure><p><strong>1. 安装virtualenv、virtualenvwrapper</strong></p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># pip3 install virtualenv</span><br><span class="hljs-meta"># pip3 install virtualenvwrapper</span><br></code></pre></td></tr></table></figure><p><strong>2. 进入.bashrc文件中，定义virtualenvwrapper路径</strong></p><p>使用vim编辑.bashrc文件</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># vim ~/.bashrc</span><br></code></pre></td></tr></table></figure><p>在文末填入以下代码并保存</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">VIRTUALENVWRAPPER_PYTHON=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/python3/</span>bin/python3    <span class="hljs-comment"># 指定virtualenvwrapper执行的python版本</span><br>export WORKON_HOME=<span class="hljs-variable">$HOME</span>/.virtualenvs    <span class="hljs-comment"># 指定虚拟环境存放目录，.virtualenvs目录名可自拟</span><br>source <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>virtualenvwrapper.sh    <span class="hljs-comment"># virtualenvwrapper.sh所在目录</span><br></code></pre></td></tr></table></figure><p><strong>3. 运行.bashrc文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">source</span> ~/.bashrc</span><br></code></pre></td></tr></table></figure><p><strong>4. 创建虚拟环境</strong></p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># mkvirtualenv py3-env</span><br></code></pre></td></tr></table></figure><p>也可指定虚拟环境的python版本</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"># mkvirtualenv --<span class="hljs-keyword">python</span>=/usr/bin/<span class="hljs-keyword">python3</span> <span class="hljs-keyword">py3</span>-env  <br></code></pre></td></tr></table></figure><p><strong>5. 进入虚拟环境中，然后进入到项目所在目录，安装好相应的包（如无需要，可跳过此步）</strong></p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta">#  pip install -r requirements.txt</span><br></code></pre></td></tr></table></figure><p>虚拟环境搭建完成！</p><p><strong>常见的virtualenvwrapper命令</strong></p><ul><li>创建虚拟环境</li></ul><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># mkvirtualenv my_env</span><br></code></pre></td></tr></table></figure><ul><li>切换到某个虚拟环境</li></ul><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># workon my_env</span><br></code></pre></td></tr></table></figure><ul><li>退出当前虚拟环境</li></ul><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># deactivate</span><br></code></pre></td></tr></table></figure><ul><li>删除某个虚拟环境</li></ul><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># rmvirtualenv my_env</span><br></code></pre></td></tr></table></figure><ul><li>列出所有虚拟环境</li></ul><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># lsvirtualenv</span><br></code></pre></td></tr></table></figure><ul><li>进入到虚拟环境所在的目录</li></ul><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># cdvirtualenv</span><br></code></pre></td></tr></table></figure><h2 id="————————————————————————–"><a href="#————————————————————————–" class="headerlink" title="————————————————————————–"></a>————————————————————————–</h2><p>1 安装虚拟环境<br>sudo pip install virtualenv<br>sudo pip install virtualenvwrapper</p><p>2 激活虚拟环境<br>source virtualenvwrapper.sh</p><p>3 创建虚拟环境<br>mkvirtualenv -p (编译地址) /usr/bin/pyhon3 (名称) py3</p><p>4 若出现未找到命令这种错误就再次激活虚拟环境</p><p>5 进入虚拟环境<br>workon py3</p><p>6 退出虚拟环境<br>deactivate</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>virtualenvwrapper装好后, 发现使用<code>mkvirtualenv XX</code>时, 又找不到virtualenv了… <code>apt install python3-virtualenv</code>的virtualenv找不到, <code>apt install virtualenv</code>的virtualenv又报缺少python2的path.</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决:"></a>解决:</h2><p>我又想起了上个问题的解决方法, 在<code>~/.local/bin/</code>下找到了<code>virtualenv</code>文件, 这可能就是<code>python3-virtualenv</code>所对应的了, 再将其拷贝至<code>/usr/bin/</code>目录下, 即可.</p>]]></content>
    
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>alluxio ha cluster</title>
    <link href="/2019/08/22/alluxio-ha-cluster/"/>
    <url>/2019/08/22/alluxio-ha-cluster/</url>
    
    <content type="html"><![CDATA[<h1 id="alluxio-ha-cluster"><a href="#alluxio-ha-cluster" class="headerlink" title="alluxio ha cluster"></a>alluxio ha cluster</h1><h2 id="alluxio-site-properties设置"><a href="#alluxio-site-properties设置" class="headerlink" title="alluxio-site.properties设置"></a>alluxio-site.properties设置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi conf/alluxio-site.properties<br><span class="hljs-meta">#</span><span class="bash"> 每个master节点就写自己的</span><br>alluxio.master.hostname=node01.hadoop.cis<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 使用zookeeper获取master</span><br>alluxio.zookeeper.enabled=true<br>alluxio.zookeeper.address=node01.hadoop.cis:2181,node02.hadoop.cis:2181,master02.hadoop.cis:2181<br>alluxio.master.journal.folder=hdfs://master02.hadoop.cis:8020/alluxio/journal<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 设置ufs至hdfs</span><br>alluxio.underfs.address=hdfs://master02.hadoop.cis:8020/alluxio<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 设置hdfs相关配置</span><br>alluxio.underfs.hdfs.configuration=/etc/hadoop/conf/hdfs-site.xml:/etc/hadoop/conf/core-site.xml<br></code></pre></td></tr></table></figure><h2 id="master"><a href="#master" class="headerlink" title="master"></a>master</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi conf/masters <br><br>node01.hadoop.cis<br>node02.hadoop.cis<br></code></pre></td></tr></table></figure><h2 id="workers"><a href="#workers" class="headerlink" title="workers"></a>workers</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi conf/workers<br><br>node01.hadoop.cis<br>node02.hadoop.cis<br></code></pre></td></tr></table></figure><h2 id="SudoMount设置"><a href="#SudoMount设置" class="headerlink" title="SudoMount设置"></a>SudoMount设置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &quot;alluxio ALL=(ALL) NOPASSWD: /bin/mount * /mnt/ramdisk, /bin/umount * /mnt/ramdisk, /bin/mkdir * /mnt/ramdisk, /bin/chmod * /mnt/ramdisk&quot; &gt;&gt;/etc/sudoers<br></code></pre></td></tr></table></figure><h2 id="维护操作"><a href="#维护操作" class="headerlink" title="维护操作"></a>维护操作</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 先进行初始化</span><br>bin/alluxio format<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 开启集群</span><br>bin/alluxio-start.sh all SudoMount<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 集群进行测试</span><br>bin/alluxio fs copyFromLocal LICENSE /LICENSE<br>bin/alluxio fs persist /LICENSE<br>bin/alluxio runTests    <br>bin/alluxio fsadmin report<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 关闭集群</span><br>bin/alluxio-stop.sh all<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 同步配置文件，会同步到所有的workers</span><br>bin/alluxio copyDir conf/<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>alluxio</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于hive进行简单压缩技术测试</title>
    <link href="/2019/03/22/%E5%9F%BA%E4%BA%8Ehive%E8%BF%9B%E8%A1%8C%E7%AE%80%E5%8D%95%E5%8E%8B%E7%BC%A9%E6%8A%80%E6%9C%AF%E6%B5%8B%E8%AF%95/"/>
    <url>/2019/03/22/%E5%9F%BA%E4%BA%8Ehive%E8%BF%9B%E8%A1%8C%E7%AE%80%E5%8D%95%E5%8E%8B%E7%BC%A9%E6%8A%80%E6%9C%AF%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>下载测试数据</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget http:<span class="hljs-regexp">//</span>www.almhuette-raith.at<span class="hljs-regexp">/apache-log/</span>access.log<br></code></pre></td></tr></table></figure><p>准备测试数据，在hive中建立apachelog</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> apachelog (<br> ipaddress STRING,<br> <span class="hljs-keyword">identity</span> STRING,<br> <span class="hljs-keyword">user</span> STRING,<br> <span class="hljs-type">time</span> STRING,<br> request STRING,<br> protocol STRING,<br> status STRING,<br> size STRING,<br> referer STRING,<br> agent STRING) <br><span class="hljs-type">ROW</span> FORMAT SERDE <span class="hljs-string">&#x27;org.apache.hadoop.hive.contrib.serde2.RegexSerDe&#x27;</span> <br><span class="hljs-keyword">WITH</span> SERDEPROPERTIES (<br> &quot;input.regex&quot; <span class="hljs-operator">=</span> &quot;([^ ]*) ([^ ]*) ([^ ]*) (-|\\[[^\\]]*\\]) ([^ \&quot;]<span class="hljs-operator">*</span><span class="hljs-operator">|</span>\&quot;[^\&quot;]<span class="hljs-operator">*</span>) ([<span class="hljs-operator">^</span> ]<span class="hljs-operator">*</span>\&quot;) (-|[0-9]*) (-|[0-9]*)(?: ([^ \&quot;]<span class="hljs-operator">*</span><span class="hljs-operator">|</span>\&quot;.*\&quot;) ([<span class="hljs-operator">^</span> \&quot;]*|\&quot;.<span class="hljs-operator">*</span>\&quot;))?&quot;,&quot;output.format.string&quot; <span class="hljs-operator">=</span> &quot;%1$s %2$s %3$s %4$s %5$s %6$s %7$s %8$s %9$s %10$s&quot;)<br>STORED <span class="hljs-keyword">AS</span> TEXTFILE; <br></code></pre></td></tr></table></figure><p>然后导入测试数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL">hive<span class="hljs-operator">&gt;</span>load data <span class="hljs-keyword">local</span> inpath <span class="hljs-string">&#x27;/usr/toos/access_log&#x27;</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> apachelog;<br></code></pre></td></tr></table></figure><p>检查hadoop支持压缩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@master ~]<span class="hljs-comment"># hadoop checknative</span><br>19/03/20 15:28:40 INFO bzip2.Bzip2Factory: Successfully loaded &amp; initialized native-bzip2 library system-native<br>19/03/20 15:28:40 INFO zlib.ZlibFactory: Successfully loaded &amp; initialized native-zlib library<br>Native library checking:<br>hadoop:  <span class="hljs-literal">true</span> /usr/<span class="hljs-built_in">local</span>/hadoop-2.7.7/lib/native/libhadoop.so.1.0.0<br>zlib:    <span class="hljs-literal">true</span> /lib64/libz.so.1<br>snappy:  <span class="hljs-literal">true</span> /lib64/libsnappy.so.1<br>lz4:     <span class="hljs-literal">true</span> revision:99<br>bzip2:   <span class="hljs-literal">true</span> /lib64/libbz2.so.1<br>openssl: <span class="hljs-literal">true</span> /lib64/libcrypto.so<br></code></pre></td></tr></table></figure><p>记录未压缩的大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@master ~]<span class="hljs-comment">#  hadoop fs -du -h /user/hive/warehouse/</span><br>561.8 M  /user/hive/warehouse/apachelog<br></code></pre></td></tr></table></figure><p>BZip2</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SET</span> hive.exec.compress.output<span class="hljs-operator">=</span><span class="hljs-literal">true</span>;<br><span class="hljs-keyword">SET</span> mapreduce.output.fileoutputformat.compress.codec<span class="hljs-operator">=</span>org.apache.hadoop.io.compress.BZip2Codec;<br><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> apachelog_bzip2 <span class="hljs-type">row</span> format delimited fields terminated <span class="hljs-keyword">by</span> &quot;\t&quot; <span class="hljs-keyword">as</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> apachelog;<br><br></code></pre></td></tr></table></figure><p>Snappy</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SET</span> hive.exec.compress.output<span class="hljs-operator">=</span><span class="hljs-literal">true</span>;<br><span class="hljs-keyword">SET</span> mapreduce.output.fileoutputformat.compress.codec<span class="hljs-operator">=</span>org.apache.hadoop.io.compress.SnappyCodec;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> apachelog_snappy<br><span class="hljs-type">ROW</span> FORMAT DELIMITED FIELDS TERMINATED <span class="hljs-keyword">BY</span> &quot;\t&quot;<br><span class="hljs-keyword">as</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> apachelog;<br></code></pre></td></tr></table></figure><p>Lz4Codec</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SET</span> hive.exec.compress.output<span class="hljs-operator">=</span><span class="hljs-literal">true</span>;<br><span class="hljs-keyword">SET</span> mapreduce.output.fileoutputformat.compress.codec<span class="hljs-operator">=</span>org.apache.hadoop.io.compress.Lz4Codec;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> apachelog_lz4<br><span class="hljs-type">ROW</span> FORMAT DELIMITED FIELDS TERMINATED <span class="hljs-keyword">BY</span> &quot;\t&quot;<br><span class="hljs-keyword">as</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> apachelog;<br></code></pre></td></tr></table></figure><p>记录大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@master ~]<span class="hljs-comment">#  hadoop fs -du -h /user/hive/warehouse/</span><br>561.8 M  /user/hive/warehouse/apachelog<br>9.9 M    /user/hive/warehouse/apachelog_bzip2<br>29.5 M   /user/hive/warehouse/apachelog_lz4<br>47.5 M   /user/hive/warehouse/apachelog_snappy<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>hadoop</tag>
      
      <tag>hive</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hadoop 小文件引发的血案</title>
    <link href="/2019/03/19/Hadoop-%E5%B0%8F%E6%96%87%E4%BB%B6%E5%BC%95%E5%8F%91%E7%9A%84%E8%A1%80%E6%A1%88/"/>
    <url>/2019/03/19/Hadoop-%E5%B0%8F%E6%96%87%E4%BB%B6%E5%BC%95%E5%8F%91%E7%9A%84%E8%A1%80%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h1 id="Hadoop-HDFS-YARN-MapReduce"><a href="#Hadoop-HDFS-YARN-MapReduce" class="headerlink" title="Hadoop: HDFS/YARN/MapReduce"></a>Hadoop: HDFS/YARN/MapReduce</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reStructuredText">HDFS has a master/slave architecture. An HDFS cluster consists of a single NameNode, a master server that manages the file system namespace and regulates access to files by clients. In addition, there are a number of DataNodes, usually one per node in the cluster, which manage storage attached to the nodes that they run on. HDFS exposes a file system namespace and allows user data to be stored in files. Internally, a file is split into one or more blocks and these blocks are stored in a set of DataNodes. The NameNode executes file system namespace operations like opening, closing, and renaming files and directories. It also determines the mapping of blocks to DataNodes. The DataNodes are responsible for serving read and write requests from the file system’s clients. The DataNodes also perform block creation, deletion, and replication upon instruction from the NameNode.<br></code></pre></td></tr></table></figure><h2 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h2><ul><li>NameNode</li><li>DataNode</li><li>SeconderyNameNode</li></ul><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul><li>Client</li><li>NN<ul><li>Single Point of Failure =&gt; HA</li><li>metadata 谁/权限/文件对应的block信息</li></ul></li><li>DN<ul><li>多个节点</li><li>存储数据</li><li>和NN之间有心跳</li></ul></li><li>Block<ul><li>File存储HDFS,是按照block进行切分 64/128/256MB</li></ul></li></ul><p>生产上的东西一定要保证HA（HDFS/YARN..）</p><p><img src="https://hadoop.apache.org/docs/r2.7.7/hadoop-project-dist/hadoop-hdfs/images/hdfsarchitecture.png"></p><p><img src="https://hadoop.apache.org/docs/r2.7.7/hadoop-project-dist/hadoop-hdfs/images/hdfsdatanodes.png"></p><p><img src="https://www.ibm.com/developerworks/cn/opensource/os-cn-hadoop-name-node/img001.png"></p><h2 id="小文件"><a href="#小文件" class="headerlink" title="小文件"></a>小文件</h2><p>Hadoop适合大文件</p><p>小文件</p><ul><li>明显小于block size的文件，例如：129MB = 128 + 1 </li></ul><p>hadoop目录、文件、block都会以元数据的方式存储下来。</p><p>瓶颈</p><ul><li>磁盘io（iops）</li><li>task启动销毁的开销</li><li>资源有限</li></ul><p>三个部分：<strong>文件、目录和块</strong>。这三部分在元数据中各占用多少空间呢，下面是一个初略的计算：</p><blockquote><ol><li>单条元数据大小：文件约250B，目录约290B，块约368B(152B+72*副本数3)</li><li>集群元数据总条数：文件数约10000个，目录约5000个，块约20000个</li><li>总占用内存大小： 250B<em>10000+290B</em>5000+368B*20000=10.78M</li></ol></blockquote><p>处理方案：</p><ol><li>所有HDFS小文件数据导出到本地单个文件后，再存入HDFS使用管道：</li><li>调用现有API方法 或 自行开发:org.apache.hadoop.fs.FileUtil.copyMerge()</li><li>Hadoop自带方案Hadoop Archive</li><li>Sequence File</li><li>CombineFileInputFormat类</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>hadoop fs -mv input/*.txt tmp<br><span class="hljs-built_in">wait</span><br>hadoop jar /usr/<span class="hljs-built_in">local</span>/hadoop-2.7.7/share/hadoop/tools/lib/hadoop-streaming-2.7.7.jar \<br>                   -Dmapred.reduce.tasks=1 \<br>                   -input <span class="hljs-string">&quot;/user/root/input/&quot;</span> \<br>                   -output <span class="hljs-string">&quot;/user/root/output/&quot;</span> \<br>                   -mapper cat \<br>                   -reducer cat<br><span class="hljs-built_in">wait</span><br>hadoop fs -mv output/part-00000 input/large_file.txt<br><span class="hljs-built_in">wait</span><br>hadoop fs -rm -R output/<br><span class="hljs-built_in">wait</span><br>hadoop fs -rm tmp/*.txt<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>hadoop</tag>
      
      <tag>big data</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Oracle pl/sql学习记录</title>
    <link href="/2019/02/15/Oracle-pl-sql%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <url>/2019/02/15/Oracle-pl-sql%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>brew 安装执行版本golang</title>
    <link href="/2019/01/24/brew-%E5%AE%89%E8%A3%85%E6%89%A7%E8%A1%8C%E7%89%88%E6%9C%ACgolang/"/>
    <url>/2019/01/24/brew-%E5%AE%89%E8%A3%85%E6%89%A7%E8%A1%8C%E7%89%88%E6%9C%ACgolang/</url>
    
    <content type="html"><![CDATA[<p>如何使用homebrew如何安装指定版本的golang版本？</p><ol><li>删除、解绑之前的版本 <code>brew uninstall go &amp;&amp; brew unlink go</code></li><li>查找可用的go版本<code>brew search go</code></li><li>安装需要的版本<code>brew install go@1.9</code></li><li>链接<code>brew link go@1.9 --force</code></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>brew</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vps 综合测试</title>
    <link href="/2018/12/13/Vps-%E7%BB%BC%E5%90%88%E6%B5%8B%E8%AF%95/"/>
    <url>/2018/12/13/Vps-%E7%BB%BC%E5%90%88%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs bash"> ========================================================= <br> \                 Superbench.sh  Script                 / <br> \       Basic system info, I/O <span class="hljs-built_in">test</span> and speedtest       / <br> \                  v1.1.3 (25 Oct 2018)                 / <br> \                   Created by Oldking                  / <br> ========================================================= <br><br> Intro: https://www.oldking.net/350.html<br> Copyright (C) 2018 Oldking oooldking@gmail.com<br> The Previous Version: superbench_old.sh<br><br> Installing Speedtest-cli ...<br> Installing tools.py ...<br> Installing Fast.com-cli ...<br>----------------------------------------------------------------------<br> Superbench.sh -- https://www.oldking.net/350.html<br> Mode  : Standard    Version : 1.1.3<br> Usage : wget -qO- git.io/superbench.sh | bash<br>----------------------------------------------------------------------<br> CPU Model            : QEMU Virtual CPU version (cpu64-rhel6)<br> CPU Cores            : 1 Cores @ 2199.998 MHz x86_64<br> CPU Cache            : 4096 KB <br> OS                   : CentOS 7.3.1611 (64 Bit) KVM<br> Kernel               : 4.10.4-1.el7.elrepo.x86_64<br> Total Space          : 9.8 GB (1.6 GB Used)<br> Total RAM            : 503 MB (74 MB Used 305 MB Buff)<br> Total SWAP           : 131 MB (0 MB Used)<br> Uptime               : 0 days 23 hour 41 min<br> Load Average         : 0.00, 0.00, 0.00<br> TCP CC               : bbr<br> ASN &amp; ISP            : AS25820, IT7 Networks Inc<br> Organization         : IT7 Networks Inc<br> Location             : Los Angeles, United States / US<br> Region               : California<br>----------------------------------------------------------------------<br> I/O Speed( 1.0GB )   : 233 MB/s<br> I/O Speed( 1.0GB )   : 469 MB/s<br> I/O Speed( 1.0GB )   : 506 MB/s<br> Average I/O Speed    : 402.7 MB/s<br>----------------------------------------------------------------------<br> Node Name        Upload Speed      Download Speed      Latency     <br> Speedtest.net    166.86 Mbit/s     707.41 Mbit/s       2.524 ms   <br> Fast.com         0.00 Mbit/s       141.6 Mbit/s        -           <br> Nanjing   CT     57.63 Mbit/s      8.80 Mbit/s         -          <br> Hangzhou  CT     75.04 Mbit/s      18.85 Mbit/s        -          <br> Shanghai  CU     112.88 Mbit/s     27.00 Mbit/s        -          <br> Xi<span class="hljs-string">&#x27;an     CU     15.33 Mbit/s      67.76 Mbit/s        -          </span><br><span class="hljs-string"> Chongqing CU     86.60 Mbit/s      12.71 Mbit/s        -          </span><br><span class="hljs-string"> Chengdu   CM     3.45 Mbit/s       5.09 Mbit/s         -          </span><br><span class="hljs-string"> Kunming   CM     16.54 Mbit/s      16.73 Mbit/s        -          </span><br><span class="hljs-string"> Guangzhou CM     7.27 Mbit/s       5.23 Mbit/s         -          </span><br><span class="hljs-string">----------------------------------------------------------------------</span><br><span class="hljs-string"> Finished in  : 4 min 21 sec</span><br><span class="hljs-string"> Timestamp    : 2018-12-13 14:19:08 GMT+8</span><br><span class="hljs-string"> Results      : /root/superbench.log</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br><span class="hljs-string"> Share result:</span><br><span class="hljs-string"> · http://www.speedtest.net/result/7876175891.png</span><br><span class="hljs-string"> · https://paste.ubuntu.com/p/SX6tV39KFh/</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>vps</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Oracle asm变更物理磁盘</title>
    <link href="/2018/12/10/Oracle-asm%E5%8F%98%E6%9B%B4%E7%89%A9%E7%90%86%E7%A3%81%E7%9B%98/"/>
    <url>/2018/12/10/Oracle-asm%E5%8F%98%E6%9B%B4%E7%89%A9%E7%90%86%E7%A3%81%E7%9B%98/</url>
    
    <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">set</span> linesize <span class="hljs-number">300</span><br><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">set</span> pagesize <span class="hljs-number">10000</span><br><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> col path <span class="hljs-keyword">for</span> a30<br><br><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">select</span> a.path, a.name, a.mode_status, b.name diskgroupname, b.type<br>  <span class="hljs-number">2</span>    <span class="hljs-keyword">from</span> v$asm_disk a, v$asm_diskgroup b<br>  <span class="hljs-number">3</span>   <span class="hljs-keyword">where</span> a.group_number <span class="hljs-operator">=</span> b.group_number;<br><br>PATH                 NAME                           MODE_ST DISKGROUPNAME                  TYPE<br><span class="hljs-comment">-------------------- ------------------------------ ------- ------------------------------ ------</span><br><span class="hljs-operator">/</span>dev<span class="hljs-operator">/</span>dm<span class="hljs-number">-5</span>            DATAVG_0000                    ONLINE  DATAVG                         EXTERN<br><span class="hljs-operator">/</span>dev<span class="hljs-operator">/</span>dm<span class="hljs-number">-4</span>            VOTE_0000                      ONLINE  VOTE                           EXTERN<br><br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">select</span> group_number,<br>  <span class="hljs-number">2</span>         name,<br>  <span class="hljs-number">3</span>         state,<br>  <span class="hljs-number">4</span>         total_mb,<br>  <span class="hljs-number">5</span>         free_mb,<br>  <span class="hljs-number">6</span>         (<span class="hljs-number">1</span> <span class="hljs-operator">-</span> trunc(free_mb <span class="hljs-operator">/</span> total_mb, <span class="hljs-number">2</span>)) <span class="hljs-operator">*</span> <span class="hljs-number">100</span> <span class="hljs-operator">||</span> <span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-keyword">as</span> pct_used<br>  <span class="hljs-number">7</span>    <span class="hljs-keyword">from</span> v$asm_diskgroup;<br><br>GROUP_NUMBER NAME                           STATE         TOTAL_MB    FREE_MB PCT_USED<br><span class="hljs-comment">------------ ------------------------------ ----------- ---------- ---------- -----------------------------------------</span><br>           <span class="hljs-number">1</span> DATAVG                         MOUNTED        <span class="hljs-number">2048000</span>     <span class="hljs-number">216660</span> <span class="hljs-number">90</span><span class="hljs-operator">%</span><br>           <span class="hljs-number">3</span> VOTE                           MOUNTED           <span class="hljs-number">1024</span>        <span class="hljs-number">628</span> <span class="hljs-number">39</span><span class="hljs-operator">%</span><br></code></pre></td></tr></table></figure><h2 id="OCR变更磁盘"><a href="#OCR变更磁盘" class="headerlink" title="OCR变更磁盘"></a>OCR变更磁盘</h2><p>检查votedisk信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">[grid@ydjysh1 ~]$ crsctl query css votedisk<br><span class="hljs-comment">##  STATE    File Universal Id                File Name Disk group</span><br>--  -----    -----------------                --------- ---------<br> 1. ONLINE   58f7bbfb70a44f00bff7205c4dcb05ea (/dev/dm-4) [VOTE]<br>Located 1 voting disk(s).<br></code></pre></td></tr></table></figure><p>检查ocr信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">[grid@ydjysh1 ~]$ ocrcheck<br>Status of Oracle Cluster Registry is as follows :<br>         Version                  :          3<br>         Total space (kbytes)     :     262120<br>         Used space (kbytes)      :       3144<br>         Available space (kbytes) :     258976<br>         ID                       : 1725997204<br>         Device/File Name         :      +VOTE<br>                                    Device/File integrity check succeeded<br><br>                                    Device/File not configured<br><br>                                    Device/File not configured<br><br>                                    Device/File not configured<br><br>                                    Device/File not configured<br><br>         Cluster registry integrity check succeeded<br><br>         Logical corruption check bypassed due to non-privileged user<br><br></code></pre></td></tr></table></figure><p>新建ocr磁盘组</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">create</span> diskgroup ocr<br>  normal redundancy<br>  disk <span class="hljs-string">&#x27;/dev/mapper/newocr1&#x27;</span>,<span class="hljs-string">&#x27;/dev/mapper/newocr2&#x27;</span>,<span class="hljs-string">&#x27;/dev/mapper/newocr3&#x27;</span> ATTRIBUTE <span class="hljs-string">&#x27;compatible.asm&#x27;</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;11.2.0.0.0&#x27;</span>;<br><br></code></pre></td></tr></table></figure><p>替换votedisk磁盘组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">crsctl replace votedisk +OCR<br></code></pre></td></tr></table></figure><p>替换ocr</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs BASH">ocrconfig -add +OCR<br>ocrconfig -delete +VOTE<br></code></pre></td></tr></table></figure><p>spfile变更位置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">show</span> <span class="hljs-keyword">parameter</span> spfile;<br><br>NAME                                 TYPE        <span class="hljs-keyword">VALUE</span><br><span class="hljs-comment">------------------------------------ ----------- ------------------------------</span><br>spfile                               string      <span class="hljs-operator">+</span>VOTE<span class="hljs-operator">/</span>ydjysh<span class="hljs-operator">-</span>cluster<span class="hljs-operator">/</span>asmparame<br>                                                 terfile<span class="hljs-operator">/</span>registry<span class="hljs-number">.253</span><span class="hljs-number">.953473427</span><br><br><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">create</span> pfile<span class="hljs-operator">=</span><span class="hljs-string">&#x27;$ORACLE_HOME/dbs/init+ASM.ora&#x27;</span> <span class="hljs-keyword">from</span> spfile; <br><br><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> shutdown abort<br><br><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> startup pfile<span class="hljs-operator">=</span>$ORACLE_HOME<span class="hljs-operator">/</span>dbs<span class="hljs-operator">/</span>init<span class="hljs-operator">+</span>ASM.ora;<br><br><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">create</span> spfile<span class="hljs-operator">=</span><span class="hljs-string">&#x27;+OCR&#x27;</span> <span class="hljs-keyword">from</span> pfile<span class="hljs-operator">=</span><span class="hljs-string">&#x27;$ORACLE_HOME/dbs/init+ASM.ora&#x27;</span>;<br></code></pre></td></tr></table></figure><h2 id="DATA变更磁盘"><a href="#DATA变更磁盘" class="headerlink" title="DATA变更磁盘"></a>DATA变更磁盘</h2><p>添加新磁盘同步数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">alter</span> diskgroup DATAVG <span class="hljs-keyword">add</span> disk <span class="hljs-string">&#x27;/dev/mapper/newdata1&#x27;</span>,<span class="hljs-string">&#x27;/dev/mapper/newdata2&#x27;</span> rebalance power <span class="hljs-number">10</span>;<br></code></pre></td></tr></table></figure><p>删除磁盘同步数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 这里给的名字是diskgroup里面查看到的名字</span><br><span class="hljs-keyword">alter</span> diskgroup FRA <span class="hljs-keyword">drop</span> disk <span class="hljs-string">&#x27;FRA_0000&#x27;</span> rebalance power <span class="hljs-number">10</span>;<br></code></pre></td></tr></table></figure><p>查看同步状态</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> v$asm_operation<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>oracle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pip 变更阿里源</title>
    <link href="/2018/11/21/pip-%E5%8F%98%E6%9B%B4%E9%98%BF%E9%87%8C%E6%BA%90/"/>
    <url>/2018/11/21/pip-%E5%8F%98%E6%9B%B4%E9%98%BF%E9%87%8C%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">mkdir ~/.pip<br>tee ~/.pip/pip.conf &lt;&lt;EOF<br>[<span class="hljs-keyword">global</span>]<br><span class="hljs-keyword">index</span>-url = http://mirrors.aliyun.com/pypi/simple/<br>[install]<br><span class="hljs-keyword">trusted</span>-host=mirrors.aliyun.com<br>EOF<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-使用ntp服务时间同步</title>
    <link href="/2018/11/13/Linux-%E4%BD%BF%E7%94%A8ntp%E6%9C%8D%E5%8A%A1%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/"/>
    <url>/2018/11/13/Linux-%E4%BD%BF%E7%94%A8ntp%E6%9C%8D%E5%8A%A1%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="Linux-Time-Zone"><a href="#Linux-Time-Zone" class="headerlink" title="Linux Time Zone"></a>Linux Time Zone</h3><p>列出所有时区</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">timedatectl list-timezones</span><br></code></pre></td></tr></table></figure><p>设置硬件时钟和本机一致</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">timedatectl</span> <span class="hljs-built_in">set-local-rtc</span> <span class="hljs-string">1</span><br></code></pre></td></tr></table></figure><p>设置时区为上海</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">timedatectl</span> <span class="hljs-built_in">set-timezone</span> <span class="hljs-string">Asia</span>/<span class="hljs-string">Shanghai</span><br></code></pre></td></tr></table></figure><h3 id="Real-Time-Clock-RTC-and-System-Clock"><a href="#Real-Time-Clock-RTC-and-System-Clock" class="headerlink" title="Real Time Clock(RTC) and System Clock"></a>Real Time Clock(RTC) and System Clock</h3><p>说道设置时间这里还要明确另外一个概念就是在一台计算机上我们有两个时钟:一个称之为硬件时间时钟(RTC),还有一个称之为系统时钟(System Clock)</p><p>硬件时钟是指嵌在主板上的特殊的电路, 它的存在就是平时我们关机之后还可以计算时间的原因<br>系统时钟就是<a href="http://lib.csdn.net/base/operatingsystem">操作系统</a>的kernel所用来计算时间的时钟. 它从1970年1月1日00:00:00 UTC时间到目前为止秒数总和的值 在Linux下系统时间在开机的时候会和硬件时间同步(synchronization),之后也就各自独立运行了。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp">查看硬件时钟<br>hwclock --show<br><br><span class="hljs-comment">//以系统时间为基准，修改硬件时间</span><br>[<span class="hljs-meta">root@localhost ~</span>]<span class="hljs-meta"># hwclock --systohc    &lt;== sys（系统时间）to（写到）hc（Hard Clock）</span><br>[<span class="hljs-meta">root@localhost ~</span>]<span class="hljs-meta"># hwclock -w</span><br><br><span class="hljs-comment">//以硬件时间为基准，修改系统时间</span><br><br>[<span class="hljs-meta">root@localhost ~</span>]<span class="hljs-meta"># hwclock --hctosys</span><br>[<span class="hljs-meta">root@localhost ~</span>]<span class="hljs-meta"># hwclock -s</span><br></code></pre></td></tr></table></figure><h3 id="ntp-时间服务"><a href="#ntp-时间服务" class="headerlink" title="ntp 时间服务"></a>ntp 时间服务</h3><h4 id="用ntpdate从时间服务器更新时间"><a href="#用ntpdate从时间服务器更新时间" class="headerlink" title="用ntpdate从时间服务器更新时间"></a>用ntpdate从时间服务器更新时间</h4><p>如果你的linux系统根本没有ntpdate这个命令</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> ntp<br></code></pre></td></tr></table></figure><p>安装完了之后，你不要做什么配置，也不需要，直接测试一下</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-attr">[root@localhost ~]</span># <span class="hljs-selector-tag">ntpdate</span> <span class="hljs-selector-tag">time</span><span class="hljs-selector-class">.nist</span><span class="hljs-selector-class">.gov</span>  <br><span class="hljs-selector-tag">22</span> <span class="hljs-selector-tag">Oct</span> <span class="hljs-selector-tag">21</span>:<span class="hljs-selector-tag">11</span>:<span class="hljs-selector-tag">43</span> <span class="hljs-selector-tag">ntpdate</span><span class="hljs-selector-attr">[5014]</span>: <span class="hljs-selector-tag">adjust</span> <span class="hljs-selector-tag">time</span> <span class="hljs-selector-tag">server</span> <span class="hljs-selector-tag">207</span><span class="hljs-selector-class">.200</span><span class="hljs-selector-class">.81</span><span class="hljs-selector-class">.113</span> <span class="hljs-selector-tag">offset</span> <span class="hljs-selector-tag">-0</span><span class="hljs-selector-class">.018788</span> <span class="hljs-selector-tag">sec</span><br></code></pre></td></tr></table></figure><p>如果出去上面的内容说明，同步成功了。然后在crontab里面加上以下内容。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">*/<span class="hljs-number">10</span> * * * * ntpdate <span class="hljs-built_in">time</span>.nist.gov   <span class="hljs-comment">#域名或IP</span><br></code></pre></td></tr></table></figure><h4 id="用ntp搭建自己的时间服务器"><a href="#用ntp搭建自己的时间服务器" class="headerlink" title="用ntp搭建自己的时间服务器"></a>用ntp搭建自己的时间服务器</h4><p>安装时间服务器ntp</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> ntp<br></code></pre></td></tr></table></figure><p>配置ntp server</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@ceph-mon1 ~]# cat <span class="hljs-regexp">/etc/</span>ntp.conf |awk <span class="hljs-string">&#x27;&#123;if($0 !~ /^$/ &amp;&amp; $0 !~ /^#/) &#123;print $0&#125;&#125;&#x27;</span>  <br>driftfile <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/ntp/</span>drift<br>restrict <span class="hljs-keyword">default</span> nomodify notrap nopeer noquery<br>restrict <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span> <br>restrict ::<span class="hljs-number">1</span><br>restrict <span class="hljs-number">10.117</span>.<span class="hljs-number">130.0</span> mask <span class="hljs-number">255.255</span>.<span class="hljs-number">255.0</span> nomodify notrap<br>server <span class="hljs-number">0</span>.cn.pool.ntp.org<br>server <span class="hljs-number">1</span>.cn.pool.ntp.org<br>server <span class="hljs-number">2</span>.cn.pool.ntp.org<br>server <span class="hljs-number">3</span>.cn.pool.ntp.org<br>server <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span> # local clock<br>fudge <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span> stratum <span class="hljs-number">10</span><br>includefile <span class="hljs-regexp">/etc/</span>ntp<span class="hljs-regexp">/crypto/</span>pw<br>keys <span class="hljs-regexp">/etc/</span>ntp/keys<br>disable monitor<br></code></pre></td></tr></table></figure><p>启动ntp</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@ceph</span>-mon1 ~]<span class="hljs-meta"># systemctl restart ntpd</span><br>[root<span class="hljs-symbol">@ceph</span>-mon1 ~]<span class="hljs-meta"># systemctl enable ntpd</span><br></code></pre></td></tr></table></figure><p>查看并测试</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@ceph-mon1 ~]<span class="hljs-comment"># ntpq -pn</span><br>     remote           refid      st t when poll reach   delay   offset  jitter<br>==============================================================================<br> 139.162.72.14   .INIT.         <span class="hljs-number"> 16 </span>u    -  <span class="hljs-number"> 64 </span>  <span class="hljs-number"> 0 </span>   0.000    0.000   0.000<br> 51.174.171.7    129.242.4.241   <span class="hljs-number"> 2 </span>u  <span class="hljs-number"> 15 </span> <span class="hljs-number"> 64 </span>  <span class="hljs-number"> 1 </span> 387.472   81.381   0.000<br> 188.39.37.91    .INIT.         <span class="hljs-number"> 16 </span>u    -  <span class="hljs-number"> 64 </span>  <span class="hljs-number"> 0 </span>   0.000    0.000   0.000<br> 173.255.246.13  .INIT.         <span class="hljs-number"> 16 </span>u    -  <span class="hljs-number"> 64 </span>  <span class="hljs-number"> 0 </span>   0.000    0.000   0.000<br> 127.0.0.1       .INIT.         <span class="hljs-number"> 16 </span>l    -  <span class="hljs-number"> 64 </span>  <span class="hljs-number"> 0 </span>   0.000    0.000   0.000<br> <br> [root@ceph-mon1 ~]<span class="hljs-comment"># ntpstat</span><br>unsynchronised<br>   polling server every<span class="hljs-number"> 8 </span>s<br></code></pre></td></tr></table></figure><p>配置ntp client</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">vi <span class="hljs-regexp">/etc/</span>ntp.conf<br><span class="hljs-comment"># 选择内网的ntp服务器地址，域名后者IP</span><br>server <span class="hljs-number">10.117</span>.<span class="hljs-number">130.173</span><br></code></pre></td></tr></table></figure><h4 id="如何同步硬件时钟"><a href="#如何同步硬件时钟" class="headerlink" title="如何同步硬件时钟?"></a>如何同步硬件时钟?</h4><p>NTP一般只会同步system clock. 但是如果我们也要同步RTC(hwclock)的话那么只需要把下面的选项打开就可以了</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># vi /etc/sysconfig/ntpd</span><br><span class="hljs-attr">SYNC_HWCLOCK</span>=<span class="hljs-literal">yes</span><br></code></pre></td></tr></table></figure><h4 id="时间服务器的选择"><a href="#时间服务器的选择" class="headerlink" title="时间服务器的选择"></a>时间服务器的选择</h4><p>尽量选择官方的</p><blockquote><p><a href="http://www.pool.ntp.org/en/">http://www.pool.ntp.org/en/</a></p></blockquote><p>我是在官网里找的🇨🇳的时间服务器</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">server <span class="hljs-number">0</span><span class="hljs-selector-class">.cn</span><span class="hljs-selector-class">.pool</span><span class="hljs-selector-class">.ntp</span><span class="hljs-selector-class">.org</span><br>server <span class="hljs-number">1</span><span class="hljs-selector-class">.cn</span><span class="hljs-selector-class">.pool</span><span class="hljs-selector-class">.ntp</span><span class="hljs-selector-class">.org</span><br>server <span class="hljs-number">2</span><span class="hljs-selector-class">.cn</span><span class="hljs-selector-class">.pool</span><span class="hljs-selector-class">.ntp</span><span class="hljs-selector-class">.org</span><br>server <span class="hljs-number">3</span><span class="hljs-selector-class">.cn</span><span class="hljs-selector-class">.pool</span><span class="hljs-selector-class">.ntp</span>.org<br></code></pre></td></tr></table></figure><h4 id="RHEL7-CentOS7-NTP开机无法启动"><a href="#RHEL7-CentOS7-NTP开机无法启动" class="headerlink" title="RHEL7/CentOS7 NTP开机无法启动"></a>RHEL7/CentOS7 NTP开机无法启动</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 查看是否开机启动</span><br>[root<span class="hljs-symbol">@node2</span> ~]<span class="hljs-meta"># systemctl is-enabled ntpd</span><br>enabled<br><br><span class="hljs-meta"># 通过查询发现有一个chronyd服务设置为开机自启动，这个服务导致ntp无法开启自启动</span><br>[root<span class="hljs-symbol">@node2</span> ~]<span class="hljs-meta"># systemctl disable chronyd</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Deep learning 使用云GPU主机配置</title>
    <link href="/2018/11/13/Deep-learning-%E4%BD%BF%E7%94%A8%E4%BA%91GPU%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE/"/>
    <url>/2018/11/13/Deep-learning-%E4%BD%BF%E7%94%A8%E4%BA%91GPU%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="GPU云主机配置"><a href="#GPU云主机配置" class="headerlink" title="GPU云主机配置"></a>GPU云主机配置</h1><p>深度学习对计算要求太高了，没有高配的电脑，只好搭建GPU云主机。使用价格相对便宜的滴滴云。</p><ul><li>GPU主机的基本配置</li><li>anaconda的安装和依赖包的安装</li><li>jupyter_notebooks的使用</li></ul><h2 id="配置主机"><a href="#配置主机" class="headerlink" title="配置主机"></a>配置主机</h2><p>控制台-&gt;创建云服务器-&gt;GPU云服务器-&gt;选择镜像(一定选择gpu驱动的)</p><p>网络带宽这块由于初始需要安装更新，建议使用10M左右的贷款。以为云是按时间计费的，网络慢在时间上花的钱会更多。</p><p>等分配公网ip后可以使用ssh工具登陆了。</p><h2 id="anconda3安装"><a href="#anconda3安装" class="headerlink" title="anconda3安装"></a>anconda3安装</h2><p>首先安装anconda3，使用的是清华下载镜像，国外网速会超级慢，用wget下载安装文件</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda<span class="hljs-number">3</span>-<span class="hljs-number">5</span>.<span class="hljs-number">2</span>.<span class="hljs-number">0</span>-Linux-x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.sh<br><br><span class="hljs-attribute">sh</span> Anaconda<span class="hljs-number">3</span>-<span class="hljs-number">5</span>.<span class="hljs-number">2</span>.<span class="hljs-number">0</span>-Linux-x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.sh<br></code></pre></td></tr></table></figure><p>设置anaconda install源：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">conda<span class="hljs-built_in"> config </span>--<span class="hljs-builtin-name">add</span> channels <span class="hljs-string">&#x27;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/&#x27;</span><br>conda<span class="hljs-built_in"> config </span>--<span class="hljs-builtin-name">set</span> show_channel_urls <span class="hljs-literal">yes</span><br></code></pre></td></tr></table></figure><h2 id="jupyter-notebook的使用"><a href="#jupyter-notebook的使用" class="headerlink" title="jupyter notebook的使用"></a>jupyter notebook的使用</h2><p>创建jupyter notebook环境，附带的会安装一些依赖包。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">conda create -n jupyter_notebook <span class="hljs-attribute">python</span>=3<br></code></pre></td></tr></table></figure><p>激活环境</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">source <span class="hljs-built_in">activate</span> jupyter_notebook<br></code></pre></td></tr></table></figure><p>jupyter notebook环境中安装依赖包</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">coda <span class="hljs-keyword">install </span><span class="hljs-keyword">jupyter </span>notebook<br></code></pre></td></tr></table></figure><p>tensorflow-gpu安装</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 默认会安装1.3然后和本地写出来的程序不兼容，更新最新的也会报错。无奈使用1.4</span><br><span class="hljs-attribute">conda</span> install tensorflow-gpu=<span class="hljs-number">1</span>.<span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><p>测试显卡：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">In [<span class="hljs-number">1</span>]: <span class="hljs-keyword">import</span> tensorflow <span class="hljs-keyword">as</span> tf<br>In [<span class="hljs-number">2</span>]: <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;tensorflow version:&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(tf.__version__))<br>tensorflow version:<span class="hljs-number">1.3</span><span class="hljs-number">.0</span><br>In [<span class="hljs-number">3</span>]: <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;default gpu device &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(tf.test.gpu_device_name()))<br>device: <span class="hljs-number">0</span>, name: Tesla M60, pci bus <span class="hljs-built_in">id</span>: <span class="hljs-number">0000</span>:<span class="hljs-number">00</span>:<span class="hljs-number">15.0</span><br></code></pre></td></tr></table></figure><p>jupyter notebook的配置：<br>需要生成jupyter notebook配置文件</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">(jupyter_notebook) tream@Tream733:/root$ jupyter notebook --<span class="hljs-keyword">generate</span>-<span class="hljs-keyword">config</span><br>Writing <span class="hljs-keyword">default</span> <span class="hljs-keyword">config</span> to: /home/tream/<span class="hljs-variable">.jupyter</span>/jupyter_notebook_config<span class="hljs-variable">.py12</span><br></code></pre></td></tr></table></figure><p>调用ipython设置jupyter notebook密码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">(jupyter_notebook) tream@Tream733:/root$ ipython<br>Python <span class="hljs-number">3.6</span>.<span class="hljs-number">2</span> |Continuum Analytics, Inc.| (default, Jul <span class="hljs-number">20</span> <span class="hljs-number">2017</span>, <span class="hljs-number">13</span>:<span class="hljs-number">51</span>:<span class="hljs-number">32</span>) <br>Type <span class="hljs-string">&#x27;copyright&#x27;</span>, <span class="hljs-string">&#x27;credits&#x27;</span> or <span class="hljs-string">&#x27;license&#x27;</span> <span class="hljs-keyword">for</span> more information<br>IPython <span class="hljs-number">6.1</span>.<span class="hljs-number">0</span> -- An enhanced Interactive Python. Type <span class="hljs-string">&#x27;?&#x27;</span> <span class="hljs-keyword">for</span> help.<br>In [<span class="hljs-number">1</span>]: from notebook.auth import passwd<br>In [<span class="hljs-number">2</span>]: passwd()<br>Enter password: <br>Verify password: <br>Out[<span class="hljs-number">2</span>]: <span class="hljs-string">&#x27;sha1:b804cd47ff66:7c1d4a54809c54c356ae406b05c4c50767cc7958&#x27;</span><br>In [<span class="hljs-number">3</span>]: <span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><blockquote><p>记录下’sha1:b804cd47ff66:7c1d4a54809c54c356ae406b05c4c50767cc7958’，在文件配置时候要用。<br>配置jupyter notebook的config文件</p></blockquote><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tream</span>@Tream<span class="hljs-number">733</span>:/root$ vi /home/tream/.jupyter/jupyter_notebook_config.py<span class="hljs-number">1</span><br><span class="hljs-attribute">c</span>.NotebookApp.ip = &#x27;*&#x27;<br><span class="hljs-attribute">c</span>.NotebookApp.password = &#x27;sha<span class="hljs-number">1</span>:b<span class="hljs-number">804</span>cd<span class="hljs-number">47</span>ff<span class="hljs-number">66</span>:<span class="hljs-number">7</span>c<span class="hljs-number">1</span>d<span class="hljs-number">4</span>a<span class="hljs-number">54809</span>c<span class="hljs-number">54</span>c<span class="hljs-number">356</span>ae<span class="hljs-number">406</span>b<span class="hljs-number">05</span>c<span class="hljs-number">4</span>c<span class="hljs-number">50767</span>cc<span class="hljs-number">7958</span>&#x27;<br><span class="hljs-attribute">c</span>.NotebookApp.open_browser = False<br></code></pre></td></tr></table></figure><p>启动</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">jupyter notebook</span><br></code></pre></td></tr></table></figure><hr><p>保存快照，设置暴露8888端口就可以愉快的使用了。</p><p>使用完了记得要删除云主机，下次使用的时候用快照恢复就可以。 快照有免费的20G额度。</p>]]></content>
    
    
    
    <tags>
      
      <tag>deep learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux lvm逻辑卷扩展文件系统</title>
    <link href="/2018/11/13/Linux-lvm%E9%80%BB%E8%BE%91%E5%8D%B7%E6%89%A9%E5%B1%95%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    <url>/2018/11/13/Linux-lvm%E9%80%BB%E8%BE%91%E5%8D%B7%E6%89%A9%E5%B1%95%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<p>lvm扩展文件系统</p><p>增加pv</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">pvcreate <span class="hljs-regexp">/dev/</span>sda<br></code></pre></td></tr></table></figure><p>增加vg</p><figure class="highlight irpf90"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs irpf90">vgextend cl /dev/sda3<br><br>[root@node04 ~]# vgdisplay <br>  --- Volume group ---<br>  VG <span class="hljs-keyword">Name</span>               cl<br>  System ID             <br>  <span class="hljs-keyword">Format</span>                lvm2<br>  Metadata Areas        <span class="hljs-number">2</span><br>  Metadata <span class="hljs-keyword">Sequence</span> No  <span class="hljs-number">6</span><br>  VG <span class="hljs-keyword">Access</span>             read/<span class="hljs-built_in">write</span><br>  VG <span class="hljs-keyword">Status</span>             resizable<br>  <span class="hljs-built_in">MAX</span> LV                <span class="hljs-number">0</span><br>  Cur LV                <span class="hljs-number">3</span><br>  Open LV               <span class="hljs-number">3</span><br>  <span class="hljs-built_in">Max</span> PV                <span class="hljs-number">0</span><br>  Cur PV                <span class="hljs-number">2</span><br>  Act PV                <span class="hljs-number">2</span><br>  VG <span class="hljs-built_in">Size</span>               <span class="hljs-number">98.99</span> GiB<br>  PE <span class="hljs-built_in">Size</span>               <span class="hljs-number">4.00</span> MiB<br>  Total PE              <span class="hljs-number">25342</span><br>  Alloc PE / <span class="hljs-built_in">Size</span>       <span class="hljs-number">25342</span> / <span class="hljs-number">98.99</span> GiB<br>  <span class="hljs-keyword">Free</span>  PE / <span class="hljs-built_in">Size</span>       <span class="hljs-number">0</span> / <span class="hljs-number">0</span>   <br>  VG UUID               ZlMYJK-<span class="hljs-number">8</span>se1-<span class="hljs-number">1</span>FxA-hLQF-BIFK-rlOg-lIK5vN<br></code></pre></td></tr></table></figure><p>增加lv 方法1</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># +10239是Free  PE / Size可以在vgdisplay中查看</span><br>lvresize -l +<span class="hljs-number">10239</span> <span class="hljs-regexp">/dev/</span>cl/root<br></code></pre></td></tr></table></figure><p>扩展文件系统</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">xfs_growfs  <span class="hljs-regexp">/dev/</span>cl/root<br></code></pre></td></tr></table></figure><p>增加lv 方法2</p><p>分配到lv扩展文件系统一条命令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">lvextend -l +<span class="hljs-number">100</span>%free -f -r  <span class="hljs-regexp">/dev/</span>vg_webserver/lv_root<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Oracle asm变更磁盘组恢复数据文件</title>
    <link href="/2018/11/13/Oracle-asm%E5%8F%98%E6%9B%B4%E7%A3%81%E7%9B%98%E7%BB%84%E6%81%A2%E5%A4%8D%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6/"/>
    <url>/2018/11/13/Oracle-asm%E5%8F%98%E6%9B%B4%E7%A3%81%E7%9B%98%E7%BB%84%E6%81%A2%E5%A4%8D%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>asm磁盘组被公司人员删除导致数据库无法启动</p><p>查看3个数据文件丢失</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sas">SYS@newznsh1&gt; <span class="hljs-meta">select</span> <span class="hljs-meta">file</span>#,<span class="hljs-meta">error</span> <span class="hljs-meta">from</span> v$recover_file;<br><br>     <span class="hljs-meta">FILE</span># <span class="hljs-meta">ERROR</span><br>---------- -----------------------------------------------------------------<br>       112 <span class="hljs-meta">FILE</span> <span class="hljs-meta">NOT</span> FOUND<br>       113 <span class="hljs-meta">FILE</span> <span class="hljs-meta">NOT</span> FOUND<br>       114 <span class="hljs-meta">FILE</span> <span class="hljs-meta">NOT</span> FOUND<br></code></pre></td></tr></table></figure><p>使用rman进行数据文件恢复</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs llvm">run<br>&#123;<br>allocate channel <span class="hljs-keyword">c</span><span class="hljs-number">1</span> <span class="hljs-keyword">type</span> disk maxpiecesize <span class="hljs-number">64</span>g<span class="hljs-comment">;</span><br>allocate channel <span class="hljs-keyword">c</span><span class="hljs-number">2</span> <span class="hljs-keyword">type</span> disk maxpiecesize <span class="hljs-number">64</span>g<span class="hljs-comment">;</span><br>allocate channel <span class="hljs-keyword">c</span><span class="hljs-number">3</span> <span class="hljs-keyword">type</span> disk maxpiecesize <span class="hljs-number">64</span>g<span class="hljs-comment">;</span><br>set newname for datafile  <span class="hljs-number">112</span> <span class="hljs-keyword">to</span>  <span class="hljs-string">&quot;+DATAVG&quot;</span><span class="hljs-comment">;</span><br>set newname for datafile  <span class="hljs-number">113</span> <span class="hljs-keyword">to</span>  <span class="hljs-string">&quot;+DATAVG&quot;</span><span class="hljs-comment">;</span><br>set newname for datafile  <span class="hljs-number">114</span> <span class="hljs-keyword">to</span>  <span class="hljs-string">&quot;+DATAVG&quot;</span><span class="hljs-comment">;</span><br>restore datafile <span class="hljs-number">112</span><span class="hljs-punctuation">,</span><span class="hljs-number">113</span><span class="hljs-punctuation">,</span><span class="hljs-number">114</span><span class="hljs-comment">;</span><br><span class="hljs-keyword">switch</span> datafile all<span class="hljs-comment">;</span><br>recover datafile <span class="hljs-number">112</span><span class="hljs-punctuation">,</span><span class="hljs-number">113</span><span class="hljs-punctuation">,</span><span class="hljs-number">114</span><span class="hljs-comment">;</span><br><span class="hljs-keyword">release</span> channel <span class="hljs-keyword">c</span><span class="hljs-number">1</span><span class="hljs-comment">;</span><br><span class="hljs-keyword">release</span> channel <span class="hljs-keyword">c</span><span class="hljs-number">2</span><span class="hljs-comment">;</span><br><span class="hljs-keyword">release</span> channel <span class="hljs-keyword">c</span><span class="hljs-number">3</span><span class="hljs-comment">;</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>oracle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cdh 安装spark2</title>
    <link href="/2018/11/13/Cdh-%E5%AE%89%E8%A3%85spark2/"/>
    <url>/2018/11/13/Cdh-%E5%AE%89%E8%A3%85spark2/</url>
    
    <content type="html"><![CDATA[<p>cdh 5.7 离线安装spark2.1</p><p>官方文档<a href="https://www.cloudera.com/documentation/spark2/latest/topics/spark2_installing.html">https://www.cloudera.com/documentation/spark2/latest/topics/spark2_installing.html</a></p><p>首先应该先查看版本对应关系</p><table><thead><tr><th>CDS Powered By Apache Spark Version</th><th>CDH Version</th></tr></thead><tbody><tr><td>2.3 Release 3</td><td>CDH 5.9 and any higher CDH 5.x versions</td></tr><tr><td>2.3 Release 2</td><td>CDH 5.9 and any higher CDH 5.x versions</td></tr><tr><td>2.3 Release 1</td><td>Not released due to late bug discovered. If downloaded do not use.</td></tr><tr><td>2.2 Release 2</td><td>CDH 5.8 and any higher CDH 5.x versions</td></tr><tr><td>2.2 Release 1</td><td>CDH 5.8, CDH 5.9, CDH 5.10, CDH 5.11, CDH 5.12, CDH 5.13</td></tr><tr><td>2.1 Release 2</td><td>CDH 5.7, CDH 5.8, CDH 5.9, CDH 5.10, CDH 5.11, CDH 5.12, and any higher CDH 5.x versions</td></tr><tr><td>2.1 Release 1</td><td>CDH 5.7, CDH 5.8, CDH 5.9, CDH 5.10, CDH 5.11, CDH 5.12</td></tr><tr><td>2.0 Release 2</td><td>CDH 5.7, CDH 5.8, CDH 5.9, CDH 5.10, CDH 5.11</td></tr><tr><td>2.0 Release 1</td><td>CDH 5.7 up to 5.7.5, CDH 5.8 up to 5.8.4, CDH 5.9 up to 5.9.1, CDH 5.10.0. Spark 2.0 Release 2 is required for any higher maintenance releases in any of these CDH versions.</td></tr></tbody></table><p><a href="http://archive.cloudera.com/spark2/">http://archive.cloudera.com/spark2/</a></p><p>下载安装包csd、parcels两种，根据自己的系统选择版本。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">[root@master01 csd]<span class="hljs-comment"># ll</span><br>total <span class="hljs-number">16</span><br>-rw-r--r-- <span class="hljs-number">1</span> <span class="hljs-keyword">cloudera-scm </span><span class="hljs-keyword">cloudera-scm </span><span class="hljs-number">15845</span> <span class="hljs-keyword">Jul </span><span class="hljs-number">27</span> <span class="hljs-number">14</span>:<span class="hljs-number">08</span> SPARK2_ON_YARN<span class="hljs-number">-2</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-keyword">cloudera2.jar</span><br><span class="hljs-keyword"></span><br>[root@master01 parcel-repo]<span class="hljs-comment"># ll</span><br>total <span class="hljs-number">1583104</span><br>-rw-r--r-- <span class="hljs-number">1</span> <span class="hljs-keyword">cloudera-scm </span><span class="hljs-keyword">cloudera-scm </span><span class="hljs-number">1448796525</span> <span class="hljs-keyword">Jul </span><span class="hljs-number">19</span> <span class="hljs-number">14</span>:<span class="hljs-number">44</span> CDH<span class="hljs-number">-5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">6</span><span class="hljs-number">-1</span>.cdh5.<span class="hljs-number">7</span>.<span class="hljs-number">6</span>.p0.<span class="hljs-number">6</span>-el7.parcel<br>-rw-r--r-- <span class="hljs-number">1</span> <span class="hljs-keyword">cloudera-scm </span><span class="hljs-keyword">cloudera-scm </span>        <span class="hljs-number">41</span> <span class="hljs-keyword">Jul </span><span class="hljs-number">19</span> <span class="hljs-number">10</span>:<span class="hljs-number">55</span> CDH<span class="hljs-number">-5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">6</span><span class="hljs-number">-1</span>.cdh5.<span class="hljs-number">7</span>.<span class="hljs-number">6</span>.p0.<span class="hljs-number">6</span>-el7.parcel.<span class="hljs-keyword">sha</span><br><span class="hljs-keyword"></span>-rw-r----- <span class="hljs-number">1</span> <span class="hljs-keyword">cloudera-scm </span><span class="hljs-keyword">cloudera-scm </span>     <span class="hljs-number">55444</span> <span class="hljs-keyword">Jul </span><span class="hljs-number">20</span> <span class="hljs-number">11</span>:<span class="hljs-number">24</span> CDH<span class="hljs-number">-5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">6</span><span class="hljs-number">-1</span>.cdh5.<span class="hljs-number">7</span>.<span class="hljs-number">6</span>.p0.<span class="hljs-number">6</span>-el7.parcel.torrent<br>-rw-r--r-- <span class="hljs-number">1</span> <span class="hljs-keyword">cloudera-scm </span><span class="hljs-keyword">cloudera-scm </span>      <span class="hljs-number">4650</span> Feb  <span class="hljs-number">5</span> <span class="hljs-number">23</span>:<span class="hljs-number">12</span> manifest.<span class="hljs-keyword">json</span><br><span class="hljs-keyword"></span>-rw-r--r-- <span class="hljs-number">1</span> <span class="hljs-keyword">cloudera-scm </span><span class="hljs-keyword">cloudera-scm </span>     <span class="hljs-number">49962</span> <span class="hljs-keyword">Jul </span><span class="hljs-number">19</span> <span class="hljs-number">17</span>:<span class="hljs-number">27</span> manifest.<span class="hljs-keyword">json.cdh</span><br><span class="hljs-keyword"></span>-rw-r--r-- <span class="hljs-number">1</span> <span class="hljs-keyword">cloudera-scm </span><span class="hljs-keyword">cloudera-scm </span> <span class="hljs-number">172161150</span> <span class="hljs-keyword">Jul </span><span class="hljs-number">27</span> <span class="hljs-number">14</span>:<span class="hljs-number">14</span> SPARK2<span class="hljs-number">-2</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-keyword">cloudera2-1.cdh5.7.0.p0.171658-el7.parcel</span><br><span class="hljs-keyword"></span>-rw-r--r-- <span class="hljs-number">1</span> <span class="hljs-keyword">cloudera-scm </span><span class="hljs-keyword">cloudera-scm </span>        <span class="hljs-number">41</span> <span class="hljs-keyword">Jul </span><span class="hljs-number">27</span> <span class="hljs-number">14</span>:<span class="hljs-number">17</span> SPARK2<span class="hljs-number">-2</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-keyword">cloudera2-1.cdh5.7.0.p0.171658-el7.parcel.sha</span><br><span class="hljs-keyword"></span>-rw-r----- <span class="hljs-number">1</span> root         root               <span class="hljs-number">6760</span> <span class="hljs-keyword">Jul </span><span class="hljs-number">27</span> <span class="hljs-number">14</span>:<span class="hljs-number">27</span> SPARK2<span class="hljs-number">-2</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-keyword">cloudera2-1.cdh5.7.0.p0.171658-el7.parcel.torrent</span><br></code></pre></td></tr></table></figure><p>重启scm server服务</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/opt/</span>cm-<span class="hljs-number">5.7</span>.<span class="hljs-number">6</span><span class="hljs-regexp">/etc/i</span>nit.d/cloudera-scm-server reatart<br></code></pre></td></tr></table></figure><p>进入cm web</p><p>点击主机 =&gt; Parcel 找到spark2分发</p><p>分发成功后安装spark2服务</p>]]></content>
    
    
    
    <tags>
      
      <tag>hadoop</tag>
      
      <tag>cdh</tag>
      
      <tag>spark</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Oracle 使用catalog start with删除过期备份</title>
    <link href="/2018/11/13/Oracle-%E4%BD%BF%E7%94%A8catalog-start-with%E5%88%A0%E9%99%A4%E8%BF%87%E6%9C%9F%E5%A4%87%E4%BB%BD/"/>
    <url>/2018/11/13/Oracle-%E4%BD%BF%E7%94%A8catalog-start-with%E5%88%A0%E9%99%A4%E8%BF%87%E6%9C%9F%E5%A4%87%E4%BB%BD/</url>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>系统磁盘紧张，查看oracle备份文件存在大量过期备份。</p><h2 id="处理记录"><a href="#处理记录" class="headerlink" title="处理记录"></a>处理记录</h2><p>使用rman查看控制文件是否包括元数据</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-comment">-- 经过查看控制文件已经没有对应元数据信息</span><br>RMAN&gt; list backup <span class="hljs-keyword">summary</span>;<br></code></pre></td></tr></table></figure><p>使用catalog start with rman备份集直接导入控制文件中</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">RMAN&gt; catalog <span class="hljs-keyword">start</span> <span class="hljs-keyword">with</span> <span class="hljs-string">&#x27;/data01/&#x27;</span>;<br></code></pre></td></tr></table></figure><p>删除过期备份</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf">RMAN&gt; crosscheck backup<span class="hljs-comment">;</span><br>RMAN&gt; delete noprompt obsolete<span class="hljs-comment">;</span><br>RMAN&gt; delete noprompt expired backup<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>经过删除后，备份集已经删除。剩余arch备份集、control备份未删除</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">RMAN&gt; <span class="hljs-keyword">delete</span> backup of archivelog <span class="hljs-keyword">until</span> <span class="hljs-keyword">time</span> <span class="hljs-string">&#x27;sysdate -40&#x27;</span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>oracle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MongoDB 写安全(Write Concern)</title>
    <link href="/2018/11/13/MongoDB-%E5%86%99%E5%AE%89%E5%85%A8-Write-Concern/"/>
    <url>/2018/11/13/MongoDB-%E5%86%99%E5%AE%89%E5%85%A8-Write-Concern/</url>
    
    <content type="html"><![CDATA[<p>转自 <a href="http://blog.csdn.net/leshami/article/details/52913705">http://blog.csdn.net/leshami/article/details/52913705</a></p><blockquote><p><a href="http://lib.csdn.net/base/mongodb">MongoDB</a> Write Concern，简称<a href="http://lib.csdn.net/base/mongodb">mongodb</a>写入安全机制，是一种客户端设置，用于控制写入安全的级别。Write Concern 描述了MongoDB写入到mongod单实例，副本集，以及分片集群时何时应答给客户端。默认情况下，mongoDB文档增删改都会一直等待<a href="http://lib.csdn.net/base/mysql">数据库</a>响应(确认写入是否成功)，然后才会继续执行。本文讲述了MongoDB 应答机制及相关参数。</p></blockquote><h2 id="一、MongoDB应答机制"><a href="#一、MongoDB应答机制" class="headerlink" title="一、MongoDB应答机制"></a>一、MongoDB应答机制</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs scss">MongoDB应答机制就是说对于当前数据库的写入成功与否告知客户端(db.getLastError()）。如下：<br>        mongoDB client发出写入(或更新)请求----&gt;mongoDB Server端写入----&gt;通知客户端已经写入OK<br>主要分为2种应答机制<br>        应答式写入(缺省情形，安全写入，适用于数据强一致性场景)<br>        非应答式写入(非安全写入，适用于数据弱一致性场景)<br>实现方式<br>        通过Write Concern来实现，客户端驱动调用db<span class="hljs-selector-class">.getLastError</span>()方法，错误返回给客户端<br>        如果捕获到错误，则可以通过客户端定义的逻辑尝试再次写入或记录到特定日志等<br></code></pre></td></tr></table></figure><h2 id="二、Write-Concern用法"><a href="#二、Write-Concern用法" class="headerlink" title="二、Write Concern用法"></a>二、Write Concern用法</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs vim">&#123; <span class="hljs-variable">w:</span> <span class="hljs-symbol">&lt;value&gt;</span>, <span class="hljs-keyword">j</span>: <span class="hljs-symbol">&lt;boolean&gt;</span>, wtimeou<span class="hljs-variable">t:</span> <span class="hljs-symbol">&lt;number&gt;</span> &#125;<br><br><span class="hljs-keyword">w</span> : 该选项要求确认操作已经传播到指定数量的mongod实例或指定标签的mongod实例<br>        <span class="hljs-keyword">w</span>可选的的值<br>                <span class="hljs-symbol">&lt;number&gt;</span><br>                        <span class="hljs-variable">w:1</span>(应答式写入)<br>                                要求确认操作已经传播到指定的单个mongod实例或副本集主实例(缺省为<span class="hljs-number">1</span>)<br>                        <span class="hljs-variable">w:0</span>(非应答式写入)<br>                                不返回任何响应，所以无法知道写入是否成功<br>                                但是对于尝试向已关闭的套接字写入或者网络故障会返回异常信息<br>                        <span class="hljs-variable">w:</span>&gt;<span class="hljs-number">1</span>(用于副本集环境)<br>                                该值用于设定写入节点的数目，包括主节点<br><br>        <span class="hljs-string">&quot;majority&quot;</span>(大多数)<br>                适用于集群架构，要求写入操作已经传递到绝大多数投票节点以及主节点后进行应答<br><br>        &lt;<span class="hljs-keyword">tag</span> <span class="hljs-keyword">set</span>&gt;<br>                要求写入操作已经传递到指定<span class="hljs-keyword">tag</span>标记副本集中的成员后进行应答<br><br><span class="hljs-keyword">j</span> : 该选项要求确认写操作已经写入journal日志之后应答客户端(需要开启journal功能)<br>        则在意外重启，宕机等情形下可以通过journal来进行数据恢复<br>        写入journal操作必须等待直到下次提交日志时完成写入<br>        为降低延迟，MongoDB可以通过增加commit journal的频率来加快journal写入<br><br>wtimeou<span class="hljs-variable">t:</span><br>        该选项指定一个时间限制,以防止写操作无限制被阻塞导致无法应答给客户端<br>        wtimeout的单位为ms，当<span class="hljs-keyword">w</span>值大于<span class="hljs-number">1</span>时生效，该参数即仅适用于集群环境<br>        当某个节点写入时超出指定wtimeout之后，mongod将返回一个错误<br>        在捕获到超时之前，mongod并不会撤销其他节点已成功完成的写入<br>        wtimeout值为<span class="hljs-number">0</span>时等同于没有配置wtimeout选项，容易导致由于某个节点挂起而无法应答<br><br>对于单实例应答的情形，是将数据写入到内存后开始应答，除非<span class="hljs-keyword">j</span>:true，则保证掉电后不会丢失数据<br></code></pre></td></tr></table></figure><h2 id="三、几种不用应答模式图示说明"><a href="#三、几种不用应答模式图示说明" class="headerlink" title="三、几种不用应答模式图示说明"></a>三、几种不用应答模式图示说明</h2><h3 id="1、非应答式写入图示"><a href="#1、非应答式写入图示" class="headerlink" title="1、非应答式写入图示"></a>1、非应答式写入图示</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs stylus">MongoDB不对客户端进行应答，驱动会检查套接字，网络错误等。<br>mongos&gt; db<span class="hljs-selector-class">.version</span>()<br><span class="hljs-number">3.2</span>.<span class="hljs-number">9</span><br>mongos&gt; db<span class="hljs-selector-class">.version</span>()<br><span class="hljs-number">3.2</span>.<span class="hljs-number">9</span><br>mongos&gt; db<br>test<br>mongos&gt; db<span class="hljs-selector-class">.blogs</span><span class="hljs-selector-class">.insert</span>(&#123;ename:<span class="hljs-string">&quot;leshami&quot;</span>,url:<span class="hljs-string">&quot;http://blog.csdn.net/leshami&quot;</span>&#125;,&#123;writeConcern:&#123;w:<span class="hljs-number">0</span>&#125;&#125;)<br><span class="hljs-function"><span class="hljs-title">WriteResult</span><span class="hljs-params">(&#123; &#125;)</span></span>   <span class="hljs-comment">//此处应答为空</span><br><br>mongos&gt; db<span class="hljs-selector-class">.blogs</span><span class="hljs-selector-class">.find</span>(&#123;&#125;,&#123;_id:<span class="hljs-number">0</span>&#125;)<br>&#123; <span class="hljs-string">&quot;ename&quot;</span> : <span class="hljs-string">&quot;leshami&quot;</span>, <span class="hljs-string">&quot;url&quot;</span> : <span class="hljs-string">&quot;http://blog.csdn.net/leshami&quot;</span> &#125;<br></code></pre></td></tr></table></figure><p><a href="http://img.blog.csdn.net/20161024172337968"><img src="http://img.blog.csdn.net/20161024172337968" alt="这里写图片描述"></a></p><h3 id="2、应答式写入图示"><a href="#2、应答式写入图示" class="headerlink" title="2、应答式写入图示"></a>2、应答式写入图示</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs stylus">应答式写入是默认值<br>MongoDB会在收到写入操作并且确认该操作在内存中应用后进行应答，但不会确认数据是否已写入磁盘<br>同时允许客户端捕捉网络、重复key等等错误<br><br>mongos&gt; db<span class="hljs-selector-class">.blogs</span><span class="hljs-selector-class">.insert</span>(&#123;ename:<span class="hljs-string">&quot;john&quot;</span>,url:<span class="hljs-string">&quot;http://blog.csdn.net/john&quot;</span>&#125;,&#123;writeConcern:&#123;w:<span class="hljs-number">1</span>&#125;&#125;)<br><span class="hljs-function"><span class="hljs-title">WriteResult</span><span class="hljs-params">(&#123; <span class="hljs-string">&quot;nInserted&quot;</span> : <span class="hljs-number">1</span> &#125;)</span></span>    <span class="hljs-comment">//此处应答信息显示为1个文档已插入</span><br><br>mongos&gt; db<span class="hljs-selector-class">.blogs</span><span class="hljs-selector-class">.find</span>(&#123;&#125;,&#123;_id:<span class="hljs-number">0</span>&#125;)<br>&#123; <span class="hljs-string">&quot;ename&quot;</span> : <span class="hljs-string">&quot;leshami&quot;</span>, <span class="hljs-string">&quot;url&quot;</span> : <span class="hljs-string">&quot;http://blog.csdn.net/leshami&quot;</span> &#125;<br>&#123; <span class="hljs-string">&quot;ename&quot;</span> : <span class="hljs-string">&quot;john&quot;</span>, <span class="hljs-string">&quot;url&quot;</span> : <span class="hljs-string">&quot;http://blog.csdn.net/john&quot;</span> &#125;<br></code></pre></td></tr></table></figure><p><a href="http://img.blog.csdn.net/20161024172424766"><img src="http://img.blog.csdn.net/20161024172424766" alt="这里写图片描述"></a></p><h3 id="3、带journal应答式写入图示"><a href="#3、带journal应答式写入图示" class="headerlink" title="3、带journal应答式写入图示"></a>3、带journal应答式写入图示</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">确认写操作已经写入<span class="hljs-keyword">journal日志之后应答客户端，必须允许了日志功能，才能生效。</span><br><span class="hljs-keyword"></span>写入<span class="hljs-keyword">journal操作必须等待直到下次提交日志时完成写入</span><br><span class="hljs-keyword"></span>提供通过<span class="hljs-keyword">journal来进行数据恢复</span><br></code></pre></td></tr></table></figure><p><a href="http://img.blog.csdn.net/20161024172513517"><img src="http://img.blog.csdn.net/20161024172513517" alt="这里写图片描述"></a></p><h3 id="4、副本集应答写入图示"><a href="#4、副本集应答写入图示" class="headerlink" title="4、副本集应答写入图示"></a>4、副本集应答写入图示</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs stylus">对于使用副本集的场景，缺省情况下仅仅从主(首选)节点进行应答<br>建议修改缺省的应答情形为特定数目或者majority来保证数据的可靠<br>如下示例，w值为<span class="hljs-number">2</span>，超时为<span class="hljs-number">5s</span><br>        db<span class="hljs-selector-class">.products</span><span class="hljs-selector-class">.insert</span>(<br>           &#123; item: <span class="hljs-string">&quot;envelopes&quot;</span>, qty : <span class="hljs-number">100</span>, type: <span class="hljs-string">&quot;Clasp&quot;</span> &#125;,<br>           &#123; writeConcern: &#123; w: <span class="hljs-number">2</span>, wtimeout: <span class="hljs-number">5000</span> &#125; &#125;<br>        )       <br>如果不希望每次在增删改时添加writeConcern，可以通过设置settings<span class="hljs-selector-class">.getLastErrorDefaults</span><br>如下示例，<br>        cfg = rs<span class="hljs-selector-class">.conf</span>()<br>        cfg<span class="hljs-selector-class">.settings</span> = &#123;&#125;<br>        cfg<span class="hljs-selector-class">.settings</span><span class="hljs-selector-class">.getLastErrorDefaults</span> = &#123; w: <span class="hljs-string">&quot;majority&quot;</span>, wtimeout: <span class="hljs-number">5000</span> &#125;<br>        rs<span class="hljs-selector-class">.reconfig</span>(cfg)<br></code></pre></td></tr></table></figure><p><a href="http://img.blog.csdn.net/20161024173434123"><img src="http://img.blog.csdn.net/20161024173434123" alt="这里写图片描述"></a></p><h2 id="四、小结"><a href="#四、小结" class="headerlink" title="四、小结"></a>四、小结</h2><p>1、write concern用于控制写入安全的级别，可以分为应答式写入以及非应答式写入<br>2、write concern是一个性能和数据强一致性的权衡，应根据业务场景进行设定<br>3、对于强一致性场景，建议w&gt;1或者等于majority，以及journal为true，否则w=0<br>4、在副本集的情形下，建议通过配置文件来修改w以及设置wtimeout，以避免由于某个节点挂起导致无法应答</p>]]></content>
    
    
    
    <tags>
      
      <tag>mongodb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Oracle ASM diskgroup dismount with Waited 15 secs for write IO to PST</title>
    <link href="/2018/11/13/Oracle-ASM-diskgroup-dismount-with-Waited-15-secs-for-write-IO-to-PST/"/>
    <url>/2018/11/13/Oracle-ASM-diskgroup-dismount-with-Waited-15-secs-for-write-IO-to-PST/</url>
    
    <content type="html"><![CDATA[<p>根据Oracle mos文档的描述，建议将_asm_hbeatiowait 参数调整为185，因为LInux环境disk 默认的timeout为180，如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># 这个值在每个系统下的都不一样，我系统是<span class="hljs-number">30</span><br>[root@tysy1 ~]# cat <span class="hljs-regexp">/sys/</span>block<span class="hljs-regexp">/sdb/</span>device/timeout<br></code></pre></td></tr></table></figure><p>连续收到ASM磁盘dismount，并且是错误“Waited 15 secs for write IO to PST”的问题，这是ASM特有的心跳超时检测，ASM instance会定期检查每个asm disk是不是能正常反馈。所以决定针对这个问题，做个小总结。</p><p>在文档ASM diskgroup dismount with “Waited 15 secs for write IO to PST” (Doc ID 1581684.1) 中有下面一段描述：</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs smali">Generally this kind messages comes in ASM alertlog file on below situations,<br><br>Delayed ASM PST heart beats on ASM disks in normal<span class="hljs-built_in"> or </span>high redundancy diskgroup,<br>thus the ASM<span class="hljs-built_in"> instance </span>dismount the diskgroup.By default, it is 15 seconds.<br><br>By the way the heart beat delays are sort of ignored for external redundancy diskgroup.<br>ASM<span class="hljs-built_in"> instance </span>stop issuing more PST heart beat until it succeeds PST revalidation,<br>but the heart beat delays do<span class="hljs-built_in"> not </span>dismount external redundancy diskgroup directly.<br><br></code></pre></td></tr></table></figure><p>上面描述，可以理解为下面几点：</p><ol><li>ASM实例会定期检查每一个磁盘组的磁盘状态，是否通信正常；</li><li>这个检查，只是针对normal和high冗余模式，对于external冗余，不会遇到这个错误；</li><li>默认情况是15s超时，也就是说15s磁盘组还是没有对ASM实例响应的话，就会dismount磁盘组。</li></ol><p> 而遇到这个问题的客户，都是使用光纤网络存储，在存储网络出现问题的情况下，会引发这个错误的出现。也就是说，在ASM定期发出检查信息的时候，如果磁盘没有在15s内反馈的话，我就认为磁盘已经无法访问。<br>​ 针对这个错误，我尝试在测试环境测试，由于测试环境是VMware的虚拟机，在物理层面删除磁盘，并不会引发这个问题。原因是在同一个主机上的磁盘被异常删除后，ASM的读取操作会立即返回系统层面的IO错误，而不需要去等待错误“Waited 15 secs for write IO to PST”的超时。</p><p> 所以，我总结这个错误，只会出现在共享的ASM磁盘，不在物理主机的本地，而是在存储网络中，ASM发出去的检测信息，不能及时被反馈，才会出现这个错误。这时，可能是存储主机，存储网络，甚至存储磁盘的问题，anyway，我ASM没有收到我需要的确认信息，我认为你有问题，如果有问题的磁盘数够多，达到影响数据完整性了，那我ASM就要dismount这个磁盘组了。</p><p> 这里对于“Waited 15 secs for write IO to PST”错误信息，根据文档1581684.1介绍，是在11.2.0.3.0之后出现的。同时在文档中有描述，如何手动修改这个检测超时的时间，可以通过参数_asm_hbeatiowait来控制：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">alter<span class="hljs-built_in"> system </span><span class="hljs-builtin-name">set</span> <span class="hljs-string">&quot;_asm_hbeatiowait&quot;</span>= <span class="hljs-attribute">scope</span>=spfile <span class="hljs-attribute">sid</span>=<span class="hljs-string">&#x27;*&#x27;</span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>oracle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Oracle 回滚灾难</title>
    <link href="/2018/11/13/Oracle-%E5%9B%9E%E6%BB%9A%E7%81%BE%E9%9A%BE/"/>
    <url>/2018/11/13/Oracle-%E5%9B%9E%E6%BB%9A%E7%81%BE%E9%9A%BE/</url>
    
    <content type="html"><![CDATA[<p>记一次oracle回滚灾难</p><p>因存储空间不足，前段时间把几个新建的表空间放到了操作系统磁盘上。</p><p>开发人员询问数据库缓慢。</p><p>查看系统cpu，disk</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># sdb使用100%</span><br><span class="hljs-attribute">07</span>/<span class="hljs-number">24</span>/<span class="hljs-number">2017</span> <span class="hljs-number">03</span>:<span class="hljs-number">12</span>:<span class="hljs-number">45</span> PM<br><span class="hljs-attribute">avg</span>-cpu:  %user   %nice %system %iowait  %steal   %idle<br>           <span class="hljs-attribute">1</span>.<span class="hljs-number">85</span>    <span class="hljs-number">0</span>.<span class="hljs-number">00</span>    <span class="hljs-number">0</span>.<span class="hljs-number">63</span>   <span class="hljs-number">11</span>.<span class="hljs-number">57</span>    <span class="hljs-number">0</span>.<span class="hljs-number">00</span>   <span class="hljs-number">85</span>.<span class="hljs-number">95</span><br><br><span class="hljs-attribute">Device</span>:         rrqm/s   wrqm/s     r/s     w/s    rMB/s    wMB/s avgrq-sz avgqu-sz   await  svctm  %util<br><span class="hljs-attribute">sdb</span>               <span class="hljs-number">0</span>.<span class="hljs-number">00</span>     <span class="hljs-number">0</span>.<span class="hljs-number">00</span>    <span class="hljs-number">0</span>.<span class="hljs-number">00</span>  <span class="hljs-number">295</span>.<span class="hljs-number">50</span>     <span class="hljs-number">0</span>.<span class="hljs-number">00</span>     <span class="hljs-number">2</span>.<span class="hljs-number">67</span>    <span class="hljs-number">18</span>.<span class="hljs-number">52</span>     <span class="hljs-number">2</span>.<span class="hljs-number">98</span>   <span class="hljs-number">10</span>.<span class="hljs-number">10</span>   <span class="hljs-number">3</span>.<span class="hljs-number">38</span> <span class="hljs-number">100</span>.<span class="hljs-number">00</span><br><span class="hljs-attribute">sda</span>               <span class="hljs-number">0</span>.<span class="hljs-number">00</span>     <span class="hljs-number">0</span>.<span class="hljs-number">00</span>  <span class="hljs-number">292</span>.<span class="hljs-number">50</span>   <span class="hljs-number">19</span>.<span class="hljs-number">50</span>     <span class="hljs-number">2</span>.<span class="hljs-number">29</span>     <span class="hljs-number">3</span>.<span class="hljs-number">10</span>    <span class="hljs-number">35</span>.<span class="hljs-number">33</span>     <span class="hljs-number">0</span>.<span class="hljs-number">06</span>    <span class="hljs-number">0</span>.<span class="hljs-number">20</span>   <span class="hljs-number">0</span>.<span class="hljs-number">15</span>   <span class="hljs-number">4</span>.<span class="hljs-number">55</span><br></code></pre></td></tr></table></figure><p>定位到建立在系统磁盘上的表空间存在大量写入。系统磁盘性能较低。kill session 出现回滚灾难,大约需要1个小时。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">select usn, <span class="hljs-regexp">/*事务对应的undo段*/</span><br>       state, <span class="hljs-regexp">/*事务的状态*/</span><br>       undoblocksdone, <span class="hljs-regexp">/*已经完成的undo块*/</span><br>       undoblockstotal, <span class="hljs-regexp">/*总的undo数据块*/</span><br>       cputime, <span class="hljs-regexp">/*已经回滚的时间*/</span><br>       pid,<br>       xid,<br>       rcvservers, <span class="hljs-regexp">/*回滚的并行进程数*/</span><br>       round(cputime <span class="hljs-regexp">/ (undoblocksdone /</span> undoblockstotal)) <span class="hljs-regexp">/ 60 as &quot;Estimated time to complete&quot; /</span>*需要回滚的时间*/<br>  from v<span class="hljs-variable">$fast_start_transactions</span>;<br></code></pre></td></tr></table></figure><p>可供查看的参数</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">SQL</span>&gt; <span class="hljs-keyword">SHOW</span> parameter <span class="hljs-keyword">ROLLBACK</span>;<br><span class="hljs-type">NAME</span>                                 <span class="hljs-keyword">TYPE</span>        <span class="hljs-keyword">VALUE</span><br><span class="hljs-comment">------------------------------------ ----------- ------------------------------</span><br>fast_start_parallel_rollback         string      LOW<br>rollback_segments                    string      <br>transactions_per_rollback_segment    <span class="hljs-type">integer</span>     <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p>整理思路</p><p>首先看到的事件全部是<code>checkpoint not complete</code>出现这个事件，很大的原因和redo相关。</p><p>查看redo，除了一个是<code>current</code>其他都是<code>active</code>,这个时候redo已经无法切换。这个时候oracle会通知<code>dbwn</code>刷数据到磁盘上。系统盘性能较低，导致数据库几乎不可用。</p>]]></content>
    
    
    
    <tags>
      
      <tag>oracle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL 物理备份 Percona XtraBackup 备份原理</title>
    <link href="/2018/11/13/MySQL-%E7%89%A9%E7%90%86%E5%A4%87%E4%BB%BD-Percona-XtraBackup-%E5%A4%87%E4%BB%BD%E5%8E%9F%E7%90%86/"/>
    <url>/2018/11/13/MySQL-%E7%89%A9%E7%90%86%E5%A4%87%E4%BB%BD-Percona-XtraBackup-%E5%A4%87%E4%BB%BD%E5%8E%9F%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p>摘要：* 前言 Percona XtraBackup（简称PXB）是 Percona 公司开发的一个用于 MySQL 数据库物理热备的备份工具，支持 MySQl（Oracle）、Percona Server 和 MariaDB，并且全部开源，真可谓是业界良心。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="https://www.percona.com/software/mysql-database/percona-xtrabackup">Percona XtraBackup</a>（简称PXB）是 Percona 公司开发的一个用于 MySQL 数据库物理热备的备份工具，支持 MySQl（Oracle）、Percona Server 和 MariaDB，并且全部开源，真可谓是业界良心。我们 RDS MySQL 的物理备份就是基于这个工具做的。</p><p>项目的 blueprint 和 bug 讨论放在 <a href="https://launchpad.net/percona-xtrabackup">Launchpad</a>，代码之前也放在 Launchpad，现在已经迁移到 <a href="https://github.com/percona/percona-xtrabackup">Github</a> 啦，项目更新发布非常快，感兴趣的可以关注 :-)</p><p>本文会介绍下备份工具的工作原理，希望对大家有所帮助。</p><h2 id="工具集"><a href="#工具集" class="headerlink" title="工具集"></a>工具集</h2><p>软件包安装完后一共有4个可执行文件，如下：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">usr<br>├── <span class="hljs-keyword">bin</span><br><span class="hljs-keyword"></span>│   ├── innobackupex<br>│   ├── xbcrypt<br>│   ├── xbstream<br>│   └── xtrabackup<br></code></pre></td></tr></table></figure><p>其中最主要的是 <code>innobackupex</code> 和 <code>xtrabackup</code>，前者是一个 perl 脚本，后者是 C/C++ 编译的二进制。</p><p><code>xtrabackup</code> 是用来备份 InnoDB 表的，不能备份非 InnoDB 表，和 mysqld server 没有交互；<code>innobackupex</code> 脚本用来备份非 InnoDB 表，同时会调用 <code>xtrabackup</code> 命令来备份 InnoDB 表，还会和 mysqld server 发送命令进行交互，如加读锁（FTWRL）、获取位点（SHOW SLAVE STATUS）等。简单来说，<code>innobackupex</code> 在 <code>xtrabackup</code>之上做了一层封装。</p><p>一般情况下，我们是希望能备份 MyISAM 表的，虽然我们可能自己不用 MyISAM 表，但是 mysql 库下的系统表是 MyISAM 的，因此备份基本都通过 <code>innobackupex</code> 命令进行；另外一个原因是我们可能需要保存位点信息。</p><p>另外2个工具相对小众些，<code>xbcrypt</code> 是加解密用的；<code>xbstream</code> 类似于tar，是 Percona 自己实现的一种支持并发写的流文件格式。两都在备份和解压时都会用到（如果备份用了加密和并发）。</p><p>本文的介绍的主角是 <code>innobackupex</code> 和 <code>xtrabackup</code>。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="通信方式"><a href="#通信方式" class="headerlink" title="通信方式"></a>通信方式</h3><p>2个工具之间的交互和协调是通过控制文件的创建和删除来实现的，主要文件有：</p><ul><li>xtrabackup_suspended_1</li><li>xtrabackup_suspended_2</li><li>xtrabackup_log_copied</li></ul><p>举个栗子，我们来看备份时 xtrabackup_suspended_2 是怎么来协调2个工具进程的</p><ol><li><code>innobackupex</code> 在启动 <code>xtrabackup</code> 进程后，会一直等 <code>xtrabackup</code> 备份完 InnoDB 文件，方式就是等待 xtrabackup_suspended_2 这个文件被创建出来；</li><li><code>xtrabackup</code> 在备完 InnoDB 数据后，就在指定目录下创建出这个文件，然后等这个文件被 <code>innobackupex</code>删除；</li><li><code>innobackupex</code> 检测到文件 xtrabackup_suspended_2 被创建出来后，就继续往下走；</li><li><code>innobackupex</code> 在备份完非 InnoDB 表后，删除 xtrabackup_suspended_2 这个文件，这样就通知 <code>xtrabackup</code> 可以继续了，然后等 xtrabackup_log_copied 被创建；</li><li><code>xtrabackup</code> 检测到 xtrabackup_suspended_2 文件删除后，就可以继续往下了。</li></ol><p>是不是感觉有点不可思议，通过文件是否存在来控制进程，这种方式非常的不靠谱，因为非常容易被外部干扰，比如文件被别人误删掉，或者2个正在跑的备份控制文件误放在同一个目录下，就等着备份乱掉吧，但是 Percona 就是这么干的。</p><p>之所以这么搞，估计主要是因为 perl 和 C 二进制2个进程，没有既好用又方便的通信方式，搞个协议啥的太麻烦了。但是官方也觉得这种方式不靠谱，11年就搞了个 <a href="https://blueprints.launchpad.net/percona-xtrabackup/+spec/rewrite-innobackupex-in-c">blueprint</a> 要用C重写 <code>innobackupex</code>，终于在<a href="https://www.percona.com/blog/2015/05/20/percona-xtrabackup-2-3-1-beta1-is-now-available/">2.3 版本</a>实现了，<code>innobackupex</code> 功能全部集成到 <code>xtrabackup</code> 里面，只有一个 binary，另外为了使用上的兼容考虑，<code>innobackupex</code>作为 <code>xtrabackup</code> 的一个软链。对于二次开发来说，2.3 摆脱了之前2个进程协作的负担，架构上明显要好于之前版本。考虑到 perl + C 这种架构的长期存在，大多数读者朋友也基本用的2.3之前版本，本文的介绍也是基于老的架构（2.2版本），但是原理和2.3是一样的，只是实现上的差别。</p><h3 id="备份过程"><a href="#备份过程" class="headerlink" title="备份过程"></a>备份过程</h3><p>整个备份过程如下图：</p><p><a href="http://mysql.taobao.org/monthly/pic/2016-03-07/PXB-backup-procedure.png"><img src="http://mysql.taobao.org/monthly/pic/2016-03-07/PXB-backup-procedure.png" alt="img"></a></p><p>PXB 备份过程</p><ol><li><code>innobackupex</code> 在启动后，会先 fork 一个进程，启动 <code>xtrabackup</code>进程，然后就等待 <code>xtrabackup</code> 备份完 ibd 数据文件；</li><li><code>xtrabackup</code> 在备份 InnoDB 相关数据时，是有2种线程的，1种是 redo 拷贝线程，负责拷贝 redo 文件，1种是 ibd 拷贝线程，负责拷贝 ibd 文件；redo 拷贝线程只有一个，在 ibd 拷贝线程之前启动，在 ibd 线程结束后结束。<code>xtrabackup</code> 进程开始执行后，先启动 redo 拷贝线程，从最新的 checkpoint 点开始顺序拷贝 redo 日志；然后再启动 ibd 数据拷贝线程，在 <code>xtrabackup</code> 拷贝 ibd 过程中，<code>innobackupex</code> 进程一直处于等待状态（等待文件被创建）。</li><li><code>xtrabackup</code> 拷贝完成idb后，通知 <code>innobackupex</code>（通过创建文件），同时自己进入等待（redo 线程仍然继续拷贝）;</li><li><code>innobackupex</code> 收到 <code>xtrabackup</code> 通知后，执行<code>FLUSH TABLES WITH READ LOCK</code> (FTWRL)，取得一致性位点，然后开始备份非 InnoDB 文件（包括 frm、MYD、MYI、CSV、opt、par等）。拷贝非 InnoDB 文件过程中，因为数据库处于全局只读状态，如果在业务的主库备份的话，要特别小心，非 InnoDB 表（主要是MyISAM）比较多的话整库只读时间就会比较长，这个影响一定要评估到。</li><li>当 <code>innobackupex</code> 拷贝完所有非 InnoDB 表文件后，通知 <code>xtrabackup</code>（通过删文件） ，同时自己进入等待（等待另一个文件被创建）；</li><li><code>xtrabackup</code> 收到 <code>innobackupex</code> 备份完非 InnoDB 通知后，就停止 redo 拷贝线程，然后通知 <code>innobackupex</code>redo log 拷贝完成（通过创建文件）；</li><li><code>innobackupex</code> 收到 redo 备份完成通知后，就开始解锁，执行 <code>UNLOCK TABLES</code>；</li><li>最后 <code>innobackupex</code> 和 <code>xtrabackup</code> 进程各自完成收尾工作，如资源的释放、写备份元数据信息等，<code>innobackupex</code> 等待 <code>xtrabackup</code> 子进程结束后退出。</li></ol><p>在上面描述的文件拷贝，都是备份进程直接通过操作系统读取数据文件的，只在执行 SQL 命令时和数据库有交互，基本不影响数据库的运行，在备份非 InnoDB 时会有一段时间只读（如果没有MyISAM表的话，只读时间在几秒左右），在备份 InnoDB 数据文件时，对数据库完全没有影响，是真正的热备。</p><p>InnoDB 和非 InnoDB 文件的备份都是通过拷贝文件来做的，但是实现的方式不同，前者是以page为粒度做的(<code>xtrabackup</code>)，后者是 cp 或者 tar 命令(<code>innobackupex</code>)，<code>xtrabackup</code> 在读取每个page时会校验 checksum 值，保证数据块是一致的，而 <code>innobackupex</code> 在 cp MyISAM 文件时已经做了flush（FTWRL），磁盘上的文件也是完整的，所以最终备份集里的数据文件都是写入完整的。</p><h4 id="增量备份"><a href="#增量备份" class="headerlink" title="增量备份"></a>增量备份</h4><p>PXB 是支持增量备份的，但是只能对 InnoDB 做增量，InnoDB 每个 page 有个 LSN 号，LSN 是全局递增的，page 被更改时会记录当前的 LSN 号，page中的 LSN 越大，说明当前page越新（最近被更新）。每次备份会记录当前备份到的LSN（xtrabackup_checkpoints 文件中），增量备份就是只拷贝LSN大于上次备份的page，比上次备份小的跳过，每个 ibd 文件最终备份出来的是增量 delta 文件。</p><p>MyISAM 是没有增量的机制的，每次增量备份都是全部拷贝的。</p><p>增量备份过程和全量备份一样，只是在 ibd 文件拷贝上有不同。</p><h3 id="恢复过程"><a href="#恢复过程" class="headerlink" title="恢复过程"></a>恢复过程</h3><p>如果看恢复备份集的日志，会发现和 mysqld 启动时非常相似，其实备份集的恢复就是类似 mysqld crash后，做一次 crash recover。</p><p>恢复的目的是把备份集中的数据恢复到一个一致性位点，所谓一致就是指原数据库某一时间点各引擎数据的状态，比如 MyISAM 中的数据对应的是 15:00 时间点的，InnoDB 中的数据对应的是 15:20 的，这种状态的数据就是不一致的。PXB 备份集对应的一致点，就是备份时FTWRL的时间点，恢复出来的数据，就对应原数据库FTWRL时的状态。</p><p>因为备份时 FTWRL 后，数据库是处于只读的，非 InnoDB 数据是在持有全局读锁情况下拷贝的，所以非 InnoDB 数据本身就对应 FTWRL 时间点；InnoDB 的 ibd 文件拷贝是在 FTWRL 前做的，拷贝出来的不同 ibd 文件最后更新时间点是不一样的，这种状态的 ibd 文件是不能直接用的，但是 redo log 是从备份开始一直持续拷贝的，最后的 redo 日志点是在持有 FTWRL 后取得的，所以最终通过 redo 应用后的 ibd 数据时间点也是和 FTWRL 一致的。</p><p>所以恢复过程只涉及 InnoDB 文件的恢复，非 InnoDB 数据是不动的。备份恢复完成后，就可以把数据文件拷贝到对应的目录，然后通过mysqld来启动了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL 权限管理</title>
    <link href="/2018/11/13/MySQL-%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
    <url>/2018/11/13/MySQL-%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p><strong>一、MySQL权限简介</strong></p><p> 关于mysql的权限简单的理解就是mysql允许你做你全力以内的事情，不可以越界。比如只允许你执行select操作，那么你就不能执行update操作。只允许你从某台机器上连接mysql，那么你就不能从除那台机器以外的其他机器连接mysql。</p><p> 那么Mysql的权限是如何实现的呢？这就要说到mysql的两阶段验证，下面详细介绍：第一阶段：服务器首先会检查你是否允许连接。因为创建用户的时候会加上主机限制，可以限制成本地、某个IP、某个IP段、以及任何地方等，只允许你从配置的指定地方登陆。第二阶段：如果你能连接，Mysql会检查你发出的每个请求，看你是否有足够的权限实施它。比如你要更新某个表、或者查询某个表，Mysql会查看你对哪个表或者某个列是否有权限。再比如，你要运行某个存储过程，Mysql会检查你对存储过程是否有执行权限等。</p><p> MYSQL到底都有哪些权限呢？从官网复制一个表来看看：</p><table><thead><tr><th><strong>权限</strong></th><th><strong>权限级别</strong></th><th><strong>权限说明</strong></th></tr></thead><tbody><tr><td>CREATE</td><td>数据库、表或索引</td><td>创建数据库、表或索引权限</td></tr><tr><td>DROP</td><td>数据库或表</td><td>删除数据库或表权限</td></tr><tr><td>GRANT OPTION</td><td>数据库、表或保存的程序</td><td>赋予权限选项</td></tr><tr><td>REFERENCES</td><td>数据库或表</td><td></td></tr><tr><td>ALTER</td><td>表</td><td>更改表，比如添加字段、索引等</td></tr><tr><td>DELETE</td><td>表</td><td>删除数据权限</td></tr><tr><td>INDEX</td><td>表</td><td>索引权限</td></tr><tr><td>INSERT</td><td>表</td><td>插入权限</td></tr><tr><td>SELECT</td><td>表</td><td>查询权限</td></tr><tr><td>UPDATE</td><td>表</td><td>更新权限</td></tr><tr><td>CREATE VIEW</td><td>视图</td><td>创建视图权限</td></tr><tr><td>SHOW VIEW</td><td>视图</td><td>查看视图权限</td></tr><tr><td>ALTER ROUTINE</td><td>存储过程</td><td>更改存储过程权限</td></tr><tr><td>CREATE ROUTINE</td><td>存储过程</td><td>创建存储过程权限</td></tr><tr><td>EXECUTE</td><td>存储过程</td><td>执行存储过程权限</td></tr><tr><td>FILE</td><td>服务器主机上的文件访问</td><td>文件访问权限</td></tr><tr><td>CREATE TEMPORARY TABLES</td><td>服务器管理</td><td>创建临时表权限</td></tr><tr><td>LOCK TABLES</td><td>服务器管理</td><td>锁表权限</td></tr><tr><td>CREATE USER</td><td>服务器管理</td><td>创建用户权限</td></tr><tr><td>PROCESS</td><td>服务器管理</td><td>查看进程权限</td></tr><tr><td>RELOAD</td><td>服务器管理</td><td>执行flush-hosts, flush-logs, flush-privileges, flush-status, flush-tables, flush-threads, refresh, reload等命令的权限</td></tr><tr><td>REPLICATION CLIENT</td><td>服务器管理</td><td>复制权限</td></tr><tr><td>REPLICATION SLAVE</td><td>服务器管理</td><td>复制权限</td></tr><tr><td>SHOW DATABASES</td><td>服务器管理</td><td>查看数据库权限</td></tr><tr><td>SHUTDOWN</td><td>服务器管理</td><td>关闭数据库权限</td></tr><tr><td>SUPER</td><td>服务器管理</td><td>执行kill线程权限</td></tr></tbody></table><p> MYSQL的权限如何分布，就是针对表可以设置什么权限，针对列可以设置什么权限等等，这个可以从官方文档中的一个表来说明：</p><table><thead><tr><th>权限分布</th><th>可能的设置的权限</th></tr></thead><tbody><tr><td>表权限</td><td>‘Select’, ‘Insert’, ‘Update’, ‘Delete’, ‘Create’, ‘Drop’, ‘Grant’, ‘References’, ‘Index’, ‘Alter’</td></tr><tr><td>列权限</td><td>‘Select’, ‘Insert’, ‘Update’, ‘References’</td></tr><tr><td>过程权限</td><td>‘Execute’, ‘Alter Routine’, ‘Grant’</td></tr></tbody></table><p><strong>二、MySQL权限经验原则：</strong></p><p> 权限控制主要是出于安全因素，因此需要遵循一下几个经验原则：</p><p> 1、只授予能满足需要的最小权限，防止用户干坏事。比如用户只是需要查询，那就只给select权限就可以了，不要给用户赋予update、insert或者delete权限。</p><p> 2、创建用户的时候限制用户的登录主机，一般是限制成指定IP或者内网IP段。</p><p> 3、初始化数据库的时候删除没有密码的用户。安装完数据库的时候会自动创建一些用户，这些用户默认没有密码。</p><p> 4、为每个用户设置满足密码复杂度的密码。</p><p> 5、定期清理不需要的用户。回收权限或者删除用户。</p><p><strong>三、MySQL权限实战：</strong></p><p> 1、GRANT命令使用说明：</p><p> 先来看一个例子，创建一个只允许从本地登录的超级用户jack，并允许将权限赋予别的用户，密码为：jack.</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">mysql&gt; <span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">on</span> *.* <span class="hljs-keyword">to</span> jack@<span class="hljs-string">&#x27;localhost&#x27;</span> identified <span class="hljs-keyword">by</span> &quot;jack&quot; <span class="hljs-keyword">with</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">option</span>;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.01</span> sec)<br></code></pre></td></tr></table></figure><p> GRANT命令说明：<br>​ <code>ALL PRIVILEGES</code> 是表示所有权限，你也可以使用select、update等权限。</p><p> <code>ON</code> 用来指定权限针对哪些库和表。</p><p> <code>*.*</code> 中前面的<em>号用来指定数据库名，后面的</em>号用来指定表名。</p><p> <code>TO</code> 表示将权限赋予某个用户。</p><p> <code>jack@&#39;localhost&#39;</code>表示jack用户，@后面接限制的主机，可以是IP、IP段、域名以及%，%表示任何地方。注意：这里%有的版本不包括本地，以前碰到过给某个用户设置了%允许任何地方登录，但是在本地登录不了，这个和版本有关系，遇到这个问题再加一个localhost的用户就可以了。</p><p> <code>IDENTIFIED BY</code> 指定用户的登录密码。</p><p> <code>WITH GRANT OPTION</code> 这个选项表示该用户可以将自己拥有的权限授权给别人。注意：经常有人在创建操作用户的时候不指定WITH GRANT OPTION选项导致后来该用户不能使用GRANT命令创建用户或者给其它用户授权。</p><p>备注：可以使用GRANT重复给用户添加权限，权限叠加，比如你先给用户添加一个select权限，然后又给用户添加一个insert权限，那么该用户就同时拥有了select和insert权限。</p><p> 2、刷新权限</p><p> 使用这个命令使权限生效，尤其是你对那些权限表user、db、host等做了update或者delete更新的时候。以前遇到过使用grant后权限没有更新的情况，只要对权限做了更改就使用FLUSH PRIVILEGES命令来刷新权限。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mysql</span>&gt; flush privileges;<br><span class="hljs-attribute">Query</span> OK, <span class="hljs-number">0</span> rows affected (<span class="hljs-number">0</span>.<span class="hljs-number">01</span> sec)<br></code></pre></td></tr></table></figure><p> 3、查看权限</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">查看当前用户的权限：<br><span class="hljs-section">mysql&gt; show grants;</span><br><span class="hljs-section">+---------------------------------------------------------------------+</span><br><span class="hljs-section">| Grants for root@localhost                                           |</span><br><span class="hljs-section">+---------------------------------------------------------------------+</span><br>| GRANT ALL PRIVILEGES ON <span class="hljs-strong">*.*</span> TO <span class="hljs-emphasis">&#x27;root&#x27;</span>@<span class="hljs-emphasis">&#x27;localhost&#x27;</span> WITH GRANT OPTION |<br><span class="hljs-section">| GRANT PROXY ON &#x27;&#x27;@&#x27;&#x27; TO &#x27;root&#x27;@&#x27;localhost&#x27; WITH GRANT OPTION        |</span><br><span class="hljs-section">+---------------------------------------------------------------------+</span><br>2 rows in set (0.00 sec)<br><br>查看某个用户的权限：<br><span class="hljs-section">mysql&gt; show grants for &#x27;jack&#x27;@&#x27;%&#x27;;</span><br><span class="hljs-section">+-----------------------------------------------------------------------------------------------------+</span><br><span class="hljs-section">| Grants for jack@%                                                                                   |</span><br><span class="hljs-section">+-----------------------------------------------------------------------------------------------------+</span><br><span class="hljs-section">| GRANT USAGE ON *.* TO &#x27;jack&#x27;@&#x27;%&#x27; IDENTIFIED BY PASSWORD &#x27;*9BCDC990E611B8D852EFAF1E3919AB6AC8C8A9F0&#x27; |</span><br><span class="hljs-section">+-----------------------------------------------------------------------------------------------------+</span><br>1 row in set (0.00 sec)<br></code></pre></td></tr></table></figure><p> 4、回收权限</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">mysql&gt; <span class="hljs-keyword">revoke</span> <span class="hljs-keyword">delete</span> <span class="hljs-keyword">on</span> *.* <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;jack&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span>;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.01</span> sec)<br></code></pre></td></tr></table></figure><p> 5、删除用户</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">mysql&gt; select host,user,password from user;<br>+-----------+------+-------------------------------------------+<br>|<span class="hljs-string"> host      </span>|<span class="hljs-string"> user </span>|<span class="hljs-string"> password                                  </span>|<br>+-----------+------+-------------------------------------------+<br>|<span class="hljs-string"> localhost </span>|<span class="hljs-string"> root </span>|<span class="hljs-string">                                           </span>|<br>|<span class="hljs-string"> rhel5.4   </span>|<span class="hljs-string"> root </span>|<span class="hljs-string">                                           </span>|<br>|<span class="hljs-string"> 127.0.0.1 </span>|<span class="hljs-string"> root </span>|<span class="hljs-string">                                           </span>|<br>|<span class="hljs-string"> ::1       </span>|<span class="hljs-string"> root </span>|<span class="hljs-string">                                           </span>|<br>|<span class="hljs-string"> localhost </span>|<span class="hljs-string">      </span>|<span class="hljs-string">                                           </span>|<br>|<span class="hljs-string"> rhel5.4   </span>|<span class="hljs-string">      </span>|<span class="hljs-string">                                           </span>|<br>|<span class="hljs-string"> localhost </span>|<span class="hljs-string"> jack </span>|<span class="hljs-string"> *9BCDC990E611B8D852EFAF1E3919AB6AC8C8A9F0 </span>|<br>+-----------+------+-------------------------------------------+<br>7 rows in set (0.00 sec)<br><br>mysql&gt; drop user &#x27;jack&#x27;<span class="hljs-meta">@&#x27;localhost&#x27;;</span><br>Query OK, 0 rows affected (0.01 sec)<br></code></pre></td></tr></table></figure><p> 6、对账户重命名</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">mysql&gt; <span class="hljs-keyword">rename</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;jack&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;jim&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.00</span> sec)<br></code></pre></td></tr></table></figure><p> 7、修改密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs sql">  <span class="hljs-number">1</span>、用<span class="hljs-keyword">set</span> password命令<br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SET</span> PASSWORD <span class="hljs-keyword">FOR</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> <span class="hljs-operator">=</span> PASSWORD(<span class="hljs-string">&#x27;123456&#x27;</span>);<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.00</span> sec)<br>  <span class="hljs-number">2</span>、用mysqladmin<br>  [root<span class="hljs-variable">@rhel5</span> <span class="hljs-operator">~</span>]# mysqladmin <span class="hljs-operator">-</span>uroot <span class="hljs-operator">-</span>p123456 password <span class="hljs-number">1234</span>abcd<br>  备注：<br>  格式：mysqladmin <span class="hljs-operator">-</span>u用户名 <span class="hljs-operator">-</span>p旧密码 password 新密码<br>  <span class="hljs-number">3</span>、用update直接编辑<span class="hljs-keyword">user</span>表<br>  mysql<span class="hljs-operator">&gt;</span> use mysql<br>Reading <span class="hljs-keyword">table</span> information <span class="hljs-keyword">for</span> completion <span class="hljs-keyword">of</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">and</span> <span class="hljs-keyword">column</span> names<br>You can turn off this feature <span class="hljs-keyword">to</span> <span class="hljs-keyword">get</span> a quicker startup <span class="hljs-keyword">with</span> <span class="hljs-operator">-</span>A<br><br>Database changed<br>mysql<span class="hljs-operator">&gt;</span> update <span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> PASSWORD <span class="hljs-operator">=</span> PASSWORD(<span class="hljs-string">&#x27;1234abcd&#x27;</span>) <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;root&#x27;</span>;<br>Query OK, <span class="hljs-number">1</span> <span class="hljs-type">row</span> affected (<span class="hljs-number">0.01</span> sec)<br><span class="hljs-keyword">Rows</span> matched: <span class="hljs-number">1</span>  Changed: <span class="hljs-number">1</span>  Warnings: <span class="hljs-number">0</span><br><br>mysql<span class="hljs-operator">&gt;</span> flush privileges;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.00</span> sec)<br>  <span class="hljs-number">4</span>、在丢失root密码的时候：<br>  [root<span class="hljs-variable">@rhel5</span> <span class="hljs-operator">~</span>]# mysqld_safe <span class="hljs-comment">--skip-grant-tables &amp;</span><br>[<span class="hljs-number">1</span>] <span class="hljs-number">15953</span><br>[root<span class="hljs-variable">@rhel5</span> <span class="hljs-operator">~</span>]# <span class="hljs-number">130911</span> <span class="hljs-number">09</span>:<span class="hljs-number">35</span>:<span class="hljs-number">33</span> mysqld_safe Logging <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;/mysql/mysql5.5/data/rhel5.4.err&#x27;</span>.<br><span class="hljs-number">130911</span> <span class="hljs-number">09</span>:<span class="hljs-number">35</span>:<span class="hljs-number">33</span> mysqld_safe Starting mysqld daemon <span class="hljs-keyword">with</span> databases <span class="hljs-keyword">from</span> <span class="hljs-operator">/</span>mysql<span class="hljs-operator">/</span>mysql5<span class="hljs-number">.5</span><span class="hljs-operator">/</span>data<br><br>[root<span class="hljs-variable">@rhel5</span> <span class="hljs-operator">~</span>]# mysql <span class="hljs-operator">-</span>u root<br>Welcome <span class="hljs-keyword">to</span> the MySQL monitor.  Commands <span class="hljs-keyword">end</span> <span class="hljs-keyword">with</span> ; <span class="hljs-keyword">or</span> \g.<br>Your MySQL connection id <span class="hljs-keyword">is</span> <span class="hljs-number">2</span><br>Server version: <span class="hljs-number">5.5</span><span class="hljs-number">.22</span> Source distribution<br><br>Copyright (c) <span class="hljs-number">2000</span>, <span class="hljs-number">2011</span>, Oracle <span class="hljs-keyword">and</span><span class="hljs-operator">/</span><span class="hljs-keyword">or</span> its affiliates. <span class="hljs-keyword">All</span> rights reserved.<br><br>Oracle <span class="hljs-keyword">is</span> a registered trademark <span class="hljs-keyword">of</span> Oracle Corporation <span class="hljs-keyword">and</span><span class="hljs-operator">/</span><span class="hljs-keyword">or</span> its<br>affiliates. Other names may be trademarks <span class="hljs-keyword">of</span> their respective<br>owners.<br><br>Type <span class="hljs-string">&#x27;help;&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;\h&#x27;</span> <span class="hljs-keyword">for</span> help. Type <span class="hljs-string">&#x27;\c&#x27;</span> <span class="hljs-keyword">to</span> clear the <span class="hljs-keyword">current</span> input statement.<br><br>mysql<span class="hljs-operator">&gt;</span> \s<br><span class="hljs-comment">--------------</span><br>mysql  Ver <span class="hljs-number">14.14</span> Distrib <span class="hljs-number">5.5</span><span class="hljs-number">.22</span>, <span class="hljs-keyword">for</span> Linux (i686) <span class="hljs-keyword">using</span>  EditLine wrapper<br><br>Connection id:        <span class="hljs-number">2</span><br><span class="hljs-keyword">Current</span> database:    <br><span class="hljs-keyword">Current</span> <span class="hljs-keyword">user</span>:        root@<br>SSL:            <span class="hljs-keyword">Not</span> <span class="hljs-keyword">in</span> use<br><span class="hljs-keyword">Current</span> pager:        stdout<br><span class="hljs-keyword">Using</span> outfile:        <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">Using</span> delimiter:    ;<br>Server version:        <span class="hljs-number">5.5</span><span class="hljs-number">.22</span> Source distribution<br>Protocol version:    <span class="hljs-number">10</span><br>Connection:        Localhost via UNIX socket<br>Server characterset:    utf8<br>Db     characterset:    utf8<br>Client characterset:    utf8<br>Conn.  characterset:    utf8<br>UNIX socket:        <span class="hljs-operator">/</span>tmp<span class="hljs-operator">/</span>mysql.sock<br>Uptime:            <span class="hljs-number">36</span> sec<br><br>Threads: <span class="hljs-number">1</span>  Questions: <span class="hljs-number">5</span>  Slow queries: <span class="hljs-number">0</span>  Opens: <span class="hljs-number">23</span>  Flush tables: <span class="hljs-number">1</span>  <span class="hljs-keyword">Open</span> tables: <span class="hljs-number">18</span>  Queries <span class="hljs-keyword">per</span> <span class="hljs-keyword">second</span> avg: <span class="hljs-number">0.138</span><br><span class="hljs-comment">--------------</span><br><br>mysql<span class="hljs-operator">&gt;</span> use mysql<br>Reading <span class="hljs-keyword">table</span> information <span class="hljs-keyword">for</span> completion <span class="hljs-keyword">of</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">and</span> <span class="hljs-keyword">column</span> names<br>You can turn off this feature <span class="hljs-keyword">to</span> <span class="hljs-keyword">get</span> a quicker startup <span class="hljs-keyword">with</span> <span class="hljs-operator">-</span>A<br><br>Database changed<br>mysql<span class="hljs-operator">&gt;</span> update <span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> password <span class="hljs-operator">=</span> PASSWORD(<span class="hljs-string">&#x27;123456&#x27;</span>) <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;root&#x27;</span>;<br>Query OK, <span class="hljs-number">1</span> <span class="hljs-type">row</span> affected (<span class="hljs-number">0.00</span> sec)<br><span class="hljs-keyword">Rows</span> matched: <span class="hljs-number">1</span>  Changed: <span class="hljs-number">1</span>  Warnings: <span class="hljs-number">0</span><br><br>mysql<span class="hljs-operator">&gt;</span> flush privileges;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.00</span> sec)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux iptables设置只允许特定mac地址、端口访问</title>
    <link href="/2018/11/13/Linux-iptables%E8%AE%BE%E7%BD%AE%E5%8F%AA%E5%85%81%E8%AE%B8%E7%89%B9%E5%AE%9Amac%E5%9C%B0%E5%9D%80%E3%80%81%E7%AB%AF%E5%8F%A3%E8%AE%BF%E9%97%AE/"/>
    <url>/2018/11/13/Linux-iptables%E8%AE%BE%E7%BD%AE%E5%8F%AA%E5%85%81%E8%AE%B8%E7%89%B9%E5%AE%9Amac%E5%9C%B0%E5%9D%80%E3%80%81%E7%AB%AF%E5%8F%A3%E8%AE%BF%E9%97%AE/</url>
    
    <content type="html"><![CDATA[<p>iptables设置特定mac、端口访问</p><ul><li>开放端口22、1521</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 增加允许访问</span><br><span class="hljs-attribute">iptables</span> -I INPUT -p tcp --dport <span class="hljs-number">22</span> -m mac --mac-source <span class="hljs-number">34</span>-E<span class="hljs-number">6</span>-D<span class="hljs-number">7</span>-<span class="hljs-number">48</span>-<span class="hljs-number">03</span>-<span class="hljs-number">8</span>D -j ACCEPT<br><span class="hljs-attribute">iptables</span> -I INPUT -p tcp --dport <span class="hljs-number">22</span> -m mac --mac-source <span class="hljs-number">34</span>-E<span class="hljs-number">6</span>-D<span class="hljs-number">7</span>-<span class="hljs-number">48</span>-<span class="hljs-number">03</span>-<span class="hljs-number">8</span>D -j ACCEPT<br><span class="hljs-attribute">iptables</span> -I INPUT -p tcp --dport <span class="hljs-number">1521</span> -m mac --mac-source <span class="hljs-number">20</span>-<span class="hljs-number">47</span>-<span class="hljs-number">47</span>-D<span class="hljs-number">0</span>-<span class="hljs-number">50</span>-<span class="hljs-number">2</span>A -j ACCEPT<br><span class="hljs-attribute">iptables</span> -I INPUT -p tcp --dport <span class="hljs-number">1521</span> -m mac --mac-source <span class="hljs-number">34</span>-E<span class="hljs-number">6</span>-D<span class="hljs-number">7</span>-<span class="hljs-number">48</span>-<span class="hljs-number">03</span>-<span class="hljs-number">8</span>D -j ACCEPT<br><br><span class="hljs-comment"># 增加回环地址</span><br><span class="hljs-attribute">iptables</span> -A INPUT -i lo -j ACCEPT<br><span class="hljs-attribute">iptables</span> -A OUTPUT -o lo -j ACCEPT<br><br><span class="hljs-comment"># 增加基于状态的</span><br><span class="hljs-attribute">iptables</span> -A INPUT -m state --state ESTABLISHED -j ACCEPT<br><br><span class="hljs-comment"># 修改默认规则drop</span><br><span class="hljs-attribute">iptables</span> -P INPUT DROP<br></code></pre></td></tr></table></figure><ul><li>清空防火墙策略</li></ul><figure class="highlight tp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tp"># 要先把默认策略修改，不然清空后自己进不去了<br>iptables -<span class="hljs-keyword">P</span> INPUT <span class="hljs-keyword">ACC</span>EPT<br>iptables -<span class="hljs-keyword">P</span> FORWARD <span class="hljs-keyword">ACC</span>EPT<br>iptables -<span class="hljs-keyword">P</span> OUTPUT <span class="hljs-keyword">ACC</span>EPT<br><br># 清空策略<br>iptables -F<br></code></pre></td></tr></table></figure><ul><li>保存防火墙策略</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">service iptabels save</span><br></code></pre></td></tr></table></figure><ul><li>查看策略</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">iptables -L -n</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ceph CRUSH算法</title>
    <link href="/2018/11/13/Ceph-CRUSH%E7%AE%97%E6%B3%95/"/>
    <url>/2018/11/13/Ceph-CRUSH%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<blockquote><p>转自<a href="http://xuxiaopang.com/">徐小胖’blog</a></p><p>可能会添加自己的理解或者其他，请自行过滤。</p></blockquote><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><blockquote><p>那么问题来了，把一份数据存到一群Server中分几步？</p></blockquote><p>Ceph的答案是：两步。</p><ol><li>计算PG</li><li>计算OSD</li></ol><h2 id="计算PG"><a href="#计算PG" class="headerlink" title="计算PG"></a>计算PG</h2><p>首先，要明确Ceph的一个规定：在Ceph中，一切皆对象。</p><p>不论是视频，文本，照片等一切格式的数据，Ceph统一将其看作是对象，因为追其根源，所有的数据都是二进制数据保存于磁盘上，所以每一份二进制数据都看成一个对象，不以它们的格式来区分他们。</p><p>那么用什么来区分两个对象呢？<strong>对象名</strong>。也就是说，每个不同的对象都有不一样的对象名。于是，开篇的问题就变成了：</p><blockquote><p>把一个对象存到一群Server中分几步？</p></blockquote><p>这里的一群Server，由Ceph组织成一个集群，这个集群由若干的磁盘组成，也就是由若干的OSD组成。于是，继续简化问题：</p><blockquote><p>把一个对象存到一堆OSD中分几步?</p></blockquote><h2 id="Ceph中的逻辑层"><a href="#Ceph中的逻辑层" class="headerlink" title="Ceph中的逻辑层"></a>Ceph中的逻辑层</h2><p>Ceph为了保存一个对象，对上构建了一个逻辑层，也就是池(pool)，用于保存对象，这个池的翻译很好的解释了pool的特征，如果把pool比喻成一个中国象棋棋盘，那么保存一个对象的过程就类似于把一粒芝麻放置到棋盘上。</p><p><a href="http://ww1.sinaimg.cn/large/6e46250bly1fezuxxovkzj20m80h90zs.jpg"><img src="http://ww1.sinaimg.cn/large/6e46250bly1fezuxxovkzj20m80h90zs.jpg" alt="img"></a></p><p>Pool再一次进行了细分，即将一个pool划分为若干的PG(归置组 Placement Group)，这类似于棋盘上的方格，所有的方格构成了整个棋盘，也就是说所有的PG构成了一个pool。</p><blockquote><p>Ceph 把客户端数据保存为存储池内的对象。通过使用 CRUSH 算法， Ceph 可以计算出哪个归置组（PG）应该持有指定的对象(Object)，然后进一步计算出哪个 OSD 守护进程持有该归置组。 CRUSH 算法使得 Ceph 存储集群能够动态地伸缩、再均衡和修复</p><ul><li>Pool 棋盘</li><li>Placement Group 棋盘格</li><li>Object 棋子</li></ul></blockquote><p>现在需要解决的问题是，对象怎么知道要保存到哪个PG上，假定这里我们的pool名叫rbd，共有256个PG，给每个PG编个号分别叫做<code>0x0, 0x1, ...0xF, 0x10, 0x11... 0xFE, 0xFF</code>。</p><p>要解决这个问题，我们先看看我们拥有什么，1，不同的对象名。2，不同的PG编号。这里就可以引入Ceph的计算方法了 : HASH。</p><p>对于对象名分别为<code>bar</code>和<code>foo</code>的两个对象，对他们的对象名进行计算即:</p><ul><li>HASH(‘bar’) = 0x3E0A4162</li><li>HASH(‘foo’) = 0x7FE391A0</li><li>HASH(‘bar’) = 0x3E0A4162</li></ul><p>对对象名进行HASH后，得到了一串十六进制输出值，也就是说通过HASH我们将一个对象名转化成了一串数字，那么上面的第一行和第三行是一样的有什么意义？ 意义就是对于一个同样的对象名，计算出来的结果永远都是一样的，但是HASH算法的确将对象名计算得出了一个随机数。</p><p>有了这个输出，我们使用小学就会的方法：求余数！用随机数除以PG的总数256，得到的余数一定会落在[0x0, 0xFF]之间，也就是这256个PG中的某一个：</p><ul><li>0x3E0A4162 % 0xFF ===&gt; 0x62</li><li>0x7FE391A0 % 0xFF ===&gt; 0xA0</li></ul><p>于是乎，对象<code>bar</code>保存到编号为<code>0x62</code>的PG中，对象<code>foo</code>保存到编号为<code>0xA0</code>的PG中。对象<code>bar</code>永远都会保存到PG 0x62中！ 对象<code>foo</code>永远都会保存到PG 0xA0中！</p><p>现在又来了一亿个对象，他们也想知道自己会保存到哪个PG中，Ceph说：“自己算”。于是这一亿个对象，各自对自己对象名进行HASH，得到输出后除以PG总数得到的余数就是要保存的PG。</p><p>求余的好处就是对象数量规模越大，每个PG分布的对象数量就越平均。</p><p>所以每个对象自有名字开始，他们要保存到的PG就已经确定了。</p><p>那么爱思考的小明同学就会提出一个问题，难道不管对象的高矮胖瘦都是一样的使用这种方法计算PG吗，答案是，YES! 也就是说Ceph不区分对象的真实大小内容以及任何形式的格式，只认对象名。毕竟当对象数达到百万级时，对象的分布从宏观上来看还是平均的。</p><p>这里给出更Ceph一点的说明，实际上在Ceph中，存在着多个pool，每个pool里面存在着若干的PG，如果两个pool里面的PG编号相同，Ceph怎么区分呢? 于是乎，Ceph对每个pool进行了编号，比如刚刚的rbd池，给予编号0，再建一个pool就给予编号1，那么在Ceph里，PG的实际编号是由<code>pool_id+.+PG_id</code>组成的，也就是说，刚刚的<code>bar</code>对象会保存在<code>0.62</code>这个PG里，<code>foo</code>这个对象会保存在<code>0.A0</code>这个PG里。其他池里的PG名称可能为<code>1.12f, 2.aa1,10.aa1</code>等。</p><h2 id="Ceph中的物理层"><a href="#Ceph中的物理层" class="headerlink" title="Ceph中的物理层"></a>Ceph中的物理层</h2><p>理解了刚刚的逻辑层，我们再看一下Ceph里的物理层，对下，也就是我们若干的服务器上的磁盘，通常，Ceph将一个磁盘看作一个OSD(实际上，OSD是管理一个磁盘的程序)，于是物理层由若干的OSD组成，我们的最终目标是将对象保存到磁盘上，在逻辑层里，对象是保存到PG里面的，那么现在的任务就是<code>打通PG和OSD之间的隧道</code>。PG相当于一堆余数相同的对象的组合，PG把这一部分对象打了个包，现在我们需要把很多的包平均的安放在各个OSD上，这就是CRUSH算法所要做的事情：<code>CRUSH计算PG-&gt;OSD的映射关系</code>。</p><p>加上刚刚的对象映射到PG的方法，我们将开篇的两步表示成如下的两个计算公式：</p><ul><li>池ID + HASH(‘对象名’) % pg_num ===&gt; PG_ID</li><li>CRUSH(PG_ID) ===&gt; OSD</li></ul><h2 id="使用HASH代替CRUSH？"><a href="#使用HASH代替CRUSH？" class="headerlink" title="使用HASH代替CRUSH？"></a>使用HASH代替CRUSH？</h2><p>在讨论CRUSH算法之前，我们来做一点思考，可以发现，上面两个计算公式有点类似，为何我们不把</p><ul><li><code>CRUSH(PG_ID) ===&gt; OSD</code><br>改为</li><li><code>HASH(PG_ID) %OSD_num ===&gt; OSD</code></li></ul><p>我可以如下几个由此假设带来的副作用：</p><ul><li>如果挂掉一个OSD，<code>OSD_num-1</code>，于是所有的<code>PG % OSD_num</code>的余数都会变化，也就是说这个PG保存的磁盘发生了变化，对这最简单的解释就是，这个PG上的数据要从一个磁盘全部迁移到另一个磁盘上去，一个优秀的存储架构应当在磁盘损坏时使得数据迁移量降到最低，CRUSH可以做到。</li><li>如果保存多个副本，我们希望得到多个OSD结果的输出，HASH只能获得一个，但是CRUSH可以获得任意多个。</li><li>如果增加OSD的数量，OSD_num增大了，同样会导致PG在OSD之间的胡乱迁移，但是CRUSH可以保证数据向新增机器均匀的扩散。</li></ul><p>所以HASH只适用于一对一的映射关系计算，并且两个映射组合(对象名和PG总数)不能变化，因此这里的假设不适用于PG-&gt;OSD的映射计算。因此，这里开始引入CRUSH算法。</p><h2 id="引入CRUSH算法"><a href="#引入CRUSH算法" class="headerlink" title="引入CRUSH算法"></a>引入CRUSH算法</h2><p>千呼万唤始出来，终于开始讲CRUSH算法了，如果直接讲Sage的博士论文或者<code>crush.c</code>的代码的话，可能会十分苦涩难懂，所以我决定尝试大话一把CRUSH，希望能让没有接触过CRUSH的同学也能对其有所理解。</p><p>首先来看我们要做什么：</p><ul><li>把已有的PG_ID映射到OSD上，有了映射关系就可以把一个PG保存到一个磁盘上。</li><li>如果我们想保存三个副本，可以把一个PG映射到三个不同的OSD上，这三个OSD上保存着一模一样的PG内容。</li></ul><p>再来看我们有了什么：</p><ul><li>互不相同的PG_ID。</li><li>如果给OSD也编个号，那么就有了互不相同的OSD_ID。</li><li>每个OSD最大的不同的就是它们的容量，即4T还是800G的容量，我们将每个OSD的容量又称为OSD的权重(weight)，规定4T权重为4，800G为0.8，也就是以T为单位的值。</li></ul><p>现在问题转化为：如何将PG_ID映射到有各自权重的OSD上。这里我直接使用CRUSH里面采取的<code>Straw</code>算法，翻译过来就是抽签，说白了就是挑个最长的签，这里的签指的是OSD的权重。</p><p>那么问题就来了，总不至于每次都挑容量最大的OSD吧，这不分分钟都把数据存满那个最大的 OSD了吗？是的，所以在挑之前先把这些OSD<code>搓一搓</code>，这里直接介绍CRUSH的方法，如下图(可忽视代码直接看文字)：</p><p><a href="http://www.xuxiaopang.com/images/1478244507156.png"><img src="http://www.xuxiaopang.com/images/1478244507156.png" alt="Alt text"></a></p><ul><li>CRUSH_HASH( PG_ID, OSD_ID, r ) ===&gt; draw</li><li>( draw &amp;0xffff ) * osd_weight ===&gt; osd_straw</li><li>pick up high_osd_straw</li></ul><p>第一行，我们姑且把r当做一个常数，第一行实际上就做了搓一搓的事情:将PG_ID, OSD_ID和r一起当做CRUSH_HASH的输入，求出一个十六进制输出，这和HASH(对象名)完全类似，只是多了两个输入。所以需要强调的是，对于相同的三个输入，计算得出的<code>draw</code>的值是一定相同的。</p><p>这个<code>draw</code>到底有啥用？其实，CRUSH希望得到一个随机数，也就是这里的<code>draw</code>，然后拿这个随机数去乘以OSD的权重，这样把随机数和OSD的权重搓在一起，就得到了每个OSD的实际签长，而且每个签都不一样长(极大概率)，就很容易从中挑一个最长的。</p><p>说白了，CRUSH希望<code>随机</code>挑一个OSD出来，但是还要满足权重越大的OSD被挑中的概率越大，为了达到随机的目的，它在挑之前让每个OSD都拿着自己的权重乘以一个随机数，再取乘积最大的那个。那么这里我们再定个小目标：挑个一亿次！从宏观来看，同样是乘以一个随机数，在样本容量足够大之后，这个随机数对挑中的结果不再有影响，起决定性影响的是OSD的权重，也就是说，OSD的权重越大，宏观来看被挑中的概率越大。</p><p>这里再说明下CRUSH造出来的随机数<code>draw</code>，前文可知，对于常量输入，一定会得到一样的输出，所以这并不是真正的随机，所以说，CRUSH是一个<code>伪随机</code>算法。下图是<code>CRUSH_HASH</code>的代码段，我喜欢叫它搅拌搅拌再搅拌得出一个随机数:</p><p><a href="http://www.xuxiaopang.com/images/1478244378743.png"><img src="http://www.xuxiaopang.com/images/1478244378743.png" alt="Alt text"></a></p><p>如果看到这里你已经被搅晕了，那让我再简单梳理下PG选择一个OSD时做的事情：</p><ul><li>给出一个PG_ID，作为CRUSH_HASH的输入。</li><li>CRUSH_HASH(PG_ID, OSD_ID, r) 得出一个随机数(重点是随机数，不是HASH)。</li><li>对于所有的OSD用他们的权重乘以每个OSD_ID对应的随机数，得到乘积。</li><li>选出乘积最大的OSD。</li><li>这个PG就会保存到这个OSD上。</li></ul><p>现在趁热打铁，解决一个PG映射到多个OSD的问题，还记得那个常量<code>r</code>吗？我们把<code>r+1</code>，再求一遍随机数，再去乘以每个OSD的权重，再去选出乘积最大的OSD，如果和之前的OSD编号不一样，那么就选中它，如果和之前的OSD编号一样的话，那么再把<code>r+2</code>，再次选一次，直到选出我们需要的三个不一样编号的OSD为止！</p><p>当然实际选择过程还要稍微复杂一点，我这里只是用最简单的方法来解释CRUSH在选择OSD的时候所做的事情。</p><p>下面我们来举个例子，假定我们有6个OSD，需要从中选出三个副本：</p><table><thead><tr><th>osd_id</th><th>weight</th><th>CRUSH_HASH</th><th>(CRUSH_HASH &amp; 0xffff)* weight</th></tr></thead><tbody><tr><td>osd.0</td><td>4</td><td>0xC35E90CB</td><td>0x2432C</td></tr><tr><td>osd.1</td><td>4</td><td>0xA67DE680</td><td><strong>0x39A00</strong></td></tr><tr><td>osd.2</td><td>4</td><td>0xF9B1B224</td><td>0x2C890</td></tr><tr><td>osd.3</td><td>4</td><td>0x42454470</td><td>0x111C0</td></tr><tr><td>osd.4</td><td>4</td><td>0xE950E2F9</td><td>0x38BE4</td></tr><tr><td>osd.5</td><td>4</td><td>0x8A844538</td><td>0x114E0</td></tr></tbody></table><p>这是<code>r = 0</code>的情况，这时候，我们选出<code>(CRUSH_HASH &amp; 0xFFFF) * weight</code>的值最大的一个，也就是<code>osd.1</code>的<code>0x39A00</code>,这就是我们选出的第一个OSD。<br>然后，我们再让<code>r = 1</code>，再生成一组<code>CRUSH_HASH</code>的随机值，乘以OSD的weight，再取一个最大的得到第二个OSD，依此得到第三个OSD，如果在此过程中，选中了相同的OSD，那么将<code>r</code>再加一，生成一组随机值，再选一次，直到选中三个OSD为止。</p><h2 id="CRUSH算法的应用"><a href="#CRUSH算法的应用" class="headerlink" title="CRUSH算法的应用"></a>CRUSH算法的应用</h2><p>理解了上面CRUSH选择OSD的过程，我们就很容易进一步将CRUSH算法结合实际结构，这里给出Sage在他的博士论文中画的一个树状结构图：<br><a href="http://www.xuxiaopang.com/images/1478486778573.png"><img src="http://www.xuxiaopang.com/images/1478486778573.png" alt="Alt text"></a></p><p>最下面的蓝色长条可以看成一个个主机，里面的灰色圆柱形可以看成一个个OSD，紫色的cabinet可以也就是一个个机柜， 绿色的row可以看成一排机柜，顶端的root是我们的根节点，没有实际意义，你可以把它看成一个数据中心的意思，也可以看成一个机房的意思，不过只是起到了一个树状结构的根节点的作用。</p><p>基于这样的结构选择OSD，我们提出了新的要求：</p><ul><li>一共选出三个OSD。</li><li>这三个OSD需要都位于一个row下面。</li><li>每个cabinet内至多有一个OSD。</li></ul><p>这样的要求，如果用上一节的CRUSH选OSD的方法，不能满足二三两个要求，因为OSD的分布是随机的。</p><p>那么要完成这样的要求，先看看我们现在有什么：</p><ul><li>每个OSD的weight。</li><li>每个主机也可以有一个weight，这个weight由主机内的所有OSD的weight累加而得。</li><li>每个cabinet的weight由所有主机的weight累加而得，其实就是这个cabinet下的所有OSD的权重之和。</li><li>同理推得每个row的weight有cabinet累加而得。</li><li>root的weight其实就是所有的OSD的权重之和。</li></ul><p>所以在这棵树状结构中，每个节点都有了自己的权重，每个节点的权重由<code>下一层</code>节点的权重累加而得，因此根节点root的权重就是这个集群所有的OSD的权重之和，那么有了这么多权重之后，我们怎么选出那三个OSD呢？</p><p>仿照CRUSH选OSD的方法：</p><ul><li>CRUSH从root下的所有的row中选出一个row。</li><li>在刚刚的一个row下面的所有cabinet中，CRUSH选出三个cabinet。</li><li>在刚刚的三个cabinet下面的所有OSD中，CRUSH分别选出一个OSD。</li></ul><p>因为每个row都有自己的权重，所以CRUSH选row的方法和选OSD的方法完全一样，用row的权重乘以一个随机数，取最大。然后在这个row下面继续选出三个cabinet，再在每个cabinet下面选出一个OSD。</p><p>这样做的根本意义在于，将数据平均分布在了这个集群里面的所有OSD上，如果两台机器的权重是16：32，那么这两台机器上分布的数据量也是1：2。同时，这样选择做到了三个OSD分布在三个不同的cabinet上。</p><p>那么结合图例这里给出CRUSH算法的流程：</p><ul><li>take(root) ============&gt; [root]</li><li>choose(1, row) ========&gt; [row2]</li><li>choose(3, cabinet) =====&gt; [cab21, cab23, cab24] <em>在[row2]下</em></li><li>choose(1, osd) ========&gt; [osd2107, osd2313, osd2437] <em>在三个cab下</em></li><li>emit ================&gt; [osd2107, osd2313, osd2437]</li></ul><p>这里给出CRUSH算法的两个重要概念：</p><ul><li>BUCKET/OSD : OSD和我们的磁盘一一对应，bucket是除了OSD以外的所有非子叶节点，比如上面的cabinet,row,root等都是。</li><li>RULE ： CRUSH选择遵循一条条选择路径，一个选择路径就是一个rule。</li></ul><p>RULE一般分为三步走 : <code>take</code>–&gt;<code>choose N</code>–&gt;<code>emit</code>。<code>Take</code>这一步负责选择一个根节点，这个根节点不一定是<code>root</code>，也可以是任何一个Bucket。<code>choose N</code>做的就是按照每个Bucket的weight以及每个<code>choose</code>语句选出符合条件的Bucket，并且，<strong>下一个choose的选择对象为上一步得到的结果</strong>。<code>emit</code>就是输出最终结果，相当于出栈。</p><p>这里再举个简单的例子，也就是我们最常见的三个主机每个主机三个OSD的结构：<br><a href="http://www.xuxiaopang.com/images/1478497045877.png"><img src="http://www.xuxiaopang.com/images/1478497045877.png" alt="Alt text"></a></p><p>我们要从三个host下面各选出一个OSD，使得三个副本各落在一个host上，这时候，就能保证挂掉两个host，还有一个副本在运行了，那么这样的RULE就形如：</p><ul><li>take(root) ============&gt; [default] 注意是根节点的名字</li><li>choose(3, host) ========&gt; [ceph-1, ceph-2, ceph-3]</li><li>choose(1, osd) ========&gt; [osd.3, osd.1, osd.8]</li><li>emit()</li></ul><p>这里我们来简单总结一下：我们把一个生产环境的机房画成一个树状结构，最下面一层为OSD层，每个OSD有自己的权重，OSD的上面由host/rack/row/room/root等等节点构成，每个节点的权重都是由下层的节点累加而成，CRUSH选择每个节点的算法(straw)都是一样的，用它们的weight乘以一个随机数取其中最大，只是我们通过<code>choose</code>的语句来判断选择的节点类型和个数。最后不要忘了选出来的结果是PG-&gt;OSD的映射，比如:<code>pg 0.a2 ---&gt; [osd.3, osd.1, osd.8]</code>和<code>pg 0.33 ---&gt; [osd.0, osd.5, osd.7]</code>, 每个PG都有自己到OSD的映射关系，这个关系用公式总结就是： <code>CRUSH(pg_id) ---&gt; [osd.a, osd.b ...osd.n]</code>。</p><p>到目前为止，我们已经完成了一份数据保存到一群Server的第二步，再整体回顾下这个流程：</p><ul><li>每个文件都有一个唯一的对象名。</li><li>Pool_ID + HASH(对象名) % PG_NUM 得到PG_ID</li><li>CRUSH(PG_ID) 得到该PG将要保存的OSD组合</li><li>这个对象就会保存到位于这些OSD上的PG上(PG就是磁盘上的目录)</li></ul><p>所以，HASH算法负责计算对象名到PG的映射，CRUSH负责计算PG到OSD的映射，暂且记住这一点。</p><h2 id="CRUSH里的虚虚实实"><a href="#CRUSH里的虚虚实实" class="headerlink" title="CRUSH里的虚虚实实"></a>CRUSH里的虚虚实实</h2><p>现在，我们有三台主机，每台主机上的配置如下：</p><table><thead><tr><th>主机名</th><th>磁盘数</th></tr></thead><tbody><tr><td>ceph-1</td><td>4T SATA <em>3 800G SSD</em> 1</td></tr><tr><td>ceph-2</td><td>4T SATA <em>3 800G SSD</em> 1</td></tr><tr><td>ceph-3</td><td>4T SATA <em>3 800G SSD</em> 1</td></tr></tbody></table><p>但是想要构建成如下的结构：<br><a href="http://www.xuxiaopang.com/images/1478501078240.png"><img src="http://www.xuxiaopang.com/images/1478501078240.png" alt="Alt text"></a></p><p>这里我们不能把一台主机劈成两半把SATA盘和SSD各分一半，所以就来介绍下CRUSH里面的虚虚实实，什么是实？所有的OSD都是实实在在的节点！什么是虚？除了OSD之外的所有Bucket都是虚的！</p><p>也就是说，我们可以建立几个Bucket，分别名叫<code>ceph-1-sata</code>,<code>root-sata</code>,<code>ceph-1-ssd</code>, <code>root-ssd</code>，而这些Bucket不需要和实际结构有任何关系，可以看成是我们假想出来的结构，为了达到分层的目的，我们可以假象出任意形式的bucket。</p><p>将所有的SATA添加到<code>ceph-x-sata</code>节点下，再将<code>ceph-x-sata</code>加入到根节点<code>root-sata</code>下，同理处理剩下的三个SSD盘。那么现在可以制定两个RULE：</p><ul><li>rule-sata：<ul><li>take(root-sata)</li><li>choose(3, host)</li><li>choose(1, osd)</li><li>emit</li></ul></li><li>rule-ssd:<ul><li>take(root-ssd)</li><li>choose(3, host)</li><li>choose(1, osd)</li><li>emit</li></ul></li></ul><p>具体的建造指令可以参考之前的<a href="http://xuxiaopang.com/2016/10/10/ceph-full-install-el7-jewel/#%E8%87%AA%E5%AE%9A%E4%B9%89crush">自定义CRUSH一节</a></p><p>这一节想要说明的是，CRUSH里面的节点除了OSD之外的所有bucket都是可以自定义的，并不需要和实际的物理结构相关，但要记住这样做的目的是将OSD分开，从而建立适当的RULE去选择OSD，所以不要把树状结构建立的脱离了实际情况，比如从三个机器上各挑一个OSD然后放到一个自定义的host节点下，虽然可以这样做，但是是没有意义的，说白了要根据自己的数据分布要求去构建OSD树结构，因为CRUSH只认RULE,并不知道你底层的实际结构！！！</p><p>甚至，你可以像<a href="http://cephnotes.ksperis.com/blog/2015/02/02/crushmap-example-of-a-hierarchical-cluster-map/">这篇文章</a>里面一样构建出花式的树状结构！一切都在于你的想象力以及集群的应用需求。</p><p><a href="http://www.xuxiaopang.com/images/1478503163385.png"><img src="http://www.xuxiaopang.com/images/1478503163385.png" alt="Alt text"></a></p><h2 id="Ceph中的CRUSH"><a href="#Ceph中的CRUSH" class="headerlink" title="Ceph中的CRUSH"></a>Ceph中的CRUSH</h2><p>现在再正式介绍CRUSH算法在Ceph中的存在形式，首先导出一个集群的CRUSH Map:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs python">[root@ceph-<span class="hljs-number">1</span> ~]<span class="hljs-comment"># ceph osd getcrushmap -o /tmp/map</span><br>got crush <span class="hljs-built_in">map</span> <span class="hljs-keyword">from</span> osdmap epoch <span class="hljs-number">67</span><br>[root@ceph-<span class="hljs-number">1</span> ~]<span class="hljs-comment"># crushtool -d /tmp/map -o /tmp/map.txt </span><br>[root@ceph-<span class="hljs-number">1</span> ~]<span class="hljs-comment"># cat /tmp/map.txt </span><br><span class="hljs-comment"># begin crush map</span><br>tunable choose_local_tries <span class="hljs-number">0</span><br>tunable choose_local_fallback_tries <span class="hljs-number">0</span><br>tunable choose_total_tries <span class="hljs-number">50</span><br>tunable chooseleaf_descend_once <span class="hljs-number">1</span><br>tunable straw_calc_version <span class="hljs-number">1</span><br><br><span class="hljs-comment"># devices</span><br>device <span class="hljs-number">0</span> osd<span class="hljs-number">.0</span><br>device <span class="hljs-number">1</span> osd<span class="hljs-number">.1</span><br>device <span class="hljs-number">2</span> osd<span class="hljs-number">.2</span><br>device <span class="hljs-number">3</span> osd<span class="hljs-number">.3</span><br>device <span class="hljs-number">4</span> osd<span class="hljs-number">.4</span><br>device <span class="hljs-number">5</span> osd<span class="hljs-number">.5</span><br>device <span class="hljs-number">6</span> osd<span class="hljs-number">.6</span><br>device <span class="hljs-number">7</span> osd<span class="hljs-number">.7</span><br>device <span class="hljs-number">8</span> osd<span class="hljs-number">.8</span><br><br><span class="hljs-comment"># types</span><br><span class="hljs-built_in">type</span> <span class="hljs-number">0</span> osd<br><span class="hljs-built_in">type</span> <span class="hljs-number">1</span> host<br><span class="hljs-built_in">type</span> <span class="hljs-number">2</span> chassis<br><span class="hljs-built_in">type</span> <span class="hljs-number">3</span> rack<br><span class="hljs-built_in">type</span> <span class="hljs-number">4</span> row<br><span class="hljs-built_in">type</span> <span class="hljs-number">5</span> pdu<br><span class="hljs-built_in">type</span> <span class="hljs-number">6</span> pod<br><span class="hljs-built_in">type</span> <span class="hljs-number">7</span> room<br><span class="hljs-built_in">type</span> <span class="hljs-number">8</span> datacenter<br><span class="hljs-built_in">type</span> <span class="hljs-number">9</span> region<br><span class="hljs-built_in">type</span> <span class="hljs-number">10</span> root<br><br><span class="hljs-comment"># buckets</span><br>host ceph-<span class="hljs-number">2</span> &#123;<br><span class="hljs-built_in">id</span> -<span class="hljs-number">2</span><span class="hljs-comment"># do not change unnecessarily</span><br><span class="hljs-comment"># weight 5.970</span><br>alg straw<br><span class="hljs-built_in">hash</span> <span class="hljs-number">0</span><span class="hljs-comment"># rjenkins1</span><br>item osd<span class="hljs-number">.0</span> weight <span class="hljs-number">1.990</span><br>item osd<span class="hljs-number">.1</span> weight <span class="hljs-number">1.990</span><br>item osd<span class="hljs-number">.2</span> weight <span class="hljs-number">1.990</span><br>&#125;<br>host ceph-<span class="hljs-number">1</span> &#123;<br><span class="hljs-built_in">id</span> -<span class="hljs-number">3</span><span class="hljs-comment"># do not change unnecessarily</span><br><span class="hljs-comment"># weight 5.970</span><br>alg straw<br><span class="hljs-built_in">hash</span> <span class="hljs-number">0</span><span class="hljs-comment"># rjenkins1</span><br>item osd<span class="hljs-number">.3</span> weight <span class="hljs-number">1.990</span><br>item osd<span class="hljs-number">.4</span> weight <span class="hljs-number">1.990</span><br>item osd<span class="hljs-number">.5</span> weight <span class="hljs-number">1.990</span><br>&#125;<br>host ceph-<span class="hljs-number">3</span> &#123;<br><span class="hljs-built_in">id</span> -<span class="hljs-number">4</span><span class="hljs-comment"># do not change unnecessarily</span><br><span class="hljs-comment"># weight 5.970</span><br>alg straw<br><span class="hljs-built_in">hash</span> <span class="hljs-number">0</span><span class="hljs-comment"># rjenkins1</span><br>item osd<span class="hljs-number">.6</span> weight <span class="hljs-number">1.990</span><br>item osd<span class="hljs-number">.7</span> weight <span class="hljs-number">1.990</span><br>item osd<span class="hljs-number">.8</span> weight <span class="hljs-number">1.990</span><br>&#125;<br>root default &#123;<br><span class="hljs-built_in">id</span> -<span class="hljs-number">1</span><span class="hljs-comment"># do not change unnecessarily</span><br><span class="hljs-comment"># weight 17.910</span><br>alg straw<br><span class="hljs-built_in">hash</span> <span class="hljs-number">0</span><span class="hljs-comment"># rjenkins1</span><br>item ceph-<span class="hljs-number">2</span> weight <span class="hljs-number">5.970</span><br>item ceph-<span class="hljs-number">1</span> weight <span class="hljs-number">5.970</span><br>item ceph-<span class="hljs-number">3</span> weight <span class="hljs-number">5.970</span><br>&#125;<br><br><span class="hljs-comment"># rules</span><br>rule replicated_ruleset &#123;<br>ruleset <span class="hljs-number">0</span><br><span class="hljs-built_in">type</span> replicated<br>min_size <span class="hljs-number">1</span><br>max_size <span class="hljs-number">10</span><br>step take default<br>step chooseleaf firstn <span class="hljs-number">0</span> <span class="hljs-built_in">type</span> host<br>step emit<br>&#125;<br><br><span class="hljs-comment"># end crush map</span><br>[root@ceph-<span class="hljs-number">1</span> ~]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p>简单介绍下几个区域的意义：</p><ul><li><code>tunable</code>：还记得<code>CRUSH_HASH</code>算法中的<code>r</code>变量吗，选择失败的时候这个值经常会自加一，<code>choose_total_tries 50</code>这个50就是用来限定总共失败的次数的，CRUSH算法本身是个递归算法，所以给定一个总共失败次数防止算法无限选择失败。那么如果要选出3副本，选失败了50次只选出一个OSD，那么最终结果是？CRUSH将输出<code>[osd.a， ，]</code>这样的输出，也就是说只给出一个OSD，一般很少会遇到这种情况，除非你要从一个只有一个host的root下面去选出三个host。</li><li><code>devices</code> : 就是所有的OSD的集合。</li><li><code>types</code>: 就是集群内所有的Bucket+OSD的类型的取值范围，所有的Bucket都要属于这些类型，当然，你可以自己增删这里给出的类型，注意<code>type</code>后面的数字必须唯一，因为CRUSH算法在保存类型时不是使用字符串，而是类型对应的数字，所以类型名称在CRUSH眼里是没有意义的。</li><li><code>buckets</code>：就是树上的除了OSD以外的节点，从内容来看可以发现，每个bucket都有向下包含关系，这里看到ID和类型的ID是一样的，CRUSH在底层并不保存节点的名称字符串，而是以数字保存的，值得一提的是，OSD的ID是大于等于零的，bucket的ID是小于零的。还有就是<code>alg straw</code>，因为straw是最公平的选择方法，其实还有三个算法(uniform, tree, list)，因为没有straw综合分高，所以就不介绍了。</li><li><code>rules</code>： 最下面的rule区域是我们修改的最多的地方，<code>replicated_ruleset</code>这个是这个rule的名称，需要唯一，同样CRUSH只保存这个rule的ID，其ID就是<code>ruleset 0</code>这里的<code>0</code>,所以需要添加一个rule的时候需要注意名称和ID都不能重复。下面的三个<code>step</code>就是RULE的三步走策略，里面具体的参数我就不再赘述，可以<a href="http://docs.ceph.com/docs/master/rados/operations/crush-map/">参考官方文档的这一章</a>。</li></ul><p>还是简单的讲解下这句<code>step chooseleaf firstn 0 type host</code>， 实际的RULE里面分为<code>choose</code>和<code>chooseleaf</code>两种，其中<code>choose</code>用于选择多个Bucket，Bucket是最终选择结果，相当于<code>choose(3, Bucket)</code>。<code>chooseleaf</code>用于选择多个Bucket，并在这些Bucket下各选出一个OSD，OSD是最终选择结果，相当于<code>choose(3, Bucket) + choose(1, osd)</code>。<code>type</code>后面的<code>host</code>就是要选择的Bucket类型。<code>firstn</code>后面的<code>0</code>,是选择的副本数，<code>0</code>等于副本数，也就是3的意思，具体参考官方文档的解释。</p><p>所以Sage论文中的图，对应到实际CRUSH的RULE就是：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros">rule Sage_Paper &#123;<br>ruleset 0<br><span class="hljs-built_in">type </span>replicated<br>min_size 1<br>max_size 10<br><span class="hljs-keyword">step</span> take root<br><span class="hljs-keyword">step</span> choose firstn 1<span class="hljs-built_in"> type </span>row<br><span class="hljs-keyword">step</span> chooseleaf firstn 0<span class="hljs-built_in"> type </span>cabinet<br><span class="hljs-keyword">step</span> emit<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>介绍完了这两步走的核心流程之后，最后再着重强调下<code>计算</code>两字，可以发现，从对象计算PG再到PG计算OSD组合，从头到尾都是通过计算得到最终的映射关系的，但是这些计算不论放在客户端还是服务器端，计算的结果都是相同的，因为里面所谓的随机值都是伪随机，只要传入一样的输入得到的输出结果都是一样的，所以Ceph把计算对象存储位置的任务发放给客户端，实际上，客户端在计算完一个对象需要保存的OSD之后，直接和OSD建立通讯，将数据直接存入OSD中，只要集群的Map没有变化，客户端和服务端计算出来的保存位置都是一样的，所以这大大的降低了服务器端的计算压力。</p><p>本文没有直接介绍CRUSH算法，而是从<code>把一个对象存进Ceph</code>的流程来分析，着重解释了对象到PG的映射，PG到OSD的映射这两个流程，介绍了它们的计算方法。</p><p>最后再给一个别人画的计算路径图，仅供理解。<br><a href="http://www.xuxiaopang.com/images/1478573403493.png"><img src="http://www.xuxiaopang.com/images/1478573403493.png" alt="Alt text"></a></p>]]></content>
    
    
    
    <tags>
      
      <tag>ceph</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ceph 修改mon相关配置</title>
    <link href="/2018/11/13/Ceph-%E4%BF%AE%E6%94%B9mon%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/"/>
    <url>/2018/11/13/Ceph-%E4%BF%AE%E6%94%B9mon%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h3 id="删除一个monitor"><a href="#删除一个monitor" class="headerlink" title="删除一个monitor"></a>删除一个monitor</h3><p>修改配置文件</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment"># 原配置文件</span><br>[ceph@ceph-mon1 <span class="hljs-keyword">my</span>-cluster]$ cat ceph.conf |<span class="hljs-keyword">grep</span> mon<br>mon_initial_members = ceph-mon1, ceph-mon2, ceph-mon3<br>mon_host = <span class="hljs-number">10.117</span>.<span class="hljs-number">130.173</span>,<span class="hljs-number">10.117</span>.<span class="hljs-number">130.174</span>,<span class="hljs-number">10.117</span>.<span class="hljs-number">130.175</span><br><br><span class="hljs-comment"># 删除后的配置文件</span><br>[ceph@ceph-mon1 <span class="hljs-keyword">my</span>-cluster]$ cat ceph.conf |<span class="hljs-keyword">grep</span> mon<br>mon_initial_members = ceph-mon1, ceph-mon2<br>mon_host = <span class="hljs-number">10.117</span>.<span class="hljs-number">130.173</span>,<span class="hljs-number">10.117</span>.<span class="hljs-number">130.174</span><br></code></pre></td></tr></table></figure><p>推送配置文件到原节点上（原来是3个mon）</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[ceph@ceph-mon1 my-cluster]$ ceph-deploy --overwrite-conf admin ceph-mon1 ceph-mon2 ceph-mon3   <br>[ceph_deploy.conf][<span class="hljs-builtin-name">DEBUG</span> ] found configuration file at: /home/ceph/.cephdeploy.conf<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ] Invoked (1.5.37): /bin/ceph-deploy --overwrite-conf admin ceph-mon1 ceph-mon2 ceph-mon3<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ] ceph-deploy options:<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  username                      : None<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  verbose                       : <span class="hljs-literal">False</span><br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  overwrite_conf                : <span class="hljs-literal">True</span><br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  quiet                         : <span class="hljs-literal">False</span><br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  cd_conf                       : &lt;ceph_deploy.conf.cephdeploy.Conf<span class="hljs-built_in"> instance </span>at 0x1664d88&gt;<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  cluster                       : ceph<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ] <span class="hljs-built_in"> client </span>                       : [<span class="hljs-string">&#x27;ceph-mon1&#x27;</span>, <span class="hljs-string">&#x27;ceph-mon2&#x27;</span>, <span class="hljs-string">&#x27;ceph-mon3&#x27;</span>]<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  func                          : &lt;function admin at 0x159c848&gt;<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  ceph_conf                     : None<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  default_release               : <span class="hljs-literal">False</span><br>[ceph_deploy.admin][<span class="hljs-builtin-name">DEBUG</span> ] Pushing admin keys <span class="hljs-keyword">and</span> conf <span class="hljs-keyword">to</span> ceph-mon1<br>[ceph-mon1][<span class="hljs-builtin-name">DEBUG</span> ]<span class="hljs-built_in"> connection </span>detected need <span class="hljs-keyword">for</span> sudo<br>[ceph-mon1][<span class="hljs-builtin-name">DEBUG</span> ] connected <span class="hljs-keyword">to</span> host: ceph-mon1 <br>[ceph-mon1][<span class="hljs-builtin-name">DEBUG</span> ] detect platform information <span class="hljs-keyword">from</span> remote host<br>[ceph-mon1][<span class="hljs-builtin-name">DEBUG</span> ] detect machine<span class="hljs-built_in"> type</span><br><span class="hljs-built_in"></span>[ceph-mon1][<span class="hljs-builtin-name">DEBUG</span> ] write cluster configuration <span class="hljs-keyword">to</span> /etc/ceph/&#123;cluster&#125;.conf<br>[ceph_deploy.admin][<span class="hljs-builtin-name">DEBUG</span> ] Pushing admin keys <span class="hljs-keyword">and</span> conf <span class="hljs-keyword">to</span> ceph-mon2<br>[ceph-mon2][<span class="hljs-builtin-name">DEBUG</span> ]<span class="hljs-built_in"> connection </span>detected need <span class="hljs-keyword">for</span> sudo<br>[ceph-mon2][<span class="hljs-builtin-name">DEBUG</span> ] connected <span class="hljs-keyword">to</span> host: ceph-mon2 <br>[ceph-mon2][<span class="hljs-builtin-name">DEBUG</span> ] detect platform information <span class="hljs-keyword">from</span> remote host<br>[ceph-mon2][<span class="hljs-builtin-name">DEBUG</span> ] detect machine<span class="hljs-built_in"> type</span><br><span class="hljs-built_in"></span>[ceph-mon2][<span class="hljs-builtin-name">DEBUG</span> ] write cluster configuration <span class="hljs-keyword">to</span> /etc/ceph/&#123;cluster&#125;.conf<br>[ceph_deploy.admin][<span class="hljs-builtin-name">DEBUG</span> ] Pushing admin keys <span class="hljs-keyword">and</span> conf <span class="hljs-keyword">to</span> ceph-mon3<br>[ceph-mon3][<span class="hljs-builtin-name">DEBUG</span> ]<span class="hljs-built_in"> connection </span>detected need <span class="hljs-keyword">for</span> sudo<br>[ceph-mon3][<span class="hljs-builtin-name">DEBUG</span> ] connected <span class="hljs-keyword">to</span> host: ceph-mon3 <br>[ceph-mon3][<span class="hljs-builtin-name">DEBUG</span> ] detect platform information <span class="hljs-keyword">from</span> remote host<br>[ceph-mon3][<span class="hljs-builtin-name">DEBUG</span> ] detect machine<span class="hljs-built_in"> type</span><br><span class="hljs-built_in"></span>[ceph-mon3][<span class="hljs-builtin-name">DEBUG</span> ] write cluster configuration <span class="hljs-keyword">to</span> /etc/ceph/&#123;cluster&#125;.conf<br></code></pre></td></tr></table></figure><p>使用<code>ceph-deploy</code>删除<code>ceph-mon3</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[ceph@ceph-mon1 my-cluster]$ ceph-deploy mon destroy ceph-mon3<br>[ceph_deploy.conf][<span class="hljs-builtin-name">DEBUG</span> ] found configuration file at: /home/ceph/.cephdeploy.conf<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ] Invoked (1.5.37): /bin/ceph-deploy mon destroy ceph-mon3<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ] ceph-deploy options:<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  username                      : None<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  verbose                       : <span class="hljs-literal">False</span><br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  overwrite_conf                : <span class="hljs-literal">False</span><br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  subcommand                    : destroy<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  quiet                         : <span class="hljs-literal">False</span><br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  cd_conf                       : &lt;ceph_deploy.conf.cephdeploy.Conf<span class="hljs-built_in"> instance </span>at 0xe2ef80&gt;<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  cluster                       : ceph<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  mon                           : [<span class="hljs-string">&#x27;ceph-mon3&#x27;</span>]<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  func                          : &lt;function mon at 0xe23398&gt;<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  ceph_conf                     : None<br>[ceph_deploy.cli][<span class="hljs-builtin-name">INFO</span>  ]  default_release               : <span class="hljs-literal">False</span><br>[ceph_deploy.mon][<span class="hljs-builtin-name">DEBUG</span> ] Removing mon <span class="hljs-keyword">from</span> ceph-mon3<br>[ceph-mon3][<span class="hljs-builtin-name">DEBUG</span> ]<span class="hljs-built_in"> connection </span>detected need <span class="hljs-keyword">for</span> sudo<br>[ceph-mon3][<span class="hljs-builtin-name">DEBUG</span> ] connected <span class="hljs-keyword">to</span> host: ceph-mon3 <br>[ceph-mon3][<span class="hljs-builtin-name">DEBUG</span> ] detect platform information <span class="hljs-keyword">from</span> remote host<br>[ceph-mon3][<span class="hljs-builtin-name">DEBUG</span> ] detect machine<span class="hljs-built_in"> type</span><br><span class="hljs-built_in"></span>[ceph-mon3][<span class="hljs-builtin-name">DEBUG</span> ] <span class="hljs-builtin-name">find</span> the location of an executable<br>[ceph-mon3][<span class="hljs-builtin-name">DEBUG</span> ] <span class="hljs-builtin-name">get</span> remote short hostname<br>[ceph-mon3][<span class="hljs-builtin-name">INFO</span>  ] Running command: sudo ceph <span class="hljs-attribute">--cluster</span>=ceph -n mon. -k /var/lib/ceph/mon/ceph-ceph-mon3/keyring mon <span class="hljs-builtin-name">remove</span> ceph-mon3<br>[ceph-mon3][WARNIN] removing mon.ceph-mon3 at 10.117.130.175:6789/0, there will be 2 monitors<br>[ceph-mon3][<span class="hljs-builtin-name">INFO</span>  ] polling the daemon <span class="hljs-keyword">to</span> verify it stopped<br>[ceph-mon3][<span class="hljs-builtin-name">INFO</span>  ] Running command: sudo systemctl stop ceph-mon@ceph-mon3.service<br>[ceph-mon3][<span class="hljs-builtin-name">INFO</span>  ] Running command: sudo mkdir -p /var/lib/ceph/mon-removed<br>[ceph-mon3][<span class="hljs-builtin-name">DEBUG</span> ] move old monitor data<br></code></pre></td></tr></table></figure><p>通过日志我们可以看到，原数据文件并没有被删除。而是被rename成了mon-removed</p><h3 id="添加一个monitor"><a href="#添加一个monitor" class="headerlink" title="添加一个monitor"></a>添加一个monitor</h3><p>修改配置文件增加新的mon</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns">[ceph@ceph-mon1 my-cluster]$ cat ceph.conf |grep mon<br>mon_initial_members = ceph-mon1, ceph-mon2, ceph-mon3<br>mon_host = <span class="hljs-number">10.117.130.173</span>,<span class="hljs-number">10.117.130.174</span>,<span class="hljs-number">10.117.130.175</span><br></code></pre></td></tr></table></figure><p>推送配置文件到原来的2节点上</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ceph</span>-deploy --overwrite-conf admin ceph-mon<span class="hljs-number">1</span> ceph-mon<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>使用<code>ceph-deploy</code>添加ceph-mon3</p><blockquote><p>过程中报错，修改配置文件然后重新同步</p><p>[ceph-mon3][WARNIN] neither <code>public_addr</code> nor <code>public_network</code> keys are defined for monitors</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown">[ceph@ceph-mon1 my-cluster]$ ceph-deploy --overwrite-conf mon add ceph-mon3<br>...<br><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><br>[<span class="hljs-string">ceph-mon3</span>][<span class="hljs-symbol">INFO  </span>] monitor: mon.ceph-mon3 is currently at the state of probing<br></code></pre></td></tr></table></figure><h3 id="修改ip"><a href="#修改ip" class="headerlink" title="修改ip"></a>修改ip</h3><p>思路就是把<code>monmap</code>导出然后修改ip，然后再导入。</p><p>monmap导出</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs dns">[ceph@ceph-mon1 my-cluster]$ ceph mon getmap -o /tmp/monmap<br>got monmap epoch <span class="hljs-number">4</span><br>[ceph@ceph-mon1 my-cluster]$ monmaptool --print /tmp/monmap <br>monmaptool: monmap file /tmp/monmap<br>epoch <span class="hljs-number">4</span><br>fsid <span class="hljs-number">7026190</span>e-<span class="hljs-number">2c16-4a84</span>-b7ed-<span class="hljs-number">3d</span>e95a0a27dd<br>last_changed <span class="hljs-number">2017-04-24</span> <span class="hljs-number">16</span>:<span class="hljs-number">18</span>:<span class="hljs-number">01.473298</span><br>created <span class="hljs-number">2017-04-19</span> <span class="hljs-number">15</span>:<span class="hljs-number">46</span>:<span class="hljs-number">13.379737</span><br><span class="hljs-number">0</span>: <span class="hljs-number">10.117.130.173</span>:<span class="hljs-number">6789</span>/<span class="hljs-number">0</span> mon.ceph-mon1<br><span class="hljs-number">1</span>: <span class="hljs-number">10.117.130.174</span>:<span class="hljs-number">6789</span>/<span class="hljs-number">0</span> mon.ceph-mon2<br><span class="hljs-number">2</span>: <span class="hljs-number">10.117.130.175</span>:<span class="hljs-number">6789</span>/<span class="hljs-number">0</span> mon.ceph-mon3<br></code></pre></td></tr></table></figure><p>如果集群已经失效可以重建<code>monmap</code></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs vim">[ceph@ceph-mon1 my-cluster]$ <span class="hljs-keyword">cat</span> ceph.<span class="hljs-keyword">conf</span> |<span class="hljs-keyword">grep</span> fsid<br>fsid = <span class="hljs-number">7026190</span><span class="hljs-keyword">e</span>-<span class="hljs-number">2</span>c16-<span class="hljs-number">4</span>a84-b7ed-<span class="hljs-number">3</span>de95a0a27dd<br><br># Now create <span class="hljs-keyword">a</span> <span class="hljs-keyword">new</span> one, just <span class="hljs-keyword">be</span> sure <span class="hljs-keyword">to</span> use the same fsid <span class="hljs-keyword">as</span> your current monmap:<br>monmaptool --create --<span class="hljs-built_in">add</span> mon.ceph-mon1 <span class="hljs-number">10.0</span>.<span class="hljs-number">1.1</span>:<span class="hljs-number">6789</span> --<span class="hljs-built_in">add</span> mon.ceph-mon2 <span class="hljs-number">10.0</span>.<span class="hljs-number">1.2</span>:<span class="hljs-number">6789</span> --<span class="hljs-built_in">add</span> mon.ceph-mon3 <span class="hljs-number">10.0</span>.<span class="hljs-number">1.3</span>:<span class="hljs-number">6789</span> --fsid <span class="hljs-number">7026190</span><span class="hljs-keyword">e</span>-<span class="hljs-number">2</span>c16-<span class="hljs-number">4</span>a84-b7ed-<span class="hljs-number">3</span>de95a0a27dd --clobber monmap<br>monmaptoo<span class="hljs-variable">l:</span> monmap <span class="hljs-keyword">file</span> monmap<br>monmaptoo<span class="hljs-variable">l:</span> <span class="hljs-keyword">set</span> fsid <span class="hljs-keyword">to</span> dea89929-<span class="hljs-number">963</span><span class="hljs-keyword">c</span>-<span class="hljs-number">4173</span>-<span class="hljs-number">9</span>eaf-<span class="hljs-number">8</span>e832d6d9dd1<br>monmaptoo<span class="hljs-variable">l:</span> writing epoch <span class="hljs-number">0</span> <span class="hljs-keyword">to</span> monmap (<span class="hljs-number">3</span> monitors)<br><br>$ monmaptool --<span class="hljs-keyword">print</span> monmap <br>monmaptoo<span class="hljs-variable">l:</span> monmap <span class="hljs-keyword">file</span> monmap<br>epoch <span class="hljs-number">0</span><br>fsid dea89929-<span class="hljs-number">963</span><span class="hljs-keyword">c</span>-<span class="hljs-number">4173</span>-<span class="hljs-number">9</span>eaf-<span class="hljs-number">8</span>e832d6d9dd1<br>last_changed <span class="hljs-number">2012</span>-<span class="hljs-number">07</span>-<span class="hljs-number">27</span> <span class="hljs-number">01</span>:<span class="hljs-number">18</span>:<span class="hljs-number">43.321681</span><br>created <span class="hljs-number">2012</span>-<span class="hljs-number">07</span>-<span class="hljs-number">27</span> <span class="hljs-number">01</span>:<span class="hljs-number">18</span>:<span class="hljs-number">43.321681</span><br><span class="hljs-number">0</span>: <span class="hljs-number">10.0</span>.<span class="hljs-number">1.1</span>:<span class="hljs-number">6789</span>/<span class="hljs-number">0</span> mon.ceph-mon1<br><span class="hljs-number">1</span>: <span class="hljs-number">10.0</span>.<span class="hljs-number">1.2</span>:<span class="hljs-number">6789</span>/<span class="hljs-number">0</span> mon.ceph-mon2<br><span class="hljs-number">2</span>: <span class="hljs-number">10.0</span>.<span class="hljs-number">1.3</span>:<span class="hljs-number">6789</span>/<span class="hljs-number">0</span> mon.ceph-mon3<br></code></pre></td></tr></table></figure><p>导入monmap</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gradle">scp monmap mon.ceph-mon2:<span class="hljs-regexp">/tmp/m</span>onmap<br>scp monmap mon.ceph-mon3:<span class="hljs-regexp">/tmp/m</span>onmap<br><br># <span class="hljs-number">3</span>节点分别导入monmap<br>ceph-mon -i mon.ceph-mon1 --<span class="hljs-keyword">inject</span>-monmap <span class="hljs-regexp">/tmp/m</span>onmap<br>ceph-mon -i mon.ceph-mon2 --<span class="hljs-keyword">inject</span>-monmap <span class="hljs-regexp">/tmp/m</span>onmap<br>ceph-mon -i mon.ceph-mon3 --<span class="hljs-keyword">inject</span>-monmap <span class="hljs-regexp">/tmp/m</span>onmap<br></code></pre></td></tr></table></figure><p>同步配置文件，重启进程</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 配置文件要先修改成正确的ip地址</span><br><span class="hljs-attribute">ceph</span>-deploy --overwrite-conf admin ceph-mon<span class="hljs-number">1</span> ceph-mon<span class="hljs-number">2</span> ceph-mon<span class="hljs-number">3</span><br><br><span class="hljs-comment"># ssh到mon节点 </span><br><span class="hljs-attribute">systemctl</span> start ceph-mon@ceph-mon<span class="hljs-number">1</span>.service<br><span class="hljs-attribute">systemctl</span> start ceph-mon@ceph-mon<span class="hljs-number">2</span>.service<br><span class="hljs-attribute">systemctl</span> start ceph-mon@ceph-mon<span class="hljs-number">3</span>.service<br></code></pre></td></tr></table></figure><h3 id="mon备份"><a href="#mon备份" class="headerlink" title="mon备份"></a>mon备份</h3><p>思路关闭一个mon，然后打包备份，然后启动mon</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gradle">mkdir -p /backups<br>systemctl stop ceph-mon@ceph-mon3.service<br>[root@ceph-mon3 mon]# tar cfz <span class="hljs-regexp">/backups/</span>ceph-mon-backup_`date +%F`.tar.gz <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/ceph/m</span>on<br>[root@ceph-mon3 mon]# tar cvfzP  <span class="hljs-regexp">/backups/</span>ceph-confbackup_`date +%F`.tar.gz <span class="hljs-regexp">/etc/</span>ceph<br><br>systemctl start ceph-mon@ceph-mon3.service<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>ceph</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux使用fio测试磁盘</title>
    <link href="/2018/11/13/Linux%E4%BD%BF%E7%94%A8fio%E6%B5%8B%E8%AF%95%E7%A3%81%E7%9B%98/"/>
    <url>/2018/11/13/Linux%E4%BD%BF%E7%94%A8fio%E6%B5%8B%E8%AF%95%E7%A3%81%E7%9B%98/</url>
    
    <content type="html"><![CDATA[<p>在github的<a href="https://github.com/axboe/fio/blob/master/HOWTO">HOWTO</a>文档中，作者对所有的配置参数做了详细的解释，当遇到不熟悉的参数时，可以进行查阅。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs gradle">bs      :  设置IO请求的块大小,可以给出上下限<br>           支持对<span class="hljs-keyword">read</span>，<span class="hljs-keyword">write</span>，trim分别进行设置，以逗号隔开<br>           比如：bs=<span class="hljs-number">1</span>k-<span class="hljs-number">2</span>k,<span class="hljs-number">3</span>k-<span class="hljs-number">4</span>k,<span class="hljs-number">5</span>k-<span class="hljs-number">6</span>k<br><span class="hljs-keyword">size</span>    :  文件请求的大小，控制job结束<br>rw      :  控制读写类型:  <span class="hljs-keyword">read</span><span class="hljs-regexp">/write/</span>rw<span class="hljs-regexp">/randread/</span>randwrite/randrw<br>direct  :  <span class="hljs-number">1</span>表示绕过buffer，直接作用于设备<br>ioengine:  io引擎：libaio(异步IO)，syslet等 <br>iodepth :  异步IO情况下，IO队列的长度<br><span class="hljs-keyword">runtime</span> :  执行时间限制，控制job结束<br>filename:  输出文件或者设备名，eg：<span class="hljs-regexp">/dev/</span>sba<br></code></pre></td></tr></table></figure><p>例子：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">fio <span class="hljs-attribute">-ioengine</span>=libaio <span class="hljs-attribute">-bs</span>=4k <span class="hljs-attribute">-direct</span>=1 -thread <span class="hljs-attribute">-rw</span>=randwrite -size 1G <span class="hljs-attribute">-filename</span>=/dev/rbd0 <span class="hljs-attribute">-iodepth</span>=64 <span class="hljs-attribute">-runtime</span>=60 <span class="hljs-attribute">-name</span>=mytest<br></code></pre></td></tr></table></figure><p>测试目标：</p><ul><li>4k随机读</li><li>4k随机写</li><li>512k顺序写</li></ul><p><a href="http://ww1.sinaimg.cn/large/6e46250bly1feu3ml9yvpj20vw0i8gqt.jpg"><img src="http://ww1.sinaimg.cn/large/6e46250bly1feu3ml9yvpj20vw0i8gqt.jpg" alt="img"></a></p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS 7 安装分布式存储系统 Ceph</title>
    <link href="/2018/11/13/CentOS-7-%E5%AE%89%E8%A3%85Ceph%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F/"/>
    <url>/2018/11/13/CentOS-7-%E5%AE%89%E8%A3%85Ceph%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<p>关于Ceph的介绍本文不再赘述，可以查看<a href="http://docs.ceph.org.cn/start/intro/">官方文档</a>进行了解</p><p>Sage Weil读博士的时候开发了这套牛逼的分布式存储系统，最初是奔着高性能分布式文件系统去的，结果云计算风口一来，Ceph重心转向了分布式块存储（Block Storage）和分布式对象存储（Object Storage），现在分布式文件系统CephFS还停在beta阶段。Ceph现在是云计算、虚拟机部署的最火开源存储解决方案，据说有20%的OpenStack部署存储用的都是Ceph的Block Storage。</p><p>Ceph 提供3种存储方式：对象存储，块存储和文件系统，下图展示了Ceph存储集群的架构：</p><p><a href="http://7xl6fl.com1.z0.glb.clouddn.com/%E5%9C%A8CentOS7.1%E4%B8%8A%E5%AE%89%E8%A3%85%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9FCeph_1.png"><img src="http://7xl6fl.com1.z0.glb.clouddn.com/%E5%9C%A8CentOS7.1%E4%B8%8A%E5%AE%89%E8%A3%85%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9FCeph_1.png" alt="img"></a></p><h1 id="硬件环境准备"><a href="#硬件环境准备" class="headerlink" title="硬件环境准备"></a>硬件环境准备</h1><hr><p>由于条件限制，本文所有实验机器全是虚拟机，共准备了5台虚拟机，其中3台做监控节点（ceph-mon），2台做存储节点（ceph-osd1，ceph-osd2）。</p><p>Ceph要求必须是奇数个监控节点，而且最少3个（自己玩玩的话，1个也是可以的），ceph-adm是可选的，可以把ceph-adm放在monitor上，只不过把ceph-adm单独拿出来架构上看更清晰一些。当然也可以把mon放在 osd上，生产环境下是不推荐这样做的。</p><p><a href="http://ww1.sinaimg.cn/large/6e46250bly1fes2vdud9pj20kq0fidgn.jpg"><img src="http://ww1.sinaimg.cn/large/6e46250bly1fes2vdud9pj20kq0fidgn.jpg" alt="img"></a></p><ul><li>ADM 服务器硬件配置比较随意，只是用来操作和管理 Ceph；</li><li>MON 服务器1块硬盘用来安装操作系统；</li><li>OSD 服务器上用4块32GB的硬盘做Ceph存储，每个osd对应1块硬盘，每个osd需要1个Journal，所以4块硬盘需要4个Journal，我们用1块64GB硬盘做journal，将硬盘等分成4个区，这样每个区分别对应一个osd硬盘的journal.</li></ul><h1 id="软件环境准备"><a href="#软件环境准备" class="headerlink" title="软件环境准备"></a>软件环境准备</h1><hr><p>所有Ceph集群节点采用CentOS7.2版本（CentOS Linux release 7.2.1511），所有文件系统采用Ceph官方推荐的xfs。</p><p>安装完CentOS后我们需要在每个节点上（包括ceph-adm）做一点基础配置，比如关闭SELINUX、关闭防火墙、同步时间等。</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"># 关闭 SELINUX<br>sed -i &#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27; /etc/selinux/config<br>setenforce <span class="hljs-number">0</span><br><br># 关闭iptables<br>systemctl stop firewalld<br>systemctl disable firewalld<br><br># 安装 EPEL 软件源：<br>rpm -Uvh https://dl.fedoraproject.org/pub/epel/<span class="hljs-number">7</span>/x86_64/e/epel-release-<span class="hljs-number">7</span>-<span class="hljs-number">8</span>.noarch.rpm<br><br># 同步时间<br>yum -y ntp<br>ntpdate asia.pool.ntp.org<br><br># 修改/etc/hosts<br>cat /etc/hosts<br><span class="hljs-number">127.0.0.1</span>   localhost localhost.localdomain localhost4 localhost4.localdomain4<br>::<span class="hljs-number">1</span>         localhost localhost.localdomain localhost6 localhost6.localdomain6<br><span class="hljs-number">10.117.130.173</span> ceph-mon1 <br><span class="hljs-number">10.117.130.174</span> ceph-mon2<br><span class="hljs-number">10.117.130.175</span> ceph-mon3<br><span class="hljs-number">10.117.130.145</span> ceph-osd1<br><span class="hljs-number">10.117.130.146</span> ceph-osd2<br><br># 建立ceph用户<br>ssh user@ceph-server<br>sudo useradd -d /home/&#123;username&#125; -m &#123;username&#125;<br>sudo passwd &#123;username&#125;<br><br># 添加sudo权限<br>echo <span class="hljs-string">&quot;&#123;username&#125; ALL = (root) NOPASSWD:ALL&quot;</span> | sudo tee /etc/sudoers.d/&#123;username&#125;<br>sudo chmod <span class="hljs-number">0440</span> /etc/sudoers.d/&#123;username&#125;<br></code></pre></td></tr></table></figure><p>在每台osd服务器上对4块硬盘进行分区，创建XFS文件系统，对1块用作journal的硬盘分4个区，每个区对应一块硬盘，不需要创建文件系统，留给Ceph自己处理。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># parted -a optimal --script /dev/sdc -- mktable gpt</span><br><span class="hljs-comment"># parted -a optimal --script /dev/sdc -- mkpart primary xfs 0% 100%</span><br><span class="hljs-comment"># mkfs.xfs -f /dev/sdc1</span><br><span class="hljs-attribute">meta-data</span>=/dev/sdc1              <span class="hljs-attribute">isize</span>=256    <span class="hljs-attribute">agcount</span>=4, <span class="hljs-attribute">agsize</span>=1310592 blks<br>     =                       <span class="hljs-attribute">sectsz</span>=512   <span class="hljs-attribute">attr</span>=2, <span class="hljs-attribute">projid32bit</span>=1<br>     =                       <span class="hljs-attribute">crc</span>=0        <span class="hljs-attribute">finobt</span>=0<br>data     =                       <span class="hljs-attribute">bsize</span>=4096   <span class="hljs-attribute">blocks</span>=5242368, <span class="hljs-attribute">imaxpct</span>=25<br>     =                       <span class="hljs-attribute">sunit</span>=0      <span class="hljs-attribute">swidth</span>=0 blks<br>naming   =version 2              <span class="hljs-attribute">bsize</span>=4096   <span class="hljs-attribute">ascii-ci</span>=0 <span class="hljs-attribute">ftype</span>=0<br>log      =internal log           <span class="hljs-attribute">bsize</span>=4096   <span class="hljs-attribute">blocks</span>=2560, <span class="hljs-attribute">version</span>=2<br>     =                       <span class="hljs-attribute">sectsz</span>=512   <span class="hljs-attribute">sunit</span>=0 blks, <span class="hljs-attribute">lazy-count</span>=1<br>realtime =none                   <span class="hljs-attribute">extsz</span>=4096   <span class="hljs-attribute">blocks</span>=0, <span class="hljs-attribute">rtextents</span>=0<br></code></pre></td></tr></table></figure><p><del>在生产环境中，每台osd服务器上硬盘远不止4台，以上命令需要对多个硬盘进行处理，重复的操作太多，以后还会陆续增加服务器，写成脚本parted.sh方便操作，其中/dev/sdb|c|d|e分别是4块硬盘，/dev/sdf是用做journal的硬盘：</del></p><blockquote><p>大坑，不要执行，后面解释</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#!/bin/bash</span><br><br>set -e<br><span class="hljs-keyword">if</span> [ ! -x <span class="hljs-string">&quot;/sbin/parted&quot;</span> ]; then<br>    echo <span class="hljs-string">&quot;This script requires /sbin/parted to run!&quot;</span> &gt;&amp;<span class="hljs-number">2</span><br>    <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span><br>fi<br><br><span class="hljs-comment">#这段代码已经不需要了，ceph-deploy osd prepare的过程会自动格式化。</span><br><span class="hljs-comment">#DISKS=&quot;b c d e&quot;</span><br><span class="hljs-comment">#for i in $&#123;DISKS&#125;; do</span><br><span class="hljs-comment">#    echo &quot;Creating partitions on /dev/sd$&#123;i&#125; ...&quot;</span><br><span class="hljs-comment">#    parted -a optimal --script /dev/sd$&#123;i&#125; -- mktable gpt</span><br><span class="hljs-comment">#    parted -a optimal --script /dev/sd$&#123;i&#125; -- mkpart primary xfs 0% 100%</span><br><span class="hljs-comment">#    sleep 1</span><br><span class="hljs-comment">#    #echo &quot;Formatting /dev/sd$&#123;i&#125;1 ...&quot;</span><br><span class="hljs-comment">#    mkfs.xfs -f /dev/sd$&#123;i&#125;1 &amp;</span><br><span class="hljs-comment">#done</span><br><br>JOURNALDISK=<span class="hljs-string">&quot;f&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;JOURNALDISK&#125;</span>; <span class="hljs-keyword">do</span><br>    parted -s <span class="hljs-regexp">/dev/</span>sd<span class="hljs-variable">$&#123;i&#125;</span> mklabel gpt<br>    parted -s <span class="hljs-regexp">/dev/</span>sd<span class="hljs-variable">$&#123;i&#125;</span> mkpart primary <span class="hljs-number">0</span>% <span class="hljs-number">25</span>%<br>    parted -s <span class="hljs-regexp">/dev/</span>sd<span class="hljs-variable">$&#123;i&#125;</span> mkpart primary <span class="hljs-number">26</span>% <span class="hljs-number">50</span>%<br>    parted -s <span class="hljs-regexp">/dev/</span>sd<span class="hljs-variable">$&#123;i&#125;</span> mkpart primary <span class="hljs-number">51</span>% <span class="hljs-number">75</span>%<br>    parted -s <span class="hljs-regexp">/dev/</span>sd<span class="hljs-variable">$&#123;i&#125;</span> mkpart primary <span class="hljs-number">76</span>% <span class="hljs-number">100</span>%<br>done<br></code></pre></td></tr></table></figure><p><del>格式化sdf以后，我们可以使用lsblk查看</del></p><blockquote><p>大坑，不要执行，后面解释</p></blockquote><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@ceph-osd1 dev]<span class="hljs-comment"># lsblk</span><br>NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>fd0           2:0   <span class="hljs-number"> 1 </span>   4K <span class="hljs-number"> 0 </span>disk <br>sda           8:0   <span class="hljs-number"> 0 </span>  32G <span class="hljs-number"> 0 </span>disk <br>├─sda1        8:1   <span class="hljs-number"> 0 </span>   1G <span class="hljs-number"> 0 </span>part /boot<br>└─sda2        8:2   <span class="hljs-number"> 0 </span>  31G <span class="hljs-number"> 0 </span>part <br>  ├─cl-root 253:0   <span class="hljs-number"> 0 </span>27.8G <span class="hljs-number"> 0 </span>lvm  /<br>  └─cl-swap 253:1   <span class="hljs-number"> 0 </span> 3.2G <span class="hljs-number"> 0 </span>lvm  [SWAP]<br>sdb           8:16  <span class="hljs-number"> 0 </span>  32G <span class="hljs-number"> 0 </span>disk <br>sdc           8:32  <span class="hljs-number"> 0 </span>  32G <span class="hljs-number"> 0 </span>disk <br>sdd           8:48  <span class="hljs-number"> 0 </span>  32G <span class="hljs-number"> 0 </span>disk <br>sde           8:64  <span class="hljs-number"> 0 </span>  32G <span class="hljs-number"> 0 </span>disk <br>sdf           8:80  <span class="hljs-number"> 0 </span>  64G <span class="hljs-number"> 0 </span>disk <br>├─sdf1        8:81  <span class="hljs-number"> 0 </span>  16G <span class="hljs-number"> 0 </span>part <br>├─sdf2        8:82  <span class="hljs-number"> 0 </span>15.4G <span class="hljs-number"> 0 </span>part <br>├─sdf3        8:83  <span class="hljs-number"> 0 </span>15.4G <span class="hljs-number"> 0 </span>part <br>└─sdf4        8:84  <span class="hljs-number"> 0 </span>15.4G <span class="hljs-number"> 0 </span>part <br>sr0          11:0   <span class="hljs-number"> 1 </span> 680M <span class="hljs-number"> 0 </span>rom<br></code></pre></td></tr></table></figure><p>在ceph-mon上运行ssh-keygen生成ssh key文件，注意passphrase是空，把ssh key拷贝到每一个Ceph节点上：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@ceph</span>-mon1 ~]<span class="hljs-variable">$ </span>ssh-keygen -t rsa<br>[root<span class="hljs-variable">@ceph</span>-mon1 ~]<span class="hljs-comment"># ssh-copy-id  ceph<span class="hljs-doctag">@ceph</span>-mon1</span><br>[root<span class="hljs-variable">@ceph</span>-mon1 ~]<span class="hljs-comment"># ssh-copy-id  ceph<span class="hljs-doctag">@ceph</span>-mon2</span><br>[root<span class="hljs-variable">@ceph</span>-mon1 ~]<span class="hljs-comment"># ssh-copy-id  ceph<span class="hljs-doctag">@ceph</span>-mon3</span><br>[root<span class="hljs-variable">@ceph</span>-mon1 ~]<span class="hljs-comment"># ssh-copy-id  ceph<span class="hljs-doctag">@ceph</span>-osd1</span><br>[root<span class="hljs-variable">@ceph</span>-mon1 ~]<span class="hljs-comment"># ssh-copy-id  ceph<span class="hljs-doctag">@ceph</span>-osd2</span><br></code></pre></td></tr></table></figure><p>在ceph-mon上确保登陆到每台节点上都能无密码ssh登陆。</p><h1 id="Ceph部署"><a href="#Ceph部署" class="headerlink" title="Ceph部署"></a>Ceph部署</h1><hr><p>比起在每个Ceph节点上手动安装Ceph，用ceph-deploy工具统一安装要方便得多：</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># yum install ceph-deploy -y</span><br></code></pre></td></tr></table></figure><p>使用ceph用户创建一个ceph-cluster工作目录，以后的操作都在这个目录下面进行：</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mel">[root@ceph-mon1 ~]$ mkdir ~/ceph-<span class="hljs-keyword">cluster</span><br>[root@ceph-mon1 ~]$ cd ceph-<span class="hljs-keyword">cluster</span>/<br></code></pre></td></tr></table></figure><p>在Deploy node上创建并编辑~/.ssh/config，这是Ceph官方doc推荐的步骤，这样做的目的是可以避免每次执行ceph-deploy时都要去指定 –username {username} 参数</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[ceph@ceph-mon1 ~]$ vi .ssh/config <br>Host ceph-mon1<br>   Hostname ceph-mon1<br>   <span class="hljs-keyword">User</span> <span class="hljs-title">ceph</span><br>Host ceph-mon2<br>   Hostname ceph-mon2<br>   <span class="hljs-keyword">User</span> <span class="hljs-title">ceph</span><br>Host ceph-mon3<br>   Hostname ceph-mon3<br>   <span class="hljs-keyword">User</span> <span class="hljs-title">ceph</span><br>Host ceph-osd1<br>   Hostname ceph-osd1<br>   <span class="hljs-keyword">User</span> <span class="hljs-title">ceph</span><br>Host ceph-osd2<br>   Hostname ceph-osd2<br>   <span class="hljs-keyword">User</span> <span class="hljs-title">ceph</span><br>Host ceph-osd3<br>   Hostname ceph-osd3<br>   <span class="hljs-keyword">User</span> <span class="hljs-title">ceph</span><br></code></pre></td></tr></table></figure><p>初始化集群，告诉ceph-deploy哪些节点是监控节点，命令成功执行后会在ceph-cluster目录下生成ceph.conf,ceph.log,ceph.mon.keyring等相关文件：</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs aspectj">[ceph<span class="hljs-meta">@ceph</span>-mon1 my-cluster]$ ceph-deploy <span class="hljs-keyword">new</span> ceph-mon1 ceph-mon2 ceph-mon3<br></code></pre></td></tr></table></figure><p>在每个Ceph节点上都安装Ceph：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@ceph-mon1 ceph-cluster]# <span class="hljs-builtin-name">export</span> <span class="hljs-attribute">CEPH_DEPLOY_REPO_URL</span>=http://mirrors.ustc.edu.cn/ceph/rpm-luminous/el7<br>[root@ceph-mon1 ceph-cluster]# <span class="hljs-builtin-name">export</span> <span class="hljs-attribute">CEPH_DEPLOY_GPG_URL</span>=http://mirrors.ustc.edu.cn/ceph/keys/release.asc<br><br><span class="hljs-comment"># 我没有admin-node，ceph-deploy安装在mon1上</span><br>[root@ceph-mon1 ceph-cluster]# ceph-deploy install ceph-mon1 ceph-mon2 ceph-mon3 ceph-osd1 ceph-osd2<br></code></pre></td></tr></table></figure><p>初始化监控节点：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">[root<span class="hljs-variable">@ceph</span><span class="hljs-operator">-</span>mon1 ceph<span class="hljs-operator">-</span>cluster]# ceph<span class="hljs-operator">-</span>deploy mon <span class="hljs-keyword">create</span><span class="hljs-operator">-</span><span class="hljs-keyword">initial</span><br></code></pre></td></tr></table></figure><p>查看一下Ceph存储节点的硬盘情况：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@ceph</span>-mon1 ceph-cluster]<span class="hljs-meta"># ceph-deploy disk list ceph-osd1</span><br>[root<span class="hljs-symbol">@ceph</span>-mon1 ceph-cluster]<span class="hljs-meta"># ceph-deploy disk list ceph-osd2</span><br></code></pre></td></tr></table></figure><p><del>设置osd节点磁盘属组</del></p><blockquote><p>大坑，不要执行，后面解释</p></blockquote><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs tap"><span class="hljs-comment"># osd节点执行</span><br>for i in  b c d e f ;do chown ceph.ceph /dev/sd&quot;$i&quot;*;done<br>[root@ceph-osd1 dev]<span class="hljs-comment"># ll /dev/sd*</span><br>brw-rw----<span class="hljs-number"> 1 </span>root disk 8, <span class="hljs-number"> 0 </span>Apr<span class="hljs-number"> 19 </span>15:05 /dev/sda<br>brw-rw----<span class="hljs-number"> 1 </span>root disk 8, <span class="hljs-number"> 1 </span>Apr<span class="hljs-number"> 19 </span>15:05 /dev/sda1<br>brw-rw----<span class="hljs-number"> 1 </span>root disk 8, <span class="hljs-number"> 2 </span>Apr<span class="hljs-number"> 19 </span>15:05 /dev/sda2<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 16 </span>Apr<span class="hljs-number"> 19 </span>15:49 /dev/sdb<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 17 </span>Apr<span class="hljs-number"> 19 </span>15:49 /dev/sdb1<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 32 </span>Apr<span class="hljs-number"> 19 </span>15:49 /dev/sdc<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 33 </span>Apr<span class="hljs-number"> 19 </span>15:49 /dev/sdc1<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 48 </span>Apr<span class="hljs-number"> 19 </span>15:49 /dev/sdd<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 49 </span>Apr<span class="hljs-number"> 19 </span>15:49 /dev/sdd1<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 64 </span>Apr<span class="hljs-number"> 19 </span>15:49 /dev/sde<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 65 </span>Apr<span class="hljs-number"> 19 </span>15:49 /dev/sde1<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 80 </span>Apr<span class="hljs-number"> 19 </span>15:06 /dev/sdf<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 81 </span>Apr<span class="hljs-number"> 19 </span>16:01 /dev/sdf1<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 82 </span>Apr<span class="hljs-number"> 19 </span>16:01 /dev/sdf2<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 83 </span>Apr<span class="hljs-number"> 19 </span>16:01 /dev/sdf3<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 84 </span>Apr<span class="hljs-number"> 19 </span>16:01 /dev/sdf4<br><br>vi /etc/rc.d/rc.local <br><span class="hljs-comment"># 增加开机启动修改属性</span><br>for i in  b c d e f ;do chown ceph.ceph /dev/sd&quot;$i&quot;*;done<br></code></pre></td></tr></table></figure><p><del>初始化Ceph硬盘，然后创建osd存储节点，存储节点:单个硬盘:对应的journal分区，一一对应：</del></p><blockquote><p>大坑，不要执行，后面解释</p></blockquote><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># create = prepare + activate<br>[root@ceph-mon1 ceph-cluster]# ceph-deploy osd create ceph-osd1:sdb:<span class="hljs-regexp">/dev/</span>sdf1 ceph-osd1:sdc:<span class="hljs-regexp">/dev/</span>sdf2 ceph-osd1:sdd:<span class="hljs-regexp">/dev/</span>sdf3 ceph-osd1:sde:<span class="hljs-regexp">/dev/</span>sdf4<br>[root@ceph-mon1 ceph-cluster]# ceph-deploy osd create ceph-osd2:sdb:<span class="hljs-regexp">/dev/</span>sdf1 ceph-osd2:sdc:<span class="hljs-regexp">/dev/</span>sdf2 ceph-osd2:sdd:<span class="hljs-regexp">/dev/</span>sdf3 ceph-osd2:sde:<span class="hljs-regexp">/dev/</span>sdf4<br><br># 可以使用zap清空磁盘分区表，请谨慎操作<br>[root@ceph-mon1 ceph-cluster]# ceph-deploy disk zap ceph-osd1:sdb ceph-osd1:sdc ceph-osd1:sdd ceph-osd1:sde ceph-osd1:sdf<br>[root@ceph-mon1 ceph-cluster]# ceph-deploy disk zap ceph-osd2:sdb ceph-osd2:sdc ceph-osd2:sdd ceph-osd2:sde ceph-osd2:sdf<br></code></pre></td></tr></table></figure><p>好了，现在开始说坑的问题。</p><p>因为之前我也是按照这个文档去操作的。但是有一天我重启主机以后，发现对应的osd全部都down了。</p><p>查看日志发现全部是权限不足。查看以后发现是日志盘的权限不足，是<code>root</code>权限。</p><p>然后其他sdd什么的权限全部正确。</p><p>先给大家看个全部正确的。</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@ceph-osd3 ~]<span class="hljs-comment"># ll /dev/sd*</span><br>brw-rw----<span class="hljs-number"> 1 </span>root disk 8, <span class="hljs-number"> 0 </span>May <span class="hljs-number"> 3 </span>16:41 /dev/sda<br>brw-rw----<span class="hljs-number"> 1 </span>root disk 8, <span class="hljs-number"> 1 </span>May <span class="hljs-number"> 3 </span>16:41 /dev/sda1<br>brw-rw----<span class="hljs-number"> 1 </span>root disk 8, <span class="hljs-number"> 2 </span>May <span class="hljs-number"> 3 </span>16:41 /dev/sda2<br>brw-rw----<span class="hljs-number"> 1 </span>root disk 8,<span class="hljs-number"> 16 </span>May <span class="hljs-number"> 3 </span>16:41 /dev/sdb<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 17 </span>May <span class="hljs-number"> 3 </span>16:41 /dev/sdb1<br>brw-rw----<span class="hljs-number"> 1 </span>root disk 8,<span class="hljs-number"> 32 </span>May <span class="hljs-number"> 3 </span>16:41 /dev/sdc<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 33 </span>May <span class="hljs-number"> 3 </span>16:41 /dev/sdc1<br>brw-rw----<span class="hljs-number"> 1 </span>root disk 8,<span class="hljs-number"> 48 </span>May <span class="hljs-number"> 3 </span>16:41 /dev/sdd<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 49 </span>May <span class="hljs-number"> 3 </span>16:41 /dev/sdd1<br>brw-rw----<span class="hljs-number"> 1 </span>root disk 8,<span class="hljs-number"> 64 </span>May <span class="hljs-number"> 3 </span>16:41 /dev/sde<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 65 </span>May <span class="hljs-number"> 3 </span>16:41 /dev/sde1<br>brw-rw----<span class="hljs-number"> 1 </span>root disk 8,<span class="hljs-number"> 80 </span>May <span class="hljs-number"> 3 </span>16:41 /dev/sdf<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 81 </span>May <span class="hljs-number"> 3 </span>16:41 /dev/sdf1<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 82 </span>May <span class="hljs-number"> 3 </span>16:42 /dev/sdf2<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 83 </span>May <span class="hljs-number"> 3 </span>16:42 /dev/sdf3<br>brw-rw----<span class="hljs-number"> 1 </span>ceph ceph 8,<span class="hljs-number"> 84 </span>May <span class="hljs-number"> 3 </span>16:41 /dev/sdf4<br><br>[root@ceph-osd3 by-partuuid]<span class="hljs-comment"># lsblk </span><br>NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>fd0           2:0   <span class="hljs-number"> 1 </span>   4K <span class="hljs-number"> 0 </span>disk <br>sda           8:0   <span class="hljs-number"> 0 </span>  32G <span class="hljs-number"> 0 </span>disk <br>├─sda1        8:1   <span class="hljs-number"> 0 </span>   1G <span class="hljs-number"> 0 </span>part /boot<br>└─sda2        8:2   <span class="hljs-number"> 0 </span>  31G <span class="hljs-number"> 0 </span>part <br>  ├─cl-root 253:0   <span class="hljs-number"> 0 </span>27.8G <span class="hljs-number"> 0 </span>lvm  /<br>  └─cl-swap 253:1   <span class="hljs-number"> 0 </span> 3.2G <span class="hljs-number"> 0 </span>lvm  [SWAP]<br>sdb           8:16  <span class="hljs-number"> 0 </span>  32G <span class="hljs-number"> 0 </span>disk <br>└─sdb1        8:17  <span class="hljs-number"> 0 </span>  32G <span class="hljs-number"> 0 </span>part /var/lib/ceph/osd/ceph-8<br>sdc           8:32  <span class="hljs-number"> 0 </span>  32G <span class="hljs-number"> 0 </span>disk <br>└─sdc1        8:33  <span class="hljs-number"> 0 </span>  32G <span class="hljs-number"> 0 </span>part /var/lib/ceph/osd/ceph-9<br>sdd           8:48  <span class="hljs-number"> 0 </span>  32G <span class="hljs-number"> 0 </span>disk <br>└─sdd1        8:49  <span class="hljs-number"> 0 </span>  32G <span class="hljs-number"> 0 </span>part /var/lib/ceph/osd/ceph-10<br>sde           8:64  <span class="hljs-number"> 0 </span>  32G <span class="hljs-number"> 0 </span>disk <br>└─sde1        8:65  <span class="hljs-number"> 0 </span>  32G <span class="hljs-number"> 0 </span>part /var/lib/ceph/osd/ceph-11<br>sdf           8:80  <span class="hljs-number"> 0 </span>  64G <span class="hljs-number"> 0 </span>disk <br>├─sdf1        8:81  <span class="hljs-number"> 0 </span> 9.8G <span class="hljs-number"> 0 </span>part <br>├─sdf2        8:82  <span class="hljs-number"> 0 </span> 9.8G <span class="hljs-number"> 0 </span>part <br>├─sdf3        8:83  <span class="hljs-number"> 0 </span> 9.8G <span class="hljs-number"> 0 </span>part <br>└─sdf4        8:84  <span class="hljs-number"> 0 </span> 9.8G <span class="hljs-number"> 0 </span>part <br>sr0          11:0   <span class="hljs-number"> 1 </span>1024M <span class="hljs-number"> 0 </span>rom <br><br>[root@ceph-osd3 by-partuuid]<span class="hljs-comment"># ll /dev/disk/by-partuuid/</span><br>total 0<br>lrwxrwxrwx<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 10 </span>May <span class="hljs-number"> 3 </span>16:41 029b2b60-3975-4ad2-8089-d40d9d1aefb6 -&gt; ../../sdc1<br>lrwxrwxrwx<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 10 </span>May <span class="hljs-number"> 3 </span>16:41 054b3857-5534-4bb8-962b-d3e1c32cc5ca -&gt; ../../sdf4<br>lrwxrwxrwx<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 10 </span>May <span class="hljs-number"> 3 </span>16:41 4acaf1b7-00be-4381-a833-a5de0c8bceb5 -&gt; ../../sdf2<br>lrwxrwxrwx<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 10 </span>May <span class="hljs-number"> 3 </span>16:41 6826f098-3142-4498-8f4a-04bc862ce643 -&gt; ../../sdf3<br>lrwxrwxrwx<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 10 </span>May <span class="hljs-number"> 3 </span>16:41 7291dd22-a3e2-441a-b457-95509c212955 -&gt; ../../sdd1<br>lrwxrwxrwx<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 10 </span>May <span class="hljs-number"> 3 </span>16:41 adb33d81-8873-42e9-b73b-eed88c9aabb8 -&gt; ../../sdb1<br>lrwxrwxrwx<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 10 </span>May <span class="hljs-number"> 3 </span>16:41 baec01a9-39e2-46e9-b47e-8ecc1d5e594b -&gt; ../../sdf1<br>lrwxrwxrwx<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 10 </span>May <span class="hljs-number"> 3 </span>16:41 f81ae0ef-49c8-46d3-aee9-3a270f16f344 -&gt; ../../sde1<br></code></pre></td></tr></table></figure><p>答案来了，因为ceph已经用uuid给你绑定上了。所以你根本没有必要去格式化日志盘做逻辑分区和设置权限。</p><p>我是参考的这个<a href="http://blog.csdn.net/guzyguzyguzy/article/details/46729391">文档</a></p><p>个人认为正确的做法</p><p>修改<code>ceph.conf</code></p><p>增加<code>osd journal size = 10000</code></p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs nix">[ceph@ceph-mon1 my-cluster]$ cat ceph.conf<br>[global]<br><span class="hljs-attr">fsid</span> = f09e34ea-<span class="hljs-number">2586</span>-<span class="hljs-number">4102</span>-<span class="hljs-number">9186</span>-<span class="hljs-number">326</span>c3bc1066e<br><span class="hljs-attr">mon_initial_members</span> = ceph-mon1, ceph-mon2, ceph-mon3<br><span class="hljs-attr">mon_host</span> = <span class="hljs-number">10.117</span>.<span class="hljs-number">130.173</span>,<span class="hljs-number">10.117</span>.<span class="hljs-number">130.174</span>,<span class="hljs-number">10.117</span>.<span class="hljs-number">130.175</span><br><span class="hljs-attr">auth_cluster_required</span> = cephx<br><span class="hljs-attr">auth_service_required</span> = cephx<br><span class="hljs-attr">auth_client_required</span> = cephx<br>osd pool default <span class="hljs-attr">size</span> = <span class="hljs-number">3</span><br>osd pool default min <span class="hljs-attr">size</span> = <span class="hljs-number">1</span><br><span class="hljs-attr">public_network</span> = <span class="hljs-number">10.117</span>.<span class="hljs-number">130.0</span>/<span class="hljs-number">24</span><br><br>max open <span class="hljs-attr">files</span> = <span class="hljs-number">131072</span><br><br>[mon]<br>mon <span class="hljs-attr">data</span> = /var/lib/ceph/mon/ceph-$id<br>mon clock drift <span class="hljs-attr">allowed</span> = <span class="hljs-number">2</span><br>mon clock drift warn <span class="hljs-attr">backoff</span> = <span class="hljs-number">30</span><br><br>[osd]<br>osd <span class="hljs-attr">data</span> = /var/lib/ceph/osd/ceph-$id<br>osd journal <span class="hljs-attr">size</span> = <span class="hljs-number">10000</span><br>osd mkfs <span class="hljs-attr">type</span> = xfs<br>osd mkfs options <span class="hljs-attr">xfs</span> = -f<br><br>filestore xattr use <span class="hljs-attr">omap</span> = <span class="hljs-literal">true</span><br>filestore min sync <span class="hljs-attr">interval</span> = <span class="hljs-number">10</span><br>filestore max sync <span class="hljs-attr">interval</span> = <span class="hljs-number">15</span><br>filestore queue max <span class="hljs-attr">ops</span> = <span class="hljs-number">25000</span><br>filestore queue max <span class="hljs-attr">bytes</span> = <span class="hljs-number">10485760</span><br>filestore queue committing max <span class="hljs-attr">ops</span> = <span class="hljs-number">5000</span><br>filestore queue committing max <span class="hljs-attr">bytes</span> = <span class="hljs-number">10485760000</span><br><br>journal max write <span class="hljs-attr">bytes</span> = <span class="hljs-number">1073714824</span><br>journal max write <span class="hljs-attr">entries</span> = <span class="hljs-number">10000</span><br>journal queue max <span class="hljs-attr">ops</span> = <span class="hljs-number">50000</span><br>journal queue max <span class="hljs-attr">bytes</span> = <span class="hljs-number">10485760000</span><br><br>osd max write <span class="hljs-attr">size</span> = <span class="hljs-number">512</span><br>osd client message size <span class="hljs-attr">cap</span> = <span class="hljs-number">2147483648</span><br>osd deep scrub <span class="hljs-attr">stride</span> = <span class="hljs-number">131072</span><br>osd op <span class="hljs-attr">threads</span> = <span class="hljs-number">8</span><br>osd disk <span class="hljs-attr">threads</span> = <span class="hljs-number">4</span><br>osd <span class="hljs-built_in">map</span> cache <span class="hljs-attr">size</span> = <span class="hljs-number">1024</span><br>osd <span class="hljs-built_in">map</span> cache bl <span class="hljs-attr">size</span> = <span class="hljs-number">128</span><br>osd mount options <span class="hljs-attr">xfs</span> = <span class="hljs-string">&quot;rw,noexec,nodev,noatime,nodiratime,nobarrier&quot;</span><br>osd recovery op <span class="hljs-attr">priority</span> = <span class="hljs-number">4</span><br>osd recovery max <span class="hljs-attr">active</span> = <span class="hljs-number">10</span><br>osd max <span class="hljs-attr">backfills</span> = <span class="hljs-number">4</span><br><br>[client]<br>rbd <span class="hljs-attr">cache</span> = <span class="hljs-literal">true</span><br>rbd cache <span class="hljs-attr">size</span> = <span class="hljs-number">268435456</span><br>rbd cache max <span class="hljs-attr">dirty</span> = <span class="hljs-number">134217728</span><br>rbd cache max dirty <span class="hljs-attr">age</span> = <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p>初始化Ceph硬盘，不要添加日志盘的分区。</p><p>ceph会根据ceph.conf里的journal size自动给你格式化磁盘，然后正确的设置uuid，并使用udev绑定正确的权限</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># create = prepare + activate<br># -zap直接格式化了<br>[root@ceph-mon1 ceph-cluster]# ceph-deploy osd create --zap ceph-osd1:sdb:<span class="hljs-regexp">/dev/</span>sdf ceph-osd1:sdc:<span class="hljs-regexp">/dev/</span>sdf ceph-osd1:sdd:<span class="hljs-regexp">/dev/</span>sdf ceph-osd1:sde:<span class="hljs-regexp">/dev/</span>sdf<br>[root@ceph-mon1 ceph-cluster]# ceph-deploy osd create --zap ceph-osd2:sdb:<span class="hljs-regexp">/dev/</span>sdf ceph-osd2:sdc:<span class="hljs-regexp">/dev/</span>sdf ceph-osd2:sdd:<span class="hljs-regexp">/dev/</span>sdf ceph-osd2:sde:<span class="hljs-regexp">/dev/</span>sdf<br></code></pre></td></tr></table></figure><p>最后，我们把生成的配置文件从ceph-adm同步部署到其他几个节点，使得每个节点的ceph配置一致：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs perl">[root@ceph-mon1 ceph-cluster]<span class="hljs-comment"># ceph-deploy --overwrite-conf admin ceph-mon ceph-osd1 ceph-osd2</span><br><br><span class="hljs-comment"># 同步conf后需要重新加权限</span><br>[ceph@ceph-mon1 <span class="hljs-keyword">my</span>-cluster]$ sudo <span class="hljs-keyword">chmod</span> +r /etc/ceph/ceph.client.admin.keyring<br></code></pre></td></tr></table></figure><blockquote><p>测试</p></blockquote><p>看一下配置成功了没？</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@ceph</span>-mon ceph-cluster]<span class="hljs-meta"># ceph health</span><br></code></pre></td></tr></table></figure><p>HEALTH_WARN 6 pgs degraded; 6 pgs stuck degraded; 64 pgs stuck unclean; 6 pgs stuck undersized; 6 pgs undersized; too few PGs per OSD (16 &lt; min 30)</p><p>增加PG数目，<strong>Total PGs = (Total_number_of_OSD * 100) / max_replication_count（pgp_num应该设成和pg_num一样）</strong>，所以8*100/2=400，Ceph官方推荐取最接近2的指数倍，所以选择512（若日是太大则选择256）。如果顺利的话，就应该可以看到HEALTH_OK了：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@ceph-mon ceph-<span class="hljs-keyword">cluster</span>]# ceph osd pool <span class="hljs-keyword">set</span> rbd size <span class="hljs-number">2</span><br><span class="hljs-keyword">set</span> pool <span class="hljs-number">0</span> size <span class="hljs-keyword">to</span> <span class="hljs-number">2</span><br>[root@ceph-mon ceph-<span class="hljs-keyword">cluster</span>]# ceph osd pool <span class="hljs-keyword">set</span> rbd min_size <span class="hljs-number">2</span><br><span class="hljs-keyword">set</span> pool <span class="hljs-number">0</span> min_size <span class="hljs-keyword">to</span> <span class="hljs-number">2</span><br>[root@ceph-mon ceph-<span class="hljs-keyword">cluster</span>]# ceph osd pool <span class="hljs-keyword">set</span> rbd pg_num <span class="hljs-number">256</span><br><span class="hljs-keyword">set</span> pool <span class="hljs-number">0</span> pg_num <span class="hljs-keyword">to</span> <span class="hljs-number">256</span><br>[root@ceph-mon ceph-<span class="hljs-keyword">cluster</span>]# ceph osd pool <span class="hljs-keyword">set</span> rbd pgp_num <span class="hljs-number">256</span><br><span class="hljs-keyword">set</span> pool <span class="hljs-number">0</span> pgp_num <span class="hljs-keyword">to</span> <span class="hljs-number">256</span><br>[root@ceph-mon ceph-<span class="hljs-keyword">cluster</span>]# ceph health<br>HEALTH_OK<br></code></pre></td></tr></table></figure><p>更详细一点：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@ceph-mon ceph-cluster]<span class="hljs-comment"># ceph -s</span><br>    cluster 38a7726b-6018-41f4-83c2-911b325116df<br>     health HEALTH_OK<br>     monmap e1:<span class="hljs-number"> 1 </span>mons at &#123;ceph-mon=192.168.128.131:6789/0&#125;<br>            election epoch 2, quorum<span class="hljs-number"> 0 </span>ceph-mon<br>     osdmap e46:<span class="hljs-number"> 8 </span>osds:<span class="hljs-number"> 8 </span>up,<span class="hljs-number"> 8 </span>in<br>      pgmap v72:<span class="hljs-number"> 256 </span>pgs,<span class="hljs-number"> 1 </span>pools,<span class="hljs-number"> 0 </span>bytes data,<span class="hljs-number"> 0 </span>objects<br>           <span class="hljs-number"> 276 </span>MB used,<span class="hljs-number"> 159 </span>GB /<span class="hljs-number"> 159 </span>GB avail<br>                <span class="hljs-number"> 256 </span>active+clean<br></code></pre></td></tr></table></figure><p>如果操作没有问题的话记得把上面操作写到ceph.conf文件里，并同步部署的各节点：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stata">[root@ceph-mon ceph-<span class="hljs-keyword">cluster</span>]# echo <span class="hljs-string">&quot;osd pool default size = 2&quot;</span>  &gt;&gt; ~/ceph-<span class="hljs-keyword">cluster</span>/ceph.<span class="hljs-keyword">conf</span><br>[root@ceph-mon ceph-<span class="hljs-keyword">cluster</span>]# echo <span class="hljs-string">&quot;osd pool default min size = 2&quot;</span> &gt;&gt; ~/ceph-<span class="hljs-keyword">cluster</span>/ceph.<span class="hljs-keyword">conf</span><br>[root@ceph-mon ceph-<span class="hljs-keyword">cluster</span>]# echo <span class="hljs-string">&quot;osd pool default pg num = 256&quot;</span> &gt;&gt; ~/ceph-<span class="hljs-keyword">cluster</span>/ceph.<span class="hljs-keyword">conf</span><br>[root@ceph-mon ceph-<span class="hljs-keyword">cluster</span>]# echo <span class="hljs-string">&quot;osd pool default pgp num = 256&quot;</span> &gt;&gt; ~/ceph-<span class="hljs-keyword">cluster</span>/ceph.<span class="hljs-keyword">conf</span><br>[root@ceph-mon ceph-<span class="hljs-keyword">cluster</span>]# ceph-deploy --overwrite-<span class="hljs-keyword">conf</span> admin ceph-deploy --overwrite-<span class="hljs-keyword">conf</span> admin ceph-mon1 ceph-mon2 ceph-mon3 ceph-osd1 ceph-osd2<br></code></pre></td></tr></table></figure><blockquote><p>如果一切可以重来</p></blockquote><p>部署过程中如果出现任何奇怪的问题无法解决，可以简单的删除一切从头再来：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@ceph</span>-mon ceph-cluster]<span class="hljs-meta"># ceph-deploy purge ceph-mon1 ceph-mon2 ceph-mon3 ceph-osd1 ceph-osd2</span><br>[root<span class="hljs-symbol">@ceph</span>-mon ceph-cluster]<span class="hljs-meta"># ceph-deploy purgedata ceph-mon1 ceph-mon2 ceph-mon3 ceph-osd1 ceph-osd2</span><br>[root<span class="hljs-symbol">@ceph</span>-mon ceph-cluster]<span class="hljs-meta"># ceph-deploy forgetkeys</span><br></code></pre></td></tr></table></figure><blockquote><p>Troubelshooting</p></blockquote><p>如果出现任何网络问题，首先确认节点可以互相无密码ssh，各个节点的防火墙已关闭或加入规则</p>]]></content>
    
    
    
    <tags>
      
      <tag>ceph</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ceph删除被占用的资源</title>
    <link href="/2018/11/13/Ceph-%E5%88%A0%E9%99%A4%E8%A2%AB%E5%8D%A0%E7%94%A8%E7%9A%84%E8%B5%84%E6%BA%90/"/>
    <url>/2018/11/13/Ceph-%E5%88%A0%E9%99%A4%E8%A2%AB%E5%8D%A0%E7%94%A8%E7%9A%84%E8%B5%84%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<p>在做实验的时候，需要删除历史的images。</p><p>但是发现删除不了。一直提示资源正在被占用。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs applescript">[root@node1 mnt]<span class="hljs-comment"># rbd rm foo</span><br><span class="hljs-number">2017</span><span class="hljs-number">-03</span><span class="hljs-number">-13</span> <span class="hljs-number">14</span>:<span class="hljs-number">21</span>:<span class="hljs-number">35.958280</span> <span class="hljs-number">7</span>fce9702b7c0 <span class="hljs-number">-1</span> librbd: image has watchers - <span class="hljs-keyword">not</span> removing<br>Removing image: <span class="hljs-number">0</span>% complete...failed.<br>rbd: <span class="hljs-keyword">error</span>: image still has watchers<br>This means <span class="hljs-keyword">the</span> image <span class="hljs-keyword">is</span> still open <span class="hljs-keyword">or</span> <span class="hljs-keyword">the</span> client using <span class="hljs-keyword">it</span> crashed. Try again <span class="hljs-keyword">after</span> closing/unmapping <span class="hljs-keyword">it</span> <span class="hljs-keyword">or</span> waiting <span class="hljs-number">30</span>s <span class="hljs-keyword">for</span> <span class="hljs-keyword">the</span> crashed client <span class="hljs-keyword">to</span> <span class="hljs-keyword">timeout</span><br></code></pre></td></tr></table></figure><p>通过查看ceph info 来找到blockname</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@node1 mnt]# rbd <span class="hljs-builtin-name">info</span> foo| grep<span class="hljs-built_in"> prefix</span><br><span class="hljs-built_in"></span>        block_name_prefix: rbd_data.1031238e1f29<br></code></pre></td></tr></table></figure><p>使用listwatcher定位到哪些ip在使用</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@node1 mnt]# rados -p rbd listwatchers rbd_header.1031238e1f29<br><span class="hljs-attribute">watcher</span>=10.117.130.149:0/1221339235 client.4174 <span class="hljs-attribute">cookie</span>=18446462598732840961<br><span class="hljs-attribute">watcher</span>=10.117.130.149:0/1221339235 client.4174 <span class="hljs-attribute">cookie</span>=18446462598732840962<br></code></pre></td></tr></table></figure><p>只要定位到那个机器再使用就比较好解决了。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs elixir">ssh <span class="hljs-number">10.117</span>.<span class="hljs-number">130.149</span><br><br>[root<span class="hljs-variable">@client</span> ~]<span class="hljs-comment"># rbd showmapped</span><br>id pool image snap device    <br>0  rbd  foo   -    <span class="hljs-regexp">/dev/rbd</span>0 <br><span class="hljs-number">1</span>  rbd  foo   -    <span class="hljs-regexp">/dev/rbd</span>1 <br>[root<span class="hljs-variable">@client</span> ~]<span class="hljs-comment"># rbd unmap /dev/rbd0</span><br>[root<span class="hljs-variable">@client</span> ~]<span class="hljs-comment"># rbd unmap /dev/rbd1</span><br>[root<span class="hljs-variable">@client</span> ~]<span class="hljs-comment"># rbd showmapped</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>ceph</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Best practices for writing Dockerfiles</title>
    <link href="/2018/11/13/Best-practices-for-writing-Dockerfiles/"/>
    <url>/2018/11/13/Best-practices-for-writing-Dockerfiles/</url>
    
    <content type="html"><![CDATA[<h1 id="Best-practices-for-writing-Dockerfiles"><a href="#Best-practices-for-writing-Dockerfiles" class="headerlink" title="Best practices for writing Dockerfiles"></a>Best practices for writing Dockerfiles</h1><p>Estimated reading time: 20 minutes</p><p>Docker can build images automatically by reading the instructions from a <code>Dockerfile</code>, a text file that contains all the commands, in order, needed to build a given image. <code>Dockerfile</code>s adhere to a specific format and use a specific set of instructions. You can learn the basics on the <a href="https://docs.docker.com/engine/reference/builder/">Dockerfile Reference</a> page. If you’re new to writing <code>Dockerfile</code>s, you should start there.</p><p>This document covers the best practices and methods recommended by Docker, Inc. and the Docker community for creating easy-to-use, effective<code>Dockerfile</code>s. We strongly suggest you follow these recommendations (in fact, if you’re creating an Official Image, you <em>must</em> adhere to these practices).</p><p>You can see many of these practices and recommendations in action in the <a href="https://github.com/docker-library/buildpack-deps/blob/master/jessie/Dockerfile">buildpack-deps <code>Dockerfile</code></a>.</p><blockquote><p>Note: for more detailed explanations of any of the Dockerfile commands mentioned here, visit the <a href="https://docs.docker.com/engine/reference/builder/">Dockerfile Reference</a> page.</p></blockquote><h2 id="General-guidelines-and-recommendations"><a href="#General-guidelines-and-recommendations" class="headerlink" title="General guidelines and recommendations"></a>General guidelines and recommendations</h2><h3 id="Containers-should-be-ephemeral"><a href="#Containers-should-be-ephemeral" class="headerlink" title="Containers should be ephemeral"></a>Containers should be ephemeral</h3><p>The container produced by the image your <code>Dockerfile</code> defines should be as ephemeral as possible. By “ephemeral,” we mean that it can be stopped and destroyed and a new one built and put in place with an absolute minimum of set-up and configuration. You may want to take a look at the <a href="https://12factor.net/processes">Processes</a> section of the 12 Factor app methodology to get a feel for the motivations of running containers in such a stateless fashion.</p><h3 id="Use-a-dockerignore-file"><a href="#Use-a-dockerignore-file" class="headerlink" title="Use a .dockerignore file"></a>Use a .dockerignore file</h3><p>In most cases, it’s best to put each Dockerfile in an empty directory. Then, add to that directory only the files needed for building the Dockerfile. To increase the build’s performance, you can exclude files and directories by adding a <code>.dockerignore</code> file to that directory as well. This file supports exclusion patterns similar to <code>.gitignore</code> files. For information on creating one, see the <a href="https://docs.docker.com/engine/reference/builder/#dockerignore-file">.dockerignore file</a>.</p><h3 id="Avoid-installing-unnecessary-packages"><a href="#Avoid-installing-unnecessary-packages" class="headerlink" title="Avoid installing unnecessary packages"></a>Avoid installing unnecessary packages</h3><p>In order to reduce complexity, dependencies, file sizes, and build times, you should avoid installing extra or unnecessary packages just because they might be “nice to have.” For example, you don’t need to include a text editor in a database image.</p><h3 id="Each-container-should-have-only-one-concern"><a href="#Each-container-should-have-only-one-concern" class="headerlink" title="Each container should have only one concern"></a>Each container should have only one concern</h3><p>Decoupling applications into multiple containers makes it much easier to scale horizontally and reuse containers. For instance, a web application stack might consist of three separate containers, each with its own unique image, to manage the web application, database, and an in-memory cache in a decoupled manner.</p><p>You may have heard that there should be “one process per container”. While this mantra has good intentions, it is not necessarily true that there should be only one operating system process per container. In addition to the fact that containers can now be <a href="https://docs.docker.com/engine/reference/run/#/specifying-an-init-process">spawned with an init process</a>, some programs might spawn additional processes of their own accord. For instance, <a href="http://www.celeryproject.org/">Celery</a> can spawn multiple worker processes, or <a href="https://httpd.apache.org/">Apache</a> might create a process per request. While “one process per container” is frequently a good rule of thumb, it is not a hard and fast rule. Use your best judgment to keep containers as clean and modular as possible.</p><p>If containers depend on each other, you can use <a href="https://docs.docker.com/engine/userguide/networking/">Docker container networks</a> to ensure that these containers can communicate.</p><h3 id="Minimize-the-number-of-layers"><a href="#Minimize-the-number-of-layers" class="headerlink" title="Minimize the number of layers"></a>Minimize the number of layers</h3><p>You need to find the balance between readability (and thus long-term maintainability) of the <code>Dockerfile</code> and minimizing the number of layers it uses. Be strategic and cautious about the number of layers you use.</p><h3 id="Sort-multi-line-arguments"><a href="#Sort-multi-line-arguments" class="headerlink" title="Sort multi-line arguments"></a>Sort multi-line arguments</h3><p>Whenever possible, ease later changes by sorting multi-line arguments alphanumerically. This will help you avoid duplication of packages and make the list much easier to update. This also makes PRs a lot easier to read and review. Adding a space before a backslash (<code>\</code>) helps as well.</p><p>Here’s an example from the <a href="https://github.com/docker-library/buildpack-deps"><code>buildpack-deps</code> image</a>:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">RUN</span> apt-<span class="hljs-builtin-name">get</span> update &amp;&amp; apt-<span class="hljs-builtin-name">get</span> install -y \<br>  bzr \<br>  cvs \<br>  git \<br>  mercurial \<br>  subversion<br></code></pre></td></tr></table></figure><h3 id="Build-cache"><a href="#Build-cache" class="headerlink" title="Build cache"></a>Build cache</h3><p>During the process of building an image Docker will step through the instructions in your <code>Dockerfile</code> executing each in the order specified. As each instruction is examined Docker will look for an existing image in its cache that it can reuse, rather than creating a new (duplicate) image. If you do not want to use the cache at all you can use the <code>--no-cache=true</code> option on the <code>docker build</code> command.</p><p>However, if you do let Docker use its cache then it is very important to understand when it will, and will not, find a matching image. The basic rules that Docker will follow are outlined below:</p><ul><li>Starting with a base image that is already in the cache, the next instruction is compared against all child images derived from that base image to see if one of them was built using the exact same instruction. If not, the cache is invalidated.</li><li>In most cases simply comparing the instruction in the <code>Dockerfile</code> with one of the child images is sufficient. However, certain instructions require a little more examination and explanation.</li><li>For the <code>ADD</code> and <code>COPY</code> instructions, the contents of the file(s) in the image are examined and a checksum is calculated for each file. The last-modified and last-accessed times of the file(s) are not considered in these checksums. During the cache lookup, the checksum is compared against the checksum in the existing images. If anything has changed in the file(s), such as the contents and metadata, then the cache is invalidated.</li><li>Aside from the <code>ADD</code> and <code>COPY</code> commands, cache checking will not look at the files in the container to determine a cache match. For example, when processing a <code>RUN apt-get -y update</code> command the files updated in the container will not be examined to determine if a cache hit exists. In that case just the command string itself will be used to find a match.</li></ul><p>Once the cache is invalidated, all subsequent <code>Dockerfile</code> commands will generate new images and the cache will not be used.</p><h2 id="The-Dockerfile-instructions"><a href="#The-Dockerfile-instructions" class="headerlink" title="The Dockerfile instructions"></a>The Dockerfile instructions</h2><p>Below you’ll find recommendations for the best way to write the various instructions available for use in a <code>Dockerfile</code>.</p><h3 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h3><p><a href="https://docs.docker.com/engine/reference/builder/#from">Dockerfile reference for the FROM instruction</a></p><p>Whenever possible, use current Official Repositories as the basis for your image. We recommend the <a href="https://hub.docker.com/_/debian/">Debian image</a>since it’s very tightly controlled and kept minimal (currently under 150 mb), while still being a full distribution.</p><h3 id="LABEL"><a href="#LABEL" class="headerlink" title="LABEL"></a>LABEL</h3><p><a href="https://docs.docker.com/engine/userguide/labels-custom-metadata/">Understanding object labels</a></p><p>You can add labels to your image to help organize images by project, record licensing information, to aid in automation, or for other reasons. For each label, add a line beginning with <code>LABEL</code> and with one or more key-value pairs. The following examples show the different acceptable formats. Explanatory comments are included inline.</p><blockquote><p><strong>Note</strong>: If your string contains spaces, it must be quoted <strong>or</strong> the spaces must be escaped. If your string contains inner quote characters (<code>&quot;</code>), escape them as well.</p></blockquote><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"># <span class="hljs-keyword">Set</span> one <span class="hljs-keyword">or</span> more individual labels<br>LABEL com.example.version=&quot;0.0.1-beta&quot;<br>LABEL vendor=&quot;ACME Incorporated&quot;<br>LABEL com.example.<span class="hljs-keyword">release</span>-<span class="hljs-type">date</span>=&quot;2015-02-12&quot;<br>LABEL com.example.<span class="hljs-keyword">version</span>.<span class="hljs-keyword">is</span>-production=&quot;&quot;<br><br># <span class="hljs-keyword">Set</span> multiple labels <span class="hljs-keyword">on</span> one <span class="hljs-type">line</span><br>LABEL com.example.version=&quot;0.0.1-beta&quot; com.example.<span class="hljs-keyword">release</span>-<span class="hljs-type">date</span>=&quot;2015-02-12&quot;<br><br># <span class="hljs-keyword">Set</span> multiple labels at once, <span class="hljs-keyword">using</span> <span class="hljs-type">line</span>-continuation characters <span class="hljs-keyword">to</span> break long lines<br>LABEL vendor=ACME\ Incorporated \<br>      com.example.<span class="hljs-keyword">is</span>-beta= \<br>      com.example.<span class="hljs-keyword">is</span>-production=&quot;&quot; \<br>      com.example.version=&quot;0.0.1-beta&quot; \<br>      com.example.<span class="hljs-keyword">release</span>-<span class="hljs-type">date</span>=&quot;2015-02-12&quot;<br></code></pre></td></tr></table></figure><p>See <a href="https://docs.docker.com/engine/userguide/labels-custom-metadata/">Understanding object labels</a> for guidelines about acceptable label keys and values. For information about querying labels, refer to the items related to filtering in <a href="https://docs.docker.com/engine/userguide/labels-custom-metadata/#managing-labels-on-objects">Managing labels on objects</a>.</p><h3 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h3><p><a href="https://docs.docker.com/engine/reference/builder/#run">Dockerfile reference for the RUN instruction</a></p><p>As always, to make your <code>Dockerfile</code> more readable, understandable, and maintainable, split long or complex <code>RUN</code>statements on multiple lines separated with backslashes.</p><h4 id="apt-get"><a href="#apt-get" class="headerlink" title="apt-get"></a>apt-get</h4><p>Probably the most common use-case for <code>RUN</code> is an application of <code>apt-get</code>. The <code>RUN apt-get</code> command, because it installs packages, has several gotchas to look out for.</p><p>You should avoid <code>RUN apt-get upgrade</code> or <code>dist-upgrade</code>, as many of the “essential” packages from the base images won’t upgrade inside an unprivileged container. If a package contained in the base image is out-of-date, you should contact its maintainers. If you know there’s a particular package, <code>foo</code>, that needs to be updated, use <code>apt-get install -y foo</code> to update automatically.</p><p>Always combine <code>RUN apt-get update</code> with <code>apt-get install</code> in the same <code>RUN</code> statement, for example:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">RUN</span> apt-<span class="hljs-builtin-name">get</span> update &amp;&amp; apt-<span class="hljs-builtin-name">get</span> install -y \<br>    package-bar \<br>    package-baz \<br>    package-foo<br></code></pre></td></tr></table></figure><p>Using <code>apt-get update</code> alone in a <code>RUN</code> statement causes caching issues and subsequent <code>apt-get install</code>instructions fail. For example, say you have a Dockerfile:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">FROM</span> ubuntu:14.04<br><span class="hljs-builtin-name">RUN</span> apt-<span class="hljs-builtin-name">get</span> update<br><span class="hljs-builtin-name">RUN</span> apt-<span class="hljs-builtin-name">get</span> install -y curl<br></code></pre></td></tr></table></figure><p>After building the image, all layers are in the Docker cache. Suppose you later modify <code>apt-get install</code> by adding extra package:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">FROM</span> ubuntu:14.04<br><span class="hljs-builtin-name">RUN</span> apt-<span class="hljs-builtin-name">get</span> update<br><span class="hljs-builtin-name">RUN</span> apt-<span class="hljs-builtin-name">get</span> install -y curl nginx<br></code></pre></td></tr></table></figure><p>Docker sees the initial and modified instructions as identical and reuses the cache from previous steps. As a result the <code>apt-get update</code> is <em>NOT</em>executed because the build uses the cached version. Because the <code>apt-get update</code> is not run, your build can potentially get an outdated version of the <code>curl</code> and <code>nginx</code> packages.</p><p>Using <code>RUN apt-get update &amp;&amp; apt-get install -y</code> ensures your Dockerfile installs the latest package versions with no further coding or manual intervention. This technique is known as “cache busting”. You can also achieve cache-busting by specifying a package version. This is known as version pinning, for example:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">RUN</span> apt-<span class="hljs-builtin-name">get</span> update &amp;&amp; apt-<span class="hljs-builtin-name">get</span> install -y \<br>    package-bar \<br>    package-baz \<br>    <span class="hljs-attribute">package-foo</span>=1.3.*<br></code></pre></td></tr></table></figure><p>Version pinning forces the build to retrieve a particular version regardless of what’s in the cache. This technique can also reduce failures due to unanticipated changes in required packages.</p><p>Below is a well-formed <code>RUN</code> instruction that demonstrates all the <code>apt-get</code> recommendations.</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs livescript">RUN apt-get update &amp;&amp; apt-get install -y <span class="hljs-string">\</span><br>    aufs-tools <span class="hljs-string">\</span><br>    automake <span class="hljs-string">\</span><br>    build-essential <span class="hljs-string">\</span><br>    curl <span class="hljs-string">\</span><br>    dpkg-sig <span class="hljs-string">\</span><br>    libcap-dev <span class="hljs-string">\</span><br>    libsqlite3-dev <span class="hljs-string">\</span><br>    mercurial <span class="hljs-string">\</span><br>    reprepro <span class="hljs-string">\</span><br>    ruby1.<span class="hljs-number">9.1</span> <span class="hljs-string">\</span><br>    ruby1.<span class="hljs-number">9.1</span>-dev <span class="hljs-string">\</span><br>    s3cmd=<span class="hljs-number">1.1</span>.* <span class="hljs-string">\</span><br> &amp;&amp; rm -rf <span class="hljs-regexp">/var/lib/apt/lists/</span>*<br></code></pre></td></tr></table></figure><p>The <code>s3cmd</code> instructions specifies a version <code>1.1.0*</code>. If the image previously used an older version, specifying the new one causes a cache bust of <code>apt-get update</code> and ensure the installation of the new version. Listing packages on each line can also prevent mistakes in package duplication.</p><p>In addition, cleaning up the apt cache and removing <code>/var/lib/apt/lists</code> helps keep the image size down. Since the <code>RUN</code> statement starts with<code>apt-get update</code>, the package cache will always be refreshed prior to <code>apt-get install</code>.</p><blockquote><p><strong>Note</strong>: The official Debian and Ubuntu images <a href="https://github.com/docker/docker/blob/03e2923e42446dbb830c654d0eec323a0b4ef02a/contrib/mkimage/debootstrap#L82-L105">automatically run <code>apt-get clean</code></a>, so explicit invocation is not required.</p></blockquote><h4 id="Using-pipes"><a href="#Using-pipes" class="headerlink" title="Using pipes"></a>Using pipes</h4><p>Some <code>RUN</code> commands depend on the ability to pipe the output of one command into another, using the pipe character (<code>|</code>), as in the following example:</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-built_in">RUN</span> wget -O - https://some.site | wc -l &gt; /<span class="hljs-built_in">number</span><br></code></pre></td></tr></table></figure><p>Docker executes these commands using the <code>/bin/sh -c</code> interpreter, which only evaluates the exit code of the last operation in the pipe to determine success. In the example above this build step succeeds and produces a new image so long as the <code>wc -l</code> command succeeds, even if the <code>wget</code> command fails.</p><p>If you want the command to fail due to an error at any stage in the pipe, prepend <code>set -o pipefail &amp;&amp;</code> to ensure that an unexpected error prevents the build from inadvertently succeeding. For example:</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">RUN <span class="hljs-keyword">set</span> -o pipefail &amp;&amp; wget -O - https:<span class="hljs-string">//some.site</span> | wc -l &gt; <span class="hljs-string">/number</span><br></code></pre></td></tr></table></figure><blockquote><p><strong>Note</strong>: Not all shells support the <code>-o pipefail</code> option. In such cases (such as the <code>dash</code> shell, which is the default shell on Debian-based images), consider using the <em>exec</em> form of <code>RUN</code> to explicitly choose a shell that does support the <code>pipefail</code> option. For example:</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">RUN</span> [<span class="hljs-string">&quot;/bin/bash&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, <span class="hljs-string">&quot;set -o pipefail &amp;&amp; wget -O - https://some.site | wc -l &gt; /number&quot;</span>]<br></code></pre></td></tr></table></figure><h3 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h3><p><a href="https://docs.docker.com/engine/reference/builder/#cmd">Dockerfile reference for the CMD instruction</a></p><p>The <code>CMD</code> instruction should be used to run the software contained by your image, along with any arguments. <code>CMD</code>should almost always be used in the form of <code>CMD [“executable”, “param1”, “param2”…]</code>. Thus, if the image is for a service, such as Apache and Rails, you would run something like <code>CMD [&quot;apache2&quot;,&quot;-DFOREGROUND&quot;]</code>. Indeed, this form of the instruction is recommended for any service-based image.</p><p>In most other cases, <code>CMD</code> should be given an interactive shell, such as bash, python and perl. For example, <code>CMD [&quot;perl&quot;, &quot;-de0&quot;]</code>, <code>CMD [&quot;python&quot;]</code>, or <code>CMD [“php”, “-a”]</code>. Using this form means that when you execute something like <code>docker run -it python</code>, you’ll get dropped into a usable shell, ready to go. <code>CMD</code> should rarely be used in the manner of <code>CMD [“param”, “param”]</code> in conjunction with <a href="https://docs.docker.com/engine/reference/builder/#entrypoint"><code>ENTRYPOINT</code></a>, unless you and your expected users are already quite familiar with how <code>ENTRYPOINT</code> works.</p><h3 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a>EXPOSE</h3><p><a href="https://docs.docker.com/engine/reference/builder/#expose">Dockerfile reference for the EXPOSE instruction</a></p><p>The <code>EXPOSE</code> instruction indicates the ports on which a container will listen for connections. Consequently, you should use the common, traditional port for your application. For example, an image containing the Apache web server would use <code>EXPOSE 80</code>, while an image containing MongoDB would use <code>EXPOSE 27017</code> and so on.</p><p>For external access, your users can execute <code>docker run</code> with a flag indicating how to map the specified port to the port of their choice. For container linking, Docker provides environment variables for the path from the recipient container back to the source (ie, <code>MYSQL_PORT_3306_TCP</code>).</p><h3 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h3><p><a href="https://docs.docker.com/engine/reference/builder/#env">Dockerfile reference for the ENV instruction</a></p><p>In order to make new software easier to run, you can use <code>ENV</code> to update the <code>PATH</code> environment variable for the software your container installs. For example, <code>ENV PATH /usr/local/nginx/bin:$PATH</code> will ensure that <code>CMD [“nginx”]</code> just works.</p><p>The <code>ENV</code> instruction is also useful for providing required environment variables specific to services you wish to containerize, such as Postgres’s<code>PGDATA</code>.</p><p>Lastly, <code>ENV</code> can also be used to set commonly used version numbers so that version bumps are easier to maintain, as seen in the following example:</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">ENV PG_MAJOR <span class="hljs-number">9.3</span><br>ENV PG_VERSION <span class="hljs-number">9.3</span><span class="hljs-number">.4</span><br>RUN curl -SL http://example.com/postgres-$PG_VERSION.tar.xz | tar -xJC /usr/src/postgress &amp;&amp; …<br>ENV <span class="hljs-type">PATH</span> /usr/<span class="hljs-keyword">local</span>/postgres-$PG_MAJOR/bin:$<span class="hljs-type">PATH</span><br></code></pre></td></tr></table></figure><p>Similar to having constant variables in a program (as opposed to hard-coding values), this approach lets you change a single <code>ENV</code> instruction to auto-magically bump the version of the software in your container.</p><h3 id="ADD-or-COPY"><a href="#ADD-or-COPY" class="headerlink" title="ADD or COPY"></a>ADD or COPY</h3><p><a href="https://docs.docker.com/engine/reference/builder/#add">Dockerfile reference for the ADD instruction</a><br><a href="https://docs.docker.com/engine/reference/builder/#copy">Dockerfile reference for the COPY instruction</a></p><p>Although <code>ADD</code> and <code>COPY</code> are functionally similar, generally speaking, <code>COPY</code> is preferred. That’s because it’s more transparent than <code>ADD</code>. <code>COPY</code> only supports the basic copying of local files into the container, while <code>ADD</code> has some features (like local-only tar extraction and remote URL support) that are not immediately obvious. Consequently, the best use for <code>ADD</code> is local tar file auto-extraction into the image, as in <code>ADD rootfs.tar.xz /</code>.</p><p>If you have multiple <code>Dockerfile</code> steps that use different files from your context, <code>COPY</code> them individually, rather than all at once. This will ensure that each step’s build cache is only invalidated (forcing the step to be re-run) if the specifically required files change.</p><p>For example:</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">COPY</span> requirements.txt <span class="hljs-regexp">/tmp/</span><br>RUN pip install --requirement <span class="hljs-regexp">/tmp/</span>requirements.txt<br><span class="hljs-keyword">COPY</span> . <span class="hljs-regexp">/tmp/</span><br></code></pre></td></tr></table></figure><p>Results in fewer cache invalidations for the <code>RUN</code> step, than if you put the <code>COPY . /tmp/</code> before it.</p><p>Because image size matters, using <code>ADD</code> to fetch packages from remote URLs is strongly discouraged; you should use <code>curl</code> or <code>wget</code> instead. That way you can delete the files you no longer need after they’ve been extracted and you won’t have to add another layer in your image. For example, you should avoid doing things like:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">ADD http:<span class="hljs-regexp">//</span>example.com<span class="hljs-regexp">/big.tar.xz /u</span>sr<span class="hljs-regexp">/src/</span>things/<br>RUN tar -xJf <span class="hljs-regexp">/usr/</span>src<span class="hljs-regexp">/things/</span>big.tar.xz -C <span class="hljs-regexp">/usr/</span>src/things<br>RUN make -C <span class="hljs-regexp">/usr/</span>src/things all<br></code></pre></td></tr></table></figure><p>And instead, do something like:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">RUN mkdir -p <span class="hljs-regexp">/usr/</span>src/things \<br>    &amp;&amp; curl -SL http:<span class="hljs-regexp">//</span>example.com/big.tar.xz \<br>    | tar -xJC <span class="hljs-regexp">/usr/</span>src/things \<br>    &amp;&amp; make -C <span class="hljs-regexp">/usr/</span>src/things all<br></code></pre></td></tr></table></figure><p>For other items (files, directories) that do not require <code>ADD</code>’s tar auto-extraction capability, you should always use <code>COPY</code>.</p><h3 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a>ENTRYPOINT</h3><p><a href="https://docs.docker.com/engine/reference/builder/#entrypoint">Dockerfile reference for the ENTRYPOINT instruction</a></p><p>The best use for <code>ENTRYPOINT</code> is to set the image’s main command, allowing that image to be run as though it was that command (and then use <code>CMD</code>as the default flags).</p><p>Let’s start with an example of an image for the command line tool <code>s3cmd</code>:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">ENTRYPOINT <span class="hljs-selector-attr">[<span class="hljs-string">&quot;s3cmd&quot;</span>]</span><br>CMD <span class="hljs-selector-attr">[<span class="hljs-string">&quot;--help&quot;</span>]</span><br></code></pre></td></tr></table></figure><p>Now the image can be run like this to show the command’s help:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ docker <span class="hljs-builtin-name">run</span> s3cmd<br></code></pre></td></tr></table></figure><p>Or using the right parameters to execute a command:</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">$ docker <span class="hljs-keyword">run</span> s3cmd <span class="hljs-keyword">ls</span> s3:<span class="hljs-comment">//mybucket</span><br></code></pre></td></tr></table></figure><p>This is useful because the image name can double as a reference to the binary as shown in the command above.</p><p>The <code>ENTRYPOINT</code> instruction can also be used in combination with a helper script, allowing it to function in a similar way to the command above, even when starting the tool may require more than one step.</p><p>For example, the <a href="https://hub.docker.com/_/postgres/">Postgres Official Image</a> uses the following script as its <code>ENTRYPOINT</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">set</span> -e<br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> = <span class="hljs-string">&#x27;postgres&#x27;</span> ]; <span class="hljs-keyword">then</span><br>    chown -R postgres <span class="hljs-string">&quot;<span class="hljs-variable">$PGDATA</span>&quot;</span><br><br>    <span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-subst">$(ls -A <span class="hljs-string">&quot;<span class="hljs-variable">$PGDATA</span>&quot;</span>)</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>        gosu postgres initdb<br>    <span class="hljs-keyword">fi</span><br><br>    <span class="hljs-built_in">exec</span> gosu postgres <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">exec</span> <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span><br></code></pre></td></tr></table></figure><blockquote><p><strong>Note</strong>: This script uses <a href="http://wiki.bash-hackers.org/commands/builtin/exec">the <code>exec</code> Bash command</a> so that the final running application becomes the container’s PID 1. This allows the application to receive any Unix signals sent to the container. See the <a href="https://docs.docker.com/engine/reference/builder/#entrypoint"><code>ENTRYPOINT</code></a> help for more details.</p></blockquote><p>The helper script is copied into the container and run via <code>ENTRYPOINT</code> on container start:</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">COPY</span> .<span class="hljs-regexp">/docker-entrypoint.sh /</span><br>ENTRYPOINT [<span class="hljs-string">&quot;/docker-entrypoint.sh&quot;</span>]<br></code></pre></td></tr></table></figure><p>This script allows the user to interact with Postgres in several ways.</p><p>It can simply start Postgres:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ docker <span class="hljs-builtin-name">run</span> postgres<br></code></pre></td></tr></table></figure><p>Or, it can be used to run Postgres and pass parameters to the server:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">$ docker <span class="hljs-built_in">run</span> postgres postgres <span class="hljs-comment">--help</span><br></code></pre></td></tr></table></figure><p>Lastly, it could also be used to start a totally different tool, such as Bash:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">$ docker <span class="hljs-built_in">run</span> <span class="hljs-comment">--rm -it postgres bash</span><br></code></pre></td></tr></table></figure><h3 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a>VOLUME</h3><p><a href="https://docs.docker.com/engine/reference/builder/#volume">Dockerfile reference for the VOLUME instruction</a></p><p>The <code>VOLUME</code> instruction should be used to expose any database storage area, configuration storage, or files/folders created by your docker container. You are strongly encouraged to use <code>VOLUME</code> for any mutable and/or user-serviceable parts of your image.</p><h3 id="USER"><a href="#USER" class="headerlink" title="USER"></a>USER</h3><p><a href="https://docs.docker.com/engine/reference/builder/#user">Dockerfile reference for the USER instruction</a></p><p>If a service can run without privileges, use <code>USER</code> to change to a non-root user. Start by creating the user and group in the <code>Dockerfile</code> with something like <code>RUN groupadd -r postgres &amp;&amp; useradd -r -g postgres postgres</code>.</p><blockquote><p><strong>Note:</strong> Users and groups in an image get a non-deterministic UID/GID in that the “next” UID/GID gets assigned regardless of image rebuilds. So, if it’s critical, you should assign an explicit UID/GID.</p></blockquote><p>You should avoid installing or using <code>sudo</code> since it has unpredictable TTY and signal-forwarding behavior that can cause more problems than it solves. If you absolutely need functionality similar to <code>sudo</code> (e.g., initializing the daemon as root but running it as non-root), you may be able to use <a href="https://github.com/tianon/gosu">“gosu”</a>.</p><p>Lastly, to reduce layers and complexity, avoid switching <code>USER</code> back and forth frequently.</p><h3 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a>WORKDIR</h3><p><a href="https://docs.docker.com/engine/reference/builder/#workdir">Dockerfile reference for the WORKDIR instruction</a></p><p>For clarity and reliability, you should always use absolute paths for your <code>WORKDIR</code>. Also, you should use <code>WORKDIR</code>instead of proliferating instructions like <code>RUN cd … &amp;&amp; do-something</code>, which are hard to read, troubleshoot, and maintain.</p><h3 id="ONBUILD"><a href="#ONBUILD" class="headerlink" title="ONBUILD"></a>ONBUILD</h3><p><a href="https://docs.docker.com/engine/reference/builder/#onbuild">Dockerfile reference for the ONBUILD instruction</a></p><p>An <code>ONBUILD</code> command executes after the current <code>Dockerfile</code> build completes. <code>ONBUILD</code> executes in any child image derived <code>FROM</code> the current image. Think of the <code>ONBUILD</code> command as an instruction the parent <code>Dockerfile</code>gives to the child <code>Dockerfile</code>.</p><p>A Docker build executes <code>ONBUILD</code> commands before any command in a child <code>Dockerfile</code>.</p><p><code>ONBUILD</code> is useful for images that are going to be built <code>FROM</code> a given image. For example, you would use <code>ONBUILD</code>for a language stack image that builds arbitrary user software written in that language within the <code>Dockerfile</code>, as you can see in <a href="https://github.com/docker-library/ruby/blob/master/2.1/onbuild/Dockerfile">Ruby’s <code>ONBUILD</code> variants</a>.</p><p>Images built from <code>ONBUILD</code> should get a separate tag, for example: <code>ruby:1.9-onbuild</code> or <code>ruby:2.0-onbuild</code>.</p><p>Be careful when putting <code>ADD</code> or <code>COPY</code> in <code>ONBUILD</code>. The “onbuild” image will fail catastrophically if the new build’s context is missing the resource being added. Adding a separate tag, as recommended above, will help mitigate this by allowing the <code>Dockerfile</code> author to make a choice.</p><h2 id="Examples-for-Official-Repositories"><a href="#Examples-for-Official-Repositories" class="headerlink" title="Examples for Official Repositories"></a>Examples for Official Repositories</h2><p>These Official Repositories have exemplary <code>Dockerfile</code>s:</p><ul><li><a href="https://hub.docker.com/_/golang/">Go</a></li><li><a href="https://hub.docker.com/_/perl/">Perl</a></li><li><a href="https://hub.docker.com/_/hylang/">Hy</a></li><li><a href="https://hub.docker.com/_/rails">Rails</a></li></ul><h2 id="Additional-resources"><a href="#Additional-resources" class="headerlink" title="Additional resources:"></a>Additional resources:</h2><ul><li><a href="https://docs.docker.com/engine/reference/builder/">Dockerfile Reference</a></li><li><a href="https://docs.docker.com/engine/userguide/eng-image/baseimages/">More about Base Images</a></li><li><a href="https://docs.docker.com/docker-hub/builds/">More about Automated Builds</a></li><li><a href="https://docs.docker.com/docker-hub/official_repos/">Guidelines for Creating Official Repositories</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes使用Ceph rbd持久化数据</title>
    <link href="/2018/11/13/Kubernetes%E4%BD%BF%E7%94%A8Ceph-rbd%E6%8C%81%E4%B9%85%E5%8C%96%E6%95%B0%E6%8D%AE/"/>
    <url>/2018/11/13/Kubernetes%E4%BD%BF%E7%94%A8Ceph-rbd%E6%8C%81%E4%B9%85%E5%8C%96%E6%95%B0%E6%8D%AE/</url>
    
    <content type="html"><![CDATA[<p>在k8s里pod可以在任意节点上漂移，这样会引出一个问题。如果是需要持久化的数据怎么办？pod漂移了，但是他还是要挂载原来volume。</p><p>kubernetes对应的几类持久卷</p><ul><li>volume</li><li><a href="https://kubernetes.io/docs/user-guide/persistent-volumes/#persistent-volumes">Persistent Volumes</a> 、<a href="https://kubernetes.io/docs/user-guide/persistent-volumes/#persistentvolumeclaims">PersistentVolumeClaims</a></li><li><a href="https://kubernetes.io/docs/user-guide/persistent-volumes/#storageclasses">StorageClasses</a></li></ul><h3 id="使用volume作为持久卷"><a href="#使用volume作为持久卷" class="headerlink" title="使用volume作为持久卷"></a>使用volume作为持久卷</h3><p>参考文档<a href="https://github.com/kubernetes/kubernetes/tree/master/examples/volumes/rbd">https://github.com/kubernetes/kubernetes/tree/master/examples/volumes/rbd</a></p><p>kubernetes node节点需要安装Ceph</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">yum</span> -y install ceph-<span class="hljs-meta">common</span><br></code></pre></td></tr></table></figure><p>复制ceph配置文件，以及key文件</p><p>这个可以在admin.ceph.local节点上使用ceph-deploy来配置</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ceph</span>-deploy admin root@node<span class="hljs-number">1</span>.k<span class="hljs-number">8</span>s.local<br><span class="hljs-attribute">ceph</span>-deploy admin root@node<span class="hljs-number">2</span>.k<span class="hljs-number">8</span>s.local<br><br><span class="hljs-comment"># 因为我有两个数据节点，所以我就都复制了.</span><br></code></pre></td></tr></table></figure><p>建立ceph secret</p><p>如果要使用ceph就要有账号等相关信息，在k8s里这些信息都是存放到secret里</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-comment"># 密码转换成base64</span><br>[root@node1 ceph]<span class="hljs-comment"># grep key /etc/ceph/ceph.client.admin.keyring |awk &#x27;&#123;printf &quot;%s&quot;, $NF&#125;&#x27;|base64         </span><br><span class="hljs-attr">QVFCc044SllNZDhDS0JBQVJJdlYvamtNWGFZMHowOHVyQ2JPeFE9PQ=</span>=<br><br><span class="hljs-comment"># 替换模板文件</span><br>[root@<span class="hljs-keyword">master</span> <span class="hljs-title">ceph</span>]<span class="hljs-comment"># cat ceph-secret.yaml </span><br>apiVersion: v1<br>kind: Secret<br>metadata:<br>  name: ceph-secret<br><span class="hljs-keyword">type</span>: <span class="hljs-string">&quot;kubernetes.io/rbd&quot;</span>  <br>data:<br>  key: <span class="hljs-attr">QVFCc044SllNZDhDS0JBQVJJdlYvamtNWGFZMHowOHVyQ2JPeFE9PQ=</span>=<br><br><span class="hljs-comment"># 建立secret</span><br>[root@<span class="hljs-keyword">master</span> <span class="hljs-title">ceph</span>]<span class="hljs-comment"># kubectl create -f ceph-secret.yaml </span><br>secret <span class="hljs-string">&quot;ceph-secret&quot;</span> created<br></code></pre></td></tr></table></figure><p>建立ceph rbd images</p><p>默认会建立在rbd pool下面。建立好了以后，在那个节点上都可以看到</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@node1</span> <span class="hljs-string">ceph</span>]<span class="hljs-comment"># hostname</span><br><span class="hljs-string">node1.k8s.local</span><br><br>[<span class="hljs-string">root@node1</span> <span class="hljs-string">ceph</span>]<span class="hljs-comment"># rbd create foo --size 4096</span><br>[<span class="hljs-string">root@node1</span> <span class="hljs-string">ceph</span>]<span class="hljs-comment"># rbd info rbd/foo</span><br><span class="hljs-string">rbd</span> <span class="hljs-string">image</span> <span class="hljs-attr">&#x27;foo&#x27;:</span><br>        <span class="hljs-string">size</span> <span class="hljs-number">4096 </span><span class="hljs-string">MB</span> <span class="hljs-string">in</span> <span class="hljs-number">1024 </span><span class="hljs-string">objects</span><br>        <span class="hljs-string">order</span> <span class="hljs-number">22</span> <span class="hljs-string">(4096</span> <span class="hljs-string">kB</span> <span class="hljs-string">objects)</span><br>        <span class="hljs-attr">block_name_prefix:</span> <span class="hljs-string">rb.0.10a5.238e1f29</span><br>        <span class="hljs-attr">format:</span> <span class="hljs-number">1</span><br> <br> <br>[<span class="hljs-string">root@node2</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># hostname</span><br><span class="hljs-string">node2.k8s.local</span><br>[<span class="hljs-string">root@node2</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># rbd info rbd/foo</span><br><span class="hljs-string">rbd</span> <span class="hljs-string">image</span> <span class="hljs-attr">&#x27;foo&#x27;:</span><br>        <span class="hljs-string">size</span> <span class="hljs-number">4096 </span><span class="hljs-string">MB</span> <span class="hljs-string">in</span> <span class="hljs-number">1024 </span><span class="hljs-string">objects</span><br>        <span class="hljs-string">order</span> <span class="hljs-number">22</span> <span class="hljs-string">(4096</span> <span class="hljs-string">kB</span> <span class="hljs-string">objects)</span><br>        <span class="hljs-attr">block_name_prefix:</span> <span class="hljs-string">rb.0.10a5.238e1f29</span><br>        <span class="hljs-attr">format:</span> <span class="hljs-number">1</span><br><span class="hljs-comment"># 在那个节点上都可以看的到</span><br></code></pre></td></tr></table></figure><p>建立po使用volume</p><p>修改模板，我只用了一个mon，所以就写了一个</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@<span class="hljs-keyword">master</span> <span class="hljs-title">ceph</span>]<span class="hljs-comment"># cat rbd.json </span><br>&#123;<br>    <span class="hljs-string">&quot;apiVersion&quot;</span>: <span class="hljs-string">&quot;v1&quot;</span>,<br>    <span class="hljs-string">&quot;kind&quot;</span>: <span class="hljs-string">&quot;Pod&quot;</span>,<br>    <span class="hljs-string">&quot;metadata&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;rbd&quot;</span><br>    &#125;,<br>    <span class="hljs-string">&quot;spec&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;containers&quot;</span>: [<br>            &#123;<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;rbd-rw&quot;</span>,<br>                <span class="hljs-string">&quot;image&quot;</span>: <span class="hljs-string">&quot;kubernetes/pause&quot;</span>,<br>                <span class="hljs-string">&quot;volumeMounts&quot;</span>: [<br>                    &#123;<br>                        <span class="hljs-string">&quot;mountPath&quot;</span>: <span class="hljs-string">&quot;/mnt/rbd&quot;</span>,<br>                        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;rbdpd&quot;</span><br>                    &#125;<br>                ]<br>            &#125;<br>        ],<br>        <span class="hljs-string">&quot;volumes&quot;</span>: [<br>            &#123;<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;rbdpd&quot;</span>,<br>                <span class="hljs-string">&quot;rbd&quot;</span>: &#123;<br>                    <span class="hljs-string">&quot;monitors&quot;</span>: [<br>                                <span class="hljs-string">&quot;10.117.130.146:6789&quot;</span><br>                                 ],<br>                    <span class="hljs-string">&quot;pool&quot;</span>: <span class="hljs-string">&quot;rbd&quot;</span>,<br>                    <span class="hljs-string">&quot;image&quot;</span>: <span class="hljs-string">&quot;foo&quot;</span>,<br>                    <span class="hljs-string">&quot;user&quot;</span>: <span class="hljs-string">&quot;admin&quot;</span>,<br>                    <span class="hljs-string">&quot;keyring&quot;</span>: <span class="hljs-string">&quot;/etc/ceph/ceph.client.admin.keyring&quot;</span>,<br>                    <span class="hljs-string">&quot;fsType&quot;</span>: <span class="hljs-string">&quot;ext4&quot;</span>,<br>                    <span class="hljs-string">&quot;readOnly&quot;</span>: <span class="hljs-literal">true</span><br>                &#125;<br>            &#125;<br>        ]<br>    &#125;<br>&#125;<br>[root@<span class="hljs-keyword">master</span> <span class="hljs-title">ceph</span>]<span class="hljs-comment"># hostname</span><br><span class="hljs-literal">master</span>.k8s.local<br><br>[root@<span class="hljs-keyword">master</span> <span class="hljs-title">ceph</span>]<span class="hljs-comment"># kubectl create -f rbd.json </span><br>pod <span class="hljs-string">&quot;rbd&quot;</span> created<br>[root@<span class="hljs-keyword">master</span> <span class="hljs-title">ceph</span>]<span class="hljs-comment"># kubectl get po </span><br>NAME      READY     STATUS    RESTARTS   AGE<br>rbd       <span class="hljs-number">1</span>/<span class="hljs-number">1</span>       Running   <span class="hljs-number">0</span>          <span class="hljs-number">15s</span><br>[root@node1 ceph]<span class="hljs-comment"># hostname</span><br>node1.k8s.local<br><br>[root@node1 ceph]<span class="hljs-comment"># mount |grep kub</span><br>/dev/rbd0 on /var/lib/kubelet/pods/<span class="hljs-number">0</span>d1910f3-<span class="hljs-number">07</span>ba-<span class="hljs-number">11</span>e7-<span class="hljs-number">81</span>ce-<span class="hljs-number">000</span>c29e48abf/volumes/kubernetes.io~rbd/rbdpd <span class="hljs-keyword">type</span> ext4 (ro,relatime,seclabel,<span class="hljs-attr">stripe=</span><span class="hljs-number">1024</span>,<span class="hljs-attr">data=</span>ordered)<br></code></pre></td></tr></table></figure><h3 id="使用-Persistent-Volume、Persistent-Volume-Claim作为持久卷"><a href="#使用-Persistent-Volume、Persistent-Volume-Claim作为持久卷" class="headerlink" title="使用 Persistent Volume、Persistent Volume Claim作为持久卷"></a>使用 Persistent Volume、Persistent Volume Claim作为持久卷</h3><p>参考文档 <a href="http://tonybai.com/2016/11/07/integrate-kubernetes-with-ceph-rbd/?utm_source=tuicool&amp;utm_medium=referral">http://tonybai.com/2016/11/07/integrate-kubernetes-with-ceph-rbd/?utm_source=tuicool&amp;utm_medium=referral</a></p><p>k8s volume还不能完全满足实际生产过程对持久化存储的需求，因为k8s volume的lifetime和pod的生命周期相同，一旦pod被delete，那么volume中的数据就不复存在了。于是k8s又推出了Persistent Volume(PV)和Persistent Volume Claim(PVC)组合，故名思意：即便挂载其的pod被delete了，PV依旧存在，PV上的数据依旧存在。</p><p>创建disk rbd</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mel">[root@node1 ceph]# rbd create ceph-<span class="hljs-keyword">image</span> --<span class="hljs-keyword">size</span> <span class="hljs-number">1024</span><br>[root@node1 ceph]# rbd info ceph-<span class="hljs-keyword">image</span><br>rbd <span class="hljs-keyword">image</span> <span class="hljs-string">&#x27;ceph-image&#x27;</span>:<br>        <span class="hljs-keyword">size</span> <span class="hljs-number">1024</span> MB <span class="hljs-keyword">in</span> <span class="hljs-number">256</span> objects<br>        order <span class="hljs-number">22</span> (<span class="hljs-number">4096</span> kB objects)<br>        block_name_prefix: rb<span class="hljs-number">.0</span><span class="hljs-number">.10</span>ad<span class="hljs-number">.2</span>ae8944a<br>        <span class="hljs-keyword">format</span>: <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>创建pv,使用之前的ceph-secret</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs dts">[root@master ceph]<span class="hljs-meta"># cat ceph-pv.yaml </span><br><span class="hljs-symbol">apiVersion:</span> v1<br><span class="hljs-symbol">kind:</span> PersistentVolume<br><span class="hljs-symbol">metadata:</span><br><span class="hljs-symbol">  name:</span> ceph-pv<br><span class="hljs-symbol">spec:</span><br><span class="hljs-symbol">  capacity:</span><br><span class="hljs-symbol">    storage:</span> <span class="hljs-number">1</span>Gi<br><span class="hljs-symbol">  accessModes:</span><br>    - ReadWriteOnce<br><span class="hljs-symbol">  rbd:</span><br><span class="hljs-symbol">    monitors:</span><br>      - <span class="hljs-number">10.117</span><span class="hljs-number">.130</span><span class="hljs-number">.146</span>:<span class="hljs-number">6789</span><br><span class="hljs-symbol">    pool:</span> rbd<br><span class="hljs-symbol">    image:</span> ceph-image<br><span class="hljs-symbol">    user:</span> admin<br><span class="hljs-symbol">    secretRef:</span><br><span class="hljs-symbol">      name:</span> ceph-secret<br><span class="hljs-symbol">    fsType:</span> ext4<br><span class="hljs-symbol">    readOnly:</span> false<br><span class="hljs-symbol">  persistentVolumeReclaimPolicy:</span> Recycle<br>  <br>[root@master ceph]<span class="hljs-meta"># kubectl create -f ceph-pv.yaml </span><br>persistentvolume <span class="hljs-string">&quot;ceph-pv&quot;</span> created<br><br>[root@master ceph]<span class="hljs-meta"># kubectl get pv</span><br>NAME      CAPACITY   ACCESSMODES   RECLAIMPOLICY   STATUS      CLAIM     REASON    AGE<br>ceph-pv   <span class="hljs-number">1</span>Gi        RWO           Recycle         Available                       <span class="hljs-number">21</span>s<br></code></pre></td></tr></table></figure><p>创建pvc</p><p>pvc是Pod对Pv的请求，将请求做成一种资源，便于管理以及pod复用</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@<span class="hljs-keyword">master</span> <span class="hljs-title">ceph</span>]<span class="hljs-comment"># cat ceph-pvc.yaml </span><br>kind: PersistentVolumeClaim<br>apiVersion: v1<br>metadata:<br>  name: ceph-claim<br><span class="hljs-keyword">spec</span>:<br>  accessModes:<br>    - ReadWriteOnce<br>  resources:<br>    requests:<br>      storage: <span class="hljs-number">1</span>Gi<br>      <br>[root@<span class="hljs-keyword">master</span> <span class="hljs-title">ceph</span>]<span class="hljs-comment"># kubectl create -f ceph-pvc.yaml </span><br>persistentvolumeclaim <span class="hljs-string">&quot;ceph-claim&quot;</span> created<br><br>[root@<span class="hljs-keyword">master</span> <span class="hljs-title">ceph</span>]<span class="hljs-comment"># kubectl get pvc </span><br>NAME         STATUS    VOLUME    CAPACITY   ACCESSMODES   AGE<br>ceph-claim   Bound     ceph-pv   <span class="hljs-number">1</span>Gi        RWO           <span class="hljs-number">19s</span><br></code></pre></td></tr></table></figure><p>创建deployment使用pvc</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs dts">[root@master ceph]<span class="hljs-meta"># cat ceph-deployment.yaml </span><br><span class="hljs-symbol">apiVersion:</span> extensions/v1beta1<br><span class="hljs-symbol">kind:</span> Deployment<br><span class="hljs-symbol">metadata:</span><br><span class="hljs-symbol">  name:</span> ceph-deployment<br><span class="hljs-symbol">spec:</span><br><span class="hljs-symbol">  replicas:</span> <span class="hljs-number">1</span><br><span class="hljs-symbol">  template:</span><br><span class="hljs-symbol">    metadata:</span><br><span class="hljs-symbol">      labels:</span><br><span class="hljs-symbol">        app:</span> ceph-busybox<br><span class="hljs-symbol">    spec:</span><br><span class="hljs-symbol">      containers:</span><br>      - name: busybox<br><span class="hljs-symbol">        image:</span> busybox<br><span class="hljs-symbol">        command:</span> [<span class="hljs-string">&quot;sleep&quot;</span>, <span class="hljs-string">&quot;600000&quot;</span>]<br><span class="hljs-symbol">        volumeMounts:</span><br>        - name: ceph-vol1<br><span class="hljs-symbol">          mountPath:</span> <span class="hljs-meta-keyword">/usr/</span>share/busybox<br><span class="hljs-symbol">          readOnly:</span> false<br><span class="hljs-symbol">      volumes:</span><br>      - name: ceph-vol1<br><span class="hljs-symbol">        persistentVolumeClaim:</span><br><span class="hljs-symbol">          claimName:</span> ceph-claim<br>          <br>[root@master ceph]<span class="hljs-meta"># kubectl create -f ceph-deployment.yaml</span><br>deployment <span class="hljs-string">&quot;ceph-deployment&quot;</span> created<br><br>[root@master ceph]<span class="hljs-meta"># kubectl get deploy </span><br>NAME              DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE<br>ceph-deployment   <span class="hljs-number">1</span>         <span class="hljs-number">1</span>         <span class="hljs-number">1</span>            <span class="hljs-number">1</span>           <span class="hljs-number">12</span>s<br><br>[root@master ceph]<span class="hljs-meta"># kubectl get po |grep ceph-deployment</span><br>ceph-deployment<span class="hljs-number">-2188074045</span>-s3hg1   <span class="hljs-number">1</span>/<span class="hljs-number">1</span>       Running   <span class="hljs-number">0</span>          <span class="hljs-number">30</span>s<br></code></pre></td></tr></table></figure><p>持久化数据测试</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@<span class="hljs-keyword">master</span> <span class="hljs-title">ceph</span>]<span class="hljs-comment"># kubectl exec -it ceph-deployment-2188074045-s3hg1 sh</span><br><br>/usr/share/busybox <span class="hljs-comment"># echo &quot;test&quot; &gt; /usr/share/busybox/test.txt</span><br><br><span class="hljs-comment"># 测试数据已经写入</span><br>/usr/share/busybox <span class="hljs-comment"># cat  /usr/share/busybox/test.txt</span><br>test<br><br><span class="hljs-comment"># 删除po，因为是deployment，所以k8s会自动建立一个po，以保持副本为1</span><br>[root@<span class="hljs-keyword">master</span> <span class="hljs-title">ceph</span>]<span class="hljs-comment"># kubectl delete po ceph-deployment-2188074045-s3hg1</span><br>pod <span class="hljs-string">&quot;ceph-deployment-2188074045-s3hg1&quot;</span> deleted<br><br><span class="hljs-comment"># 新的po已经建立好了 </span><br>[root@<span class="hljs-keyword">master</span> <span class="hljs-title">ceph</span>]<span class="hljs-comment"># kubectl get po</span><br>NAME                               READY     STATUS    RESTARTS   AGE<br>ceph-deployment-<span class="hljs-number">2188074045</span>-qn9rb   <span class="hljs-number">1</span>/<span class="hljs-number">1</span>       Running   <span class="hljs-number">0</span>          <span class="hljs-number">46s</span><br><br><span class="hljs-comment"># 验证po可以漂移，但是挂载的卷组不会漂移</span><br>[root@<span class="hljs-keyword">master</span> <span class="hljs-title">ceph</span>]<span class="hljs-comment">#  kubectl exec -it ceph-deployment-2188074045-qn9rb sh/</span><br><span class="hljs-comment"># cat /usr/share/busybox/test.txt </span><br>test<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>ceph</tag>
      
      <tag>kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ceph RBD安装配置</title>
    <link href="/2018/11/13/Ceph-RBD%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <url>/2018/11/13/Ceph-RBD%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="Ceph-RBD-安装配置"><a href="#Ceph-RBD-安装配置" class="headerlink" title="Ceph RBD 安装配置"></a>Ceph RBD 安装配置</h2><p>安装ceph主要想测试<a href="https://kubernetes.io/">Kubernetes</a>的<code>Persistent Volume</code>功能，以为现在无状态的容器已经可以做的很好了。现在kubernetes新功能也就是<code>有状态服务</code>，例如mysql等。pod可以在不同的节点调度迁移，所以需要可以挂载到同一个持久化volume。</p><p><a href="http://docs.ceph.com/docs/master/">官方文档</a>,个人建议文档类都应该先阅读官方文档，大致了解其含义。而不是看某某的博客之类的。</p><h3 id="安装环境规划"><a href="#安装环境规划" class="headerlink" title="安装环境规划"></a>安装环境规划</h3><p>使用vsphere建立虚拟机，设置好dns解析。</p><p><a href="http://docs.ceph.com/docs/master/_images/ditaa-cffd08dd3e192a5f1d724ad7930cb04200b9b425.png"><img src="http://docs.ceph.com/docs/master/_images/ditaa-cffd08dd3e192a5f1d724ad7930cb04200b9b425.png" alt="img"></a></p><table><thead><tr><th>hostname</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td>admin.ceph.local</td><td>ceph-deploy</td><td>centos 7 1611</td></tr><tr><td>node1.ceph.local</td><td>mon.node1</td><td>centos 7 1611</td></tr><tr><td>node2.ceph.local</td><td>osd.0</td><td>centos 7 1611</td></tr><tr><td>node3.ceph.local</td><td>osd.1</td><td>centos 7 1611</td></tr><tr><td>client.ceph.local</td><td>client</td><td>centos 7 1611</td></tr></tbody></table><h3 id="centOS升级内核"><a href="#centOS升级内核" class="headerlink" title="centOS升级内核"></a>centOS升级内核</h3><p>根据文档推荐内核<code>4.9.x</code>以上，使用yum自动挡安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> import key</span><br>rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org<br><span class="hljs-meta">#</span><span class="bash"> install elrepo repo</span><br>rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm<br><span class="hljs-meta">#</span><span class="bash"> install kernel</span><br>yum --enablerepo=elrepo-kernel install  kernel-ml-devel kernel-ml -y<br><span class="hljs-meta">#</span><span class="bash"> modify grub</span><br>grub2-set-default 0<br><span class="hljs-meta">#</span><span class="bash"> reboot</span><br>reboot<br></code></pre></td></tr></table></figure><h3 id="安装Preflight"><a href="#安装Preflight" class="headerlink" title="安装Preflight"></a>安装<a href="http://docs.ceph.com/docs/master/start/quick-start-preflight/">Preflight</a></h3><p>安装组件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo subscription-manager repos --enable=rhel-7-server-extras-rpms<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 安装epel</span><br>sudo yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 时间同步</span><br>sudo yum install ntp ntpdate ntp-doc<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 安装sshd</span><br>sudo yum install openssh-server<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 调整优先级</span><br>sudo yum install yum-plugin-priorities --enablerepo=rhel-7-server-optional-rpms<br></code></pre></td></tr></table></figure><p>添加ceph repo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vim /etc/yum.repos.d/ceph.repo<br><br>[ceph-noarch]<br>name=Ceph noarch packages<br>baseurl=https://download.ceph.com/rpm-jewel/el7/noarch<br>enabled=1<br>gpgcheck=1<br>type=rpm-md<br>gpgkey=https://download.ceph.com/keys/release.asc<br></code></pre></td></tr></table></figure><p>Update your repository and install <code>ceph-deploy</code></p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">sudo yum <span class="hljs-meta">update</span> <span class="hljs-variable">&amp;&amp;</span> sudo yum install ceph-deploy<br></code></pre></td></tr></table></figure><p>建立ceph用户</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dts">ssh user@ceph-server<br>sudo useradd -d <span class="hljs-meta-keyword">/home/</span>&#123;username&#125; -<span class="hljs-class">m </span>&#123;username&#125;<br>sudo <span class="hljs-class">passwd </span>&#123;username&#125;<br></code></pre></td></tr></table></figure><p>添加sudo权限</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">echo <span class="hljs-string">&quot;&#123;username&#125; ALL = (root) NOPASSWD:ALL&quot;</span> | sudo tee <span class="hljs-regexp">/etc/</span>sudoers.d/&#123;username&#125;<br>sudo chmod <span class="hljs-number">0440</span> <span class="hljs-regexp">/etc/</span>sudoers.d/&#123;username&#125;<br></code></pre></td></tr></table></figure><p>设置免密码登陆，请使用ceph用户，不要使用root</p><p>没什么好解释的了，我一般都是用ansible生成用户，顺便把密钥一起生成了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen<br><br>Generating public/private key pair.<br>Enter file in which to save the key (/ceph-admin/.ssh/id_rsa):<br>Enter passphrase (empty for no passphrase):<br>Enter same passphrase again:<br>Your identification has been saved in /ceph-admin/.ssh/id_rsa.<br>Your public key has been saved in /ceph-admin/.ssh/id_rsa.pub.<br><br><br>ssh-copy-id &#123;username&#125;@node1<br>ssh-copy-id &#123;username&#125;@node2<br>ssh-copy-id &#123;username&#125;@node3<br></code></pre></td></tr></table></figure><p>在Deploy node上创建并编辑~/.ssh/config，这是Ceph官方doc推荐的步骤，这样做的目的是可以避免每次执行ceph-deploy时都要去指定 –username {username} 参数</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[ceph@admin ~]$ cat .ssh/config <br><span class="hljs-comment"># 我是使用的域名这点和官网的不太一样.</span><br><br>Host node1.ceph.local<br>   Hostname node1.ceph.local<br>   <span class="hljs-keyword">User</span> <span class="hljs-title">ceph</span><br>Host node2.ceph.local<br>   Hostname node2.ceph.local<br>   <span class="hljs-keyword">User</span> <span class="hljs-title">ceph</span><br>Host node3.ceph.local<br>   Hostname node3.ceph.local<br>   <span class="hljs-keyword">User</span> <span class="hljs-title">ceph</span><br>Host client.ceph.local<br>   Hostname client.ceph.local<br>   <span class="hljs-keyword">User</span> <span class="hljs-title">ceph</span><br></code></pre></td></tr></table></figure><p>最后设置防火墙、关闭selinux等，自己看官网吧。 我都是用ansible弄的。</p><h3 id="安装Ceph-Storage-Cluster"><a href="#安装Ceph-Storage-Cluster" class="headerlink" title="安装Ceph Storage Cluster"></a>安装<a href="http://docs.ceph.com/docs/master/glossary/#term-ceph-storage-cluster"><em>Ceph Storage Cluster</em></a></h3><p>如果你之前安装过，需要先清理环境</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">ceph-deploy purgedata &#123;ceph-<span class="hljs-keyword">node</span><span class="hljs-title">&#125; [&#123;ceph-node</span>&#125;]<br>ceph-deploy forgetkeys<br><br><span class="hljs-comment"># 这个清理就比较厉害了，连软件都清了</span><br>ceph-deploy purge &#123;ceph-<span class="hljs-keyword">node</span><span class="hljs-title">&#125; [&#123;ceph-node</span>&#125;]<br></code></pre></td></tr></table></figure><p>开始建立cluster,先建立一个文件夹，过程中会产生一些文件，不要弄丢了。</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">mkdir</span> my-<span class="hljs-keyword">cluster</span><br><span class="hljs-keyword">cd</span> my-<span class="hljs-keyword">cluster</span><br></code></pre></td></tr></table></figure><p>初始化moniter<code>ceph-deploy new &#123;initial-monitor-node(s)&#125;</code></p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">ceph-deploy <span class="hljs-keyword">new</span> node1<br></code></pre></td></tr></table></figure><p>修改配置文件</p><p>Change the default number of replicas in the Ceph configuration file from <code>3</code> to <code>2</code> so that Ceph can achieve an <code>active + clean</code> state with just two Ceph OSDs. Add the following line under the <code>[global]</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">[ceph@admin my-cluster]$ cat ceph.conf <br>[global]<br>fsid = 1c1f77af-960d-46a8-88c2-4fdb1bd75ac4<br>mon_initial_members = node1<br>mon_host = 10.117.130.146<br>auth_cluster_required = cephx<br>auth_service_required = cephx<br>auth_client_required = cephx<br>osd pool default size = 2 # 这个就是新加的。<br></code></pre></td></tr></table></figure><p>安装ceph</p><p>这个过程ceph-deploy会自动连接到节点上，自动执行了。所以就等着看输出日志就好了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">ceph-deploy install &#123;ceph-node&#125;[&#123;ceph-node&#125; ...]<br><br>For example:<br>ceph-deploy install admin node1 node2 node3<br></code></pre></td></tr></table></figure><p>初始化mon，生成key</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tap">ceph-deploy mon create-initial<br><br>[ceph@admin my-cluster]$ ls -l *.keyring<br>-rw-------<span class="hljs-number"> 1 </span>ceph ceph<span class="hljs-number"> 113 </span>3月 <span class="hljs-number"> 10 </span>13:19 ceph.bootstrap-mds.keyring<br>-rw-------<span class="hljs-number"> 1 </span>ceph ceph<span class="hljs-number"> 113 </span>3月 <span class="hljs-number"> 10 </span>13:19 ceph.bootstrap-osd.keyring<br>-rw-------<span class="hljs-number"> 1 </span>ceph ceph<span class="hljs-number"> 113 </span>3月 <span class="hljs-number"> 10 </span>13:19 ceph.bootstrap-rgw.keyring<br>-rw-------<span class="hljs-number"> 1 </span>ceph ceph<span class="hljs-number"> 129 </span>3月 <span class="hljs-number"> 10 </span>13:19 ceph.client.admin.keyring<br>-rw-------<span class="hljs-number"> 1 </span>ceph ceph <span class="hljs-number"> 73 </span>3月 <span class="hljs-number"> 10 </span>13:05 ceph.mon.keyring<br></code></pre></td></tr></table></figure><p>安装osd组件，osd就是最终的数据存放地方。</p><p>建立osd目录，这个我修改了一下和官网不一样。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">ssh node2<br>sudo mkdir <span class="hljs-regexp">/var/</span>local/osd0<br><span class="hljs-comment"># 这里增加了一个修改权限，之前掉坑里了。 </span><br>sudo chown -R ceph:ceph <span class="hljs-regexp">/var/</span>local/osd0<br><span class="hljs-keyword">exit</span><br><br>ssh node3<br>sudo mkdir <span class="hljs-regexp">/var/</span>local/osd1<br>sudo chown -R ceph:ceph <span class="hljs-regexp">/var/</span>local/osd1<br><span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><p>osd 需要两个过程，prepare、activate</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># prepare</span><br>ceph-deploy osd prepare node2:<span class="hljs-regexp">/var/</span>local<span class="hljs-regexp">/osd0 node3:/</span>var<span class="hljs-regexp">/local/</span>osd1<br><br><span class="hljs-comment"># activate</span><br>ceph-deploy osd activate node2:<span class="hljs-regexp">/var/</span>local<span class="hljs-regexp">/osd0 node3:/</span>var<span class="hljs-regexp">/local/</span>osd1<br></code></pre></td></tr></table></figure><p>copy key文件、conf文件,分发到各个节点上去</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ceph</span>-deploy admin admin node<span class="hljs-number">1</span> node<span class="hljs-number">2</span> node<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>修改key文件权限，key文件需要增加r权限，</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 如果重新分发了key需要执行，因为新生成不带r权限。为毛不生成的时候就把权限弄对了。 又一个坑</span><br>sudo chmod +r <span class="hljs-regexp">/etc/</span>ceph/ceph.client.admin.keyring<br></code></pre></td></tr></table></figure><p>Check your cluster’s health.</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">ceph health</span><br></code></pre></td></tr></table></figure><h3 id="客户端使用ceph-block"><a href="#客户端使用ceph-block" class="headerlink" title="客户端使用ceph block"></a>客户端使用ceph block</h3><p><a href="http://docs.ceph.com/docs/master/_images/ditaa-921dec410b0b0c4cac42031b5829443d413c0960.png"><img src="http://docs.ceph.com/docs/master/_images/ditaa-921dec410b0b0c4cac42031b5829443d413c0960.png" alt="img"></a></p><p>使用ceph-deploy 安装客户端</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">ceph-deploy install <span class="hljs-keyword">client</span><br></code></pre></td></tr></table></figure><p>copy keys and conf files</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">ceph-deploy admin client<br><br><span class="hljs-comment">#客户端需要执行这个。</span><br>sudo chmod +r <span class="hljs-regexp">/etc/</span>ceph/ceph.client.admin.keyring<br></code></pre></td></tr></table></figure><p>create a block device image</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">rbd <span class="hljs-built_in">create</span> foo <span class="hljs-comment">--size 4096</span><br></code></pre></td></tr></table></figure><p>On the <code>ceph-client</code> node, map the image to a block device.</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sqf">sudo rbd map foo --<span class="hljs-built_in">name</span> client.<span class="hljs-built_in">admin</span><br></code></pre></td></tr></table></figure><p>Use the block device by creating a file system on the <code>ceph-client</code> node.</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle">sudo mkfs.ext4 -m0 <span class="hljs-regexp">/dev/</span>rbd<span class="hljs-regexp">/rbd/</span>foo<br><br><span class="hljs-keyword">This</span> may take a few moments.<br></code></pre></td></tr></table></figure><p>Mount the file system on the <code>ceph-client</code> node.</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo mkdir <span class="hljs-regexp">/mnt/</span>ceph-block-device<br>sudo mount <span class="hljs-regexp">/dev/</span>rbd<span class="hljs-regexp">/rbd/</span>foo <span class="hljs-regexp">/mnt/</span>ceph-block-device<br>cd <span class="hljs-regexp">/mnt/</span>ceph-block-device<br></code></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>查看集群状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">[ceph@admin ~]$ ceph -s<br>cluster 1c1f77af-960d-46a8-88c2-4fdb1bd75ac4<br> health HEALTH_OK<br> monmap e1: 1 mons at &#123;node1=10.117.130.146:6789/0&#125;<br>        election epoch 3, quorum 0 node1<br> osdmap e37: 3 osds: 3 up, 3 in<br>        flags sortbitwise,require_jewel_osds<br>  pgmap v2512: 120 pgs, 8 pools, 136 MB data, 218 objects<br>        20959 MB used, 31222 MB / 52182 MB avail<br>             120 active+clean<br></code></pre></td></tr></table></figure><p>查看osd状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">[ceph@admin ~]$ ceph osd tree<br>ID WEIGHT  TYPE NAME      UP/DOWN REWEIGHT PRIMARY-AFFINITY <br>-1 0.04976 root default                                     <br>-2 0.01659     host node2                                   <br> 0 0.01659         osd.0       up  1.00000          1.00000 <br>-3 0.01659     host node3                                   <br> 1 0.01659         osd.1       up  1.00000          1.00000 <br>-4 0.01659     host node1                                   <br> 2 0.01659         osd.2       up  1.00000          1.00000<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>ceph</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Oracle使用PL/SQL导出csv文件</title>
    <link href="/2018/11/13/Oracle%E4%BD%BF%E7%94%A8PL-SQL%E5%AF%BC%E5%87%BAcsv%E6%96%87%E4%BB%B6/"/>
    <url>/2018/11/13/Oracle%E4%BD%BF%E7%94%A8PL-SQL%E5%AF%BC%E5%87%BAcsv%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>建立存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">or</span> replace <span class="hljs-keyword">procedure</span> dump_table_to_csv(p_tname    <span class="hljs-keyword">in</span> varchar2,<br>                                              p_dir      <span class="hljs-keyword">in</span> varchar2,<br>                                              p_filename <span class="hljs-keyword">in</span> varchar2) <span class="hljs-keyword">is</span><br>  l_output      utl_file.file_type;<br>  l_theCursor   <span class="hljs-type">integer</span> <span class="hljs-keyword">default</span> dbms_sql.open_cursor;<br>  l_columnValue varchar2(<span class="hljs-number">4000</span>);<br>  l_status      <span class="hljs-type">integer</span>;<br>  l_query       varchar2(<span class="hljs-number">1000</span>) <span class="hljs-keyword">default</span> <span class="hljs-string">&#x27;select * from &#x27;</span> <span class="hljs-operator">||</span> p_tname;<br>  l_colCnt      number :<span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>  l_separator   varchar2(<span class="hljs-number">1</span>);<br>  l_descTbl     dbms_sql.desc_tab;<br><span class="hljs-keyword">begin</span><br>  l_output :<span class="hljs-operator">=</span> utl_file.fopen(p_dir, p_filename, <span class="hljs-string">&#x27;w&#x27;</span>);<br>  <span class="hljs-keyword">execute</span> immediate <span class="hljs-string">&#x27;alter session set nls_date_format=&#x27;&#x27;dd-mon-yyyy hh24:mi:ss&#x27;&#x27; &#x27;</span>;<br><br>  dbms_sql.parse(l_theCursor, l_query, dbms_sql.native);<br>  dbms_sql.describe_columns(l_theCursor, l_colCnt, l_descTbl);<br><br>  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span> .. l_colCnt loop<br>    utl_file.put(l_output,<br>                 l_separator <span class="hljs-operator">||</span> <span class="hljs-string">&#x27;&quot;&#x27;</span> <span class="hljs-operator">||</span> l_descTbl(i).col_name <span class="hljs-operator">||</span> <span class="hljs-string">&#x27;&quot;&#x27;</span>);<br>    dbms_sql.define_column(l_theCursor, i, l_columnValue, <span class="hljs-number">4000</span>);<br>    l_separator :<span class="hljs-operator">=</span> <span class="hljs-string">&#x27;,&#x27;</span>;<br>  <span class="hljs-keyword">end</span> loop;<br>  utl_file.new_line(l_output);<br><br>  l_status :<span class="hljs-operator">=</span> dbms_sql.execute(l_theCursor);<br><br>  while (dbms_sql.fetch_rows(l_theCursor) <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span>) loop<br>    l_separator :<span class="hljs-operator">=</span> <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span> .. l_colCnt loop<br>      dbms_sql.column_value(l_theCursor, i, l_columnValue);<br>      utl_file.put(l_output, l_separator <span class="hljs-operator">||</span> l_columnValue);<br>      l_separator :<span class="hljs-operator">=</span> <span class="hljs-string">&#x27;,&#x27;</span>;<br>    <span class="hljs-keyword">end</span> loop;<br>    utl_file.new_line(l_output);<br>  <span class="hljs-keyword">end</span> loop;<br>  dbms_sql.close_cursor(l_theCursor);<br>  utl_file.fclose(l_output);<br><br>  <span class="hljs-keyword">execute</span> immediate <span class="hljs-string">&#x27;alter session set nls_date_format=&#x27;&#x27;dd-MON-yy&#x27;&#x27; &#x27;</span>;<br>exception<br>  <span class="hljs-keyword">when</span> others <span class="hljs-keyword">then</span><br>    <span class="hljs-keyword">execute</span> immediate <span class="hljs-string">&#x27;alter session set nls_date_format=&#x27;&#x27;dd-MON-yy&#x27;&#x27; &#x27;</span>;<br>    raise;<br><span class="hljs-keyword">end</span>;<br><span class="hljs-operator">/</span><br></code></pre></td></tr></table></figure><p>使用方法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">exec</span> dump_table_to_csv( <span class="hljs-string">&#x27;xxxxx&#x27;</span>, <span class="hljs-string">&#x27;xxx_DIR&#x27;</span>, <span class="hljs-string">&#x27;xxx_xxxxx.csv&#x27;</span>);<br><br>PL<span class="hljs-operator">/</span><span class="hljs-keyword">SQL</span> <span class="hljs-keyword">procedure</span> successfully completed.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>oracle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用yumdownloader下载rpm包</title>
    <link href="/2018/11/13/%E4%BD%BF%E7%94%A8yumdownloader%E4%B8%8B%E8%BD%BDrpm%E5%8C%85/"/>
    <url>/2018/11/13/%E4%BD%BF%E7%94%A8yumdownloader%E4%B8%8B%E8%BD%BDrpm%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<h4 id="使用yumdownloader下载rpm包"><a href="#使用yumdownloader下载rpm包" class="headerlink" title="使用yumdownloader下载rpm包"></a>使用yumdownloader下载rpm包</h4><p>安装</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> yum-utils*<br></code></pre></td></tr></table></figure><p>使用</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">yumdownloader --<span class="hljs-built_in">resolve</span> <span class="hljs-keyword">python</span>-six<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mongodb权限概念</title>
    <link href="/2018/11/13/Mongodb%E6%9D%83%E9%99%90%E6%A6%82%E5%BF%B5/"/>
    <url>/2018/11/13/Mongodb%E6%9D%83%E9%99%90%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<blockquote><p>转自HULK一线技术杂谈</p></blockquote><p>权限概念</p><p>要想理解清楚MongoDB的权限必须先了解如下一些关键字</p><p><strong>user</strong></p><p>即用户，用于提供客户端连接MongoDB的认证账户</p><p><strong>role</strong></p><p>即角色，数据权限的集合，创建用户的时候必须要指定对应的角色，否则用户无法操作数据库</p><p><strong>resource</strong></p><p>即资源，包括database或collection也可以是database和collection的组合</p><p>例如：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">&#123; d<span class="hljs-variable">b:</span> <span class="hljs-symbol">&lt;database&gt;</span>, collection: <span class="hljs-symbol">&lt;collection&gt;</span> &#125;<br></code></pre></td></tr></table></figure><p>当然你也可能看到一种特殊的资源：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<span class="hljs-attr">&quot;cluster&quot;</span> : <span class="hljs-literal">true</span>&#125;<br></code></pre></td></tr></table></figure><p>它其实表示的是全局资源</p><p><strong>actions</strong></p><p>即权限操作，”actions” 定义了”user”能够对 “resource document”执行的操作</p><p>例如，增删改查包括如下操作：</p><p>find、insert、remove、update</p><p><strong>privilege</strong></p><p>即权限，”privilege” 是一组”resource” 和 “actions” 的组合</p><p><strong>authenticationDatabase</strong></p><p>认证库，即创建角色或用户时所在的库</p><p>例如，在 admin 下创建了 MongoDB 用户那么登陆的时候需要指定认证库</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">mongo</span> <span class="hljs-literal">-</span><span class="hljs-comment">u</span> <span class="hljs-comment">mongo</span> <span class="hljs-literal">-</span><span class="hljs-comment">p</span> <span class="hljs-comment">xxx</span> --<span class="hljs-comment">host</span> <span class="hljs-comment">xxx</span> --<span class="hljs-comment">port</span> <span class="hljs-comment">xxx</span> --<span class="hljs-comment">authenticationDatabase=admin</span><br></code></pre></td></tr></table></figure><p>角色</p><p>MongoDB 里角色分为 ”内建角色“ 和 ”用户自定义“ 角色两种，内建角色是 MongoDB 为了方便用户管理和内部操作进行的预定义的一些角色具体见文末连接：MongoDB内建角色介绍</p><p>多数时候为了精细化权限控制 MongoDB 的内建角色无法满足我们的需求，因此需要 DBA 自定义角色来进行更加详细的权限控制。</p><p>创建角色</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs json">use admin ; <span class="hljs-comment">// 进入名为admin的数据库下,下同</span><br><br>db.createRole(<br>       &#123; role:<span class="hljs-string">&quot;testrole&quot;</span>, <span class="hljs-comment">//角色名称</span><br>       privileges: [ <span class="hljs-comment">// 权限集</span><br>                  &#123;<br>                     resource:  &#123; <span class="hljs-comment">//资源</span><br>                             db:<span class="hljs-string">&quot;lidan&quot;</span>,     <span class="hljs-comment">// 创建的testrole角色具有对lidan库的操作权限，具体权限建actions</span><br>                             collection:<span class="hljs-string">&quot;&quot;</span>   <span class="hljs-comment">// lidan库下对应的集合名 如果为&quot;&quot; 表示所有集合</span><br>                &#125;,<br>                     actions: [ <span class="hljs-string">&quot;find&quot;</span>, <span class="hljs-string">&quot;insert&quot;</span>, <span class="hljs-string">&quot;remove&quot;</span>,<span class="hljs-string">&quot;update&quot;</span> ]   <span class="hljs-comment">//角色可进行的操作，注意这里是一个数组</span><br>                   &#125;<br>                  ],<br>         roles: [ ] <span class="hljs-comment">// 是否继承其他的角色，如果指定了其他角色那么新创建的角色自动继承对应其他角色的所有权限，该参数必须显示指定</span><br>       &#125;<br>)<br></code></pre></td></tr></table></figure><p>上述语句在 admin 库里创建了一个名为 testrole的角色，该角色具有对数据库lidan下的所有集合进行 find、insert、remove、update的操作的权限。</p><p>角色创建完毕后 MongoDB 会在系统库 admin 下创建一个系统collection名叫system.roles 里面存储的即是角色相关的信息。</p><p>可以使用如下语句进行查看：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">db.system.roles.<span class="hljs-builtin-name">find</span>();<br></code></pre></td></tr></table></figure><p>另外， MongoDB 所有权限操作列表详见文末连接：MongoDB 权限操作列表</p><p>查看角色</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json">use admin; <span class="hljs-comment">// 数据库必须是创建所要查看角色时的数据库，下同</span><br><br>db.getRole( <br>            <span class="hljs-string">&quot;testrole&quot;</span>, <span class="hljs-comment">//要查看角色的名字</span><br>            &#123; <br>               showPrivileges: <span class="hljs-literal">true</span>   <span class="hljs-comment">//指定查看角色信息的时候是否显示它所拥有的权限信息，也可不指定</span><br>            &#125; <br>          )<br></code></pre></td></tr></table></figure><p>角色继承</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs json">use admin;<br><br><span class="hljs-comment">//角色继承</span><br><br>db.grantRolesToRole(  <br>                     <span class="hljs-string">&quot;testrole&quot;</span>,<br>                     [ <span class="hljs-string">&quot;otherrole1&quot;</span>,<span class="hljs-string">&quot;otherrole2&quot;</span> ] <span class="hljs-comment">// 将 otherrole1、otherrole2 两个角色（假设之前已经创建好）的权限授予testrole角色</span><br>                    )<br><span class="hljs-comment">//角色权限回收</span><br>db.revokeRolesFromRole(<br>                         <span class="hljs-string">&quot;testrole&quot;</span> ,<br>                         [ <span class="hljs-string">&quot;otherrole2&quot;</span> ] <span class="hljs-comment">// 撤销testrole角色从otherrole2角色所继承的所有权限</span><br>                      )<br></code></pre></td></tr></table></figure><p>角色授权</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs json">use admin;<br><br>db.grantPrivilegesToRole(<br>    <span class="hljs-string">&quot;testrole&quot;</span>,<br>        [<br>        &#123;<br>            resource: <span class="hljs-comment">//权限可操作的资源</span><br>               &#123;<br>                    db:<span class="hljs-string">&quot;lidan1&quot;</span>,  <span class="hljs-comment">// 授予testrole角色具有操作lidan1库的权限</span><br>                    collection:<span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment">// lidan_1库下的集合 如果为&quot;&quot; 表示所有集合</span><br>                &#125;,                                                 <br>            actions:  <span class="hljs-comment">// 权限允许的操作</span><br>            [ <span class="hljs-string">&quot;createCollection&quot;</span>, <span class="hljs-string">&quot;dropCollection&quot;</span>,<span class="hljs-string">&quot;convertToCapped&quot;</span>] <span class="hljs-comment">//权限可进行的操作</span><br>        &#125; <br>        ]<br>)<br></code></pre></td></tr></table></figure><p>执行完操作后testrole角色便可以对库lidan_1下的所有集合进行 “createCollection”, “dropCollection”,”convertToCapped” 操作。</p><p>角色权限回收</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs json">use admin;<br><br>db.revokePrivilegesFromRole(<br>      <span class="hljs-string">&quot;testrole&quot;</span>,<br>      [<br>          &#123;<br>              resource: <span class="hljs-comment">//权限可操作的资源</span><br>              &#123;<br>                  db:<span class="hljs-string">&quot;lidan1&quot;</span>,  <span class="hljs-comment">// 回收角色对库lidan1的actions 操作权限</span><br>                  collection:<span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment">//  lidan_1库下所有的集合 如果为&quot;&quot; 表示所有集合</span><br>              &#125;,                                                 <br><br>              actions:  <span class="hljs-comment">// 权限允许的操作</span><br>                  [ <span class="hljs-string">&quot;createCollection&quot;</span>, <span class="hljs-string">&quot;dropCollection&quot;</span>,<span class="hljs-string">&quot;convertToCapped&quot;</span>] <span class="hljs-comment">//需要回收的权限</span><br>              &#125; <br>      ]<br>)<br></code></pre></td></tr></table></figure><p>执行完操作后testrole角色对库lidan_1下的所有集合无法进行 “createCollection”, “dropCollection”,”convertToCapped” 操作。</p><p>删除角色</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">use</span> admin;<br><br><span class="hljs-keyword">db</span>.dropRole(<span class="hljs-string">&quot;testrole&quot;</span>) <span class="hljs-comment">// 删除角色比较简单直接指定要删除角色的名称即可</span><br></code></pre></td></tr></table></figure><p>其他关于角色的对应操作请参考文末连接：MongoDB角色管理方法</p><p>用户</p><p>创建用户</p><p>MongoDB 创建用户时可以指定内建角色也可以使用用户自定义角色，DBA 可以根据需求自行决定（注意：用户不允许在local库下创建用户）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs json">user admin;<br><br><span class="hljs-comment">// 指定内建角色来创建用户</span><br><br>db.createUser(<br>    &#123;<br>        user:&#x27;mongo&#x27;, <span class="hljs-comment">// 用户名</span><br>        pwd:&#x27;<span class="hljs-number">123</span>&#x27;,    <span class="hljs-comment">// 密码</span><br>        roles:[ <br>                  &#123;<br>                      role:&#x27;root&#x27;,<span class="hljs-comment">// 通过指定内建角色root 来创建用户</span><br>                      db:&#x27;admin&#x27;  <span class="hljs-comment">// 指定角色对应的认证数据库，内建角色通常认证库为admin</span><br>                  &#125;<br>              ]<br>    &#125;<br>) ;<br><br><span class="hljs-comment">// 指定自定义角色来创建用户，这里是在admin下创建的用户故认证库也是admin</span><br><br>db.createUser(<br>    &#123;  <br>        user:<span class="hljs-string">&quot;mongo&quot;</span>,<span class="hljs-comment">// 用户名</span><br>        pwd:<span class="hljs-string">&quot;123&quot;</span>,   <span class="hljs-comment">// 密码</span><br>        roles:[<span class="hljs-string">&quot;testrole&quot;</span>] <span class="hljs-comment">//通过指定用户自定义角色来创建用户,注意这里是数组</span><br>    &#125;<br>)<br></code></pre></td></tr></table></figure><p>用户创建成功后可以使用如下语句登陆：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mongo</span>   -u mongo -p <span class="hljs-number">123</span> --host <span class="hljs-number">127.0.0.1</span> --port <span class="hljs-number">9999</span> --authenticationDatabase=admin<br></code></pre></td></tr></table></figure><p>查看用户</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">use</span> admin;<br><br><span class="hljs-keyword">db</span>.getUser(<span class="hljs-string">&quot;mongo&quot;</span>) <span class="hljs-comment">// 查看用户比较简单只需要指定用户名即可</span><br></code></pre></td></tr></table></figure><p>为用户 添加/回收 角色</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs json">use admin;<br><br><span class="hljs-comment">//为用户添加角色</span><br><br>db.grantRolesToUser(<br>    <span class="hljs-string">&quot;mongo&quot;</span>, <span class="hljs-comment">// 用户名</span><br>        [ <br>            &#123; role: <span class="hljs-string">&quot;testrole&quot;</span>, <span class="hljs-comment">// 需要添加的角色名 </span><br>                db: <span class="hljs-string">&quot;admin&quot;</span> <span class="hljs-comment">// 角色对应的认证库，即角色创建时所在的数据库</span><br>            &#125; <br>        ]<br>)<br><br><span class="hljs-comment">//对用户的角色进行回收，如果将用户所有的角色都回收完毕，那么用户只有对所属库的连接权限</span><br><br>db.revokeRolesFromUser(<br>    <span class="hljs-string">&quot;mongo&quot;</span>, <span class="hljs-comment">// 用户名</span><br>        [ <br>            &#123; role: <span class="hljs-string">&quot;testrole&quot;</span>, <span class="hljs-comment">// 需要回收的角色名 </span><br>                db: <span class="hljs-string">&quot;admin&quot;</span> <span class="hljs-comment">// 角色对应的认证库，即角色创建时所在的数据库</span><br>            &#125; <br>        ]<br>)<br></code></pre></td></tr></table></figure><p>删除用户</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">use</span> admin;<br><br><span class="hljs-keyword">db</span>.dropUser(<span class="hljs-string">&quot;mongo&quot;</span>); <span class="hljs-comment">// 删除用户比较简单直接指定用户名即可</span><br></code></pre></td></tr></table></figure><p>另外，除上述对用户的操作方法外还有其他对用户的管理方法。这里就不一一列举可详见文末连接：MongoDB 用户管理方法</p><p>注意事项</p><p>\1. 在 MongoDB 中删除库和集合并不会级联删除对应的角色和用户。因此如果想彻底删除对应的业务库因该先删除库及其对应的角色和用户。</p><p>\2. 如果既想实现精细化权限控制又想简化用户管理，原则上建议只给开发创建一个账户，并且使用 admin 做认证库，这样可避免清理过期业务库而导致无法登陆的问题。</p><p>相关连接:</p><p>MongoDB 内建角色介绍：</p><p><a href="https://docs.mongodb.org/manual/reference/built-in-roles/">https://docs.mongodb.org/manual/reference/built-in-roles/</a></p><p>MongoDB 权限操作列表：</p><p><a href="https://docs.mongodb.org/manual/reference/privilege-actions/#security-user-actions">https://docs.mongodb.org/manual/reference/privilege-actions/#security-user-actions</a></p><p>MongoDB 角色管理方法：</p><p><a href="https://docs.mongodb.org/manual/reference/method/js-role-management/">https://docs.mongodb.org/manual/reference/method/js-role-management/</a></p><p>MongoDB 用户管理方法：</p><p><a href="https://docs.mongodb.org/manual/reference/method/js-user-management/">https://docs.mongodb.org/manual/reference/method/js-user-management/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>mongodb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mongodb sharded cluster using keyfile</title>
    <link href="/2018/11/13/Mongodb-sharded-cluster-using-keyfile/"/>
    <url>/2018/11/13/Mongodb-sharded-cluster-using-keyfile/</url>
    
    <content type="html"><![CDATA[<h2 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h2><p><a href="https://docs.mongodb.com/v3.2/tutorial/enforce-keyfile-access-control-in-existing-sharded-cluster/">Enforce Keyfile Access Control in Sharded Cluster</a></p><h2 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h2><ol><li>按照官方文档无法成功。</li><li><code>enableLocalhostAuthBypass</code>这个参数已经不可用了，官方文档有写。</li><li>一定要建立用户（本地、集群），开启keyfile默认开启鉴权，如果没有用户各种错误，而且链接不上。</li></ol><h2 id="部署操作"><a href="#部署操作" class="headerlink" title="部署操作"></a>部署操作</h2><h3 id="建立keyfile"><a href="#建立keyfile" class="headerlink" title="建立keyfile"></a>建立<code>keyfile</code></h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">openssl rand -base64 <span class="hljs-number">756</span> &gt; &lt;<span class="hljs-type">path</span>-<span class="hljs-keyword">to</span>-keyfile&gt;<br>chmod <span class="hljs-number">400</span> &lt;<span class="hljs-type">path</span>-<span class="hljs-keyword">to</span>-keyfile&gt;<br></code></pre></td></tr></table></figure><h3 id="复制keyfile到集群"><a href="#复制keyfile到集群" class="headerlink" title="复制keyfile到集群"></a>复制keyfile到集群</h3><p>mongod、mongos、config</p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cos">IMPORTANT<br><span class="hljs-keyword">Do</span> not <span class="hljs-keyword">use</span> shared network locations or storage mediums such <span class="hljs-keyword">as</span> USB drives <span class="hljs-keyword">for</span> storing the keyfile.<br></code></pre></td></tr></table></figure><h3 id="关闭Balancer"><a href="#关闭Balancer" class="headerlink" title="关闭Balancer"></a>关闭Balancer</h3><p>Connect a <a href="https://docs.mongodb.com/v3.2/reference/program/mongo/#bin.mongo">mongo</a> shell to a <a href="https://docs.mongodb.com/v3.2/reference/program/mongos/#bin.mongos">mongos</a>.</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">sh.stopBalancer()</span><br><span class="hljs-keyword"></span><span class="hljs-comment">#关闭</span><br><br><span class="hljs-keyword">sh.getBalancerState()</span><br><span class="hljs-keyword"></span><span class="hljs-comment">#检查是否关闭</span><br></code></pre></td></tr></table></figure><h3 id="建立副本集用户"><a href="#建立副本集用户" class="headerlink" title="建立副本集用户"></a>建立副本集用户</h3><p>Create the user administrator（只能管理用户，不能管理数据、集群）</p><p>ie 这个链接的是副本集，千万别搞错。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json">admin = db.getSiblingDB(<span class="hljs-string">&quot;admin&quot;</span>)<br>admin.createUser(<br>  &#123;<br>    user: <span class="hljs-string">&quot;rsuseradmin&quot;</span>, <span class="hljs-comment">//这个用户只能管理user，不能管理集群</span><br>    pwd: <span class="hljs-string">&quot;changeme1&quot;</span>,<br>    roles: [ &#123; role: <span class="hljs-string">&quot;userAdminAnyDatabase&quot;</span>, db: <span class="hljs-string">&quot;admin&quot;</span> &#125; ]<br>  &#125;<br>)<br></code></pre></td></tr></table></figure><p>Create Administrative User for Cluster Management（管理rs副本集）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json">db.getSiblingDB(<span class="hljs-string">&quot;admin&quot;</span>).createUser(<br>  &#123;<br>    <span class="hljs-attr">&quot;user&quot;</span> : <span class="hljs-string">&quot;rsclusteradmin&quot;</span>, <span class="hljs-comment">//只能管理集群</span><br>    <span class="hljs-attr">&quot;pwd&quot;</span> : <span class="hljs-string">&quot;changeme2&quot;</span>,<br>    roles: [ &#123; <span class="hljs-attr">&quot;role&quot;</span> : <span class="hljs-string">&quot;clusterAdmin&quot;</span>, <span class="hljs-attr">&quot;db&quot;</span> : <span class="hljs-string">&quot;admin&quot;</span> &#125; ]<br>  &#125;<br>)<br></code></pre></td></tr></table></figure><p>如果需要访问本地数据，可以使用rsuseradmin建立一个新的用户来访问数据库</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json">db.createUser(&#123;user:<span class="hljs-string">&quot;test&quot;</span>,pwd:<span class="hljs-string">&quot;test&quot;</span>,roles:[  <br>    &#123;role:<span class="hljs-string">&quot;dbOwner&quot;</span>,db:<span class="hljs-string">&quot;wangxi&quot;</span>&#125;]&#125;);  <br>#建立用户test，角色dbOwner<br></code></pre></td></tr></table></figure><h3 id="建立分片集群用户（shard）"><a href="#建立分片集群用户（shard）" class="headerlink" title="建立分片集群用户（shard）"></a>建立分片集群用户（shard）</h3><p>Create the user administrator</p><p>管理用户的管理员，真绕。</p><p>这个是要链接到<code>mongos</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json">admin = db.getSiblingDB(<span class="hljs-string">&quot;admin&quot;</span>)<br>admin.createUser(<br>  &#123;<br>    user: <span class="hljs-string">&quot;shuseradmin&quot;</span>, <span class="hljs-comment">//这个用户只能管理user，不能管理集群</span><br>    pwd: <span class="hljs-string">&quot;changeme1&quot;</span>,<br>    roles: [ &#123; role: <span class="hljs-string">&quot;userAdminAnyDatabase&quot;</span>, db: <span class="hljs-string">&quot;admin&quot;</span> &#125; ]<br>  &#125;<br>)<br></code></pre></td></tr></table></figure><p>Create Administrative User for Cluster Management</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs json">db.getSiblingDB(<span class="hljs-string">&quot;admin&quot;</span>).createUser(<br>  &#123;<br>    <span class="hljs-attr">&quot;user&quot;</span> : <span class="hljs-string">&quot;shclusteradmin&quot;</span>, <span class="hljs-comment">//只能管理集群</span><br>    <span class="hljs-attr">&quot;pwd&quot;</span> : <span class="hljs-string">&quot;changeme2&quot;</span>,<br>    roles: [ &#123; <span class="hljs-attr">&quot;role&quot;</span> : <span class="hljs-string">&quot;clusterAdmin&quot;</span>, <span class="hljs-attr">&quot;db&quot;</span> : <span class="hljs-string">&quot;admin&quot;</span> &#125; ]<br>  &#125;<br>)<br><br>#sh.status()<br></code></pre></td></tr></table></figure><h3 id="为什么要单独设置用户？"><a href="#为什么要单独设置用户？" class="headerlink" title="为什么要单独设置用户？"></a>为什么要单独设置用户？</h3><ol><li>rs可能会单独增加成员</li><li>rs可能需要直接链接到mongod</li><li>sh可能会增加分片</li></ol><h3 id="修改配置文件增加keyfile"><a href="#修改配置文件增加keyfile" class="headerlink" title="修改配置文件增加keyfile"></a>修改配置文件增加keyfile</h3><p>mongos、mongod、config 关闭实例，增加keyfile</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">security:<br>  keyFile: <span class="hljs-regexp">/home/m</span>ongodb<span class="hljs-regexp">/mongodata/</span>cfg/keyfile<br></code></pre></td></tr></table></figure><p>增加后，重启所有实例</p><h3 id="开启balancer"><a href="#开启balancer" class="headerlink" title="开启balancer"></a>开启balancer</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mongo</span> -u shclusteradmin -p changeme<span class="hljs-number">2</span> admin --port <span class="hljs-number">27000</span><br><span class="hljs-attribute">sh</span>.startBalancer()<br></code></pre></td></tr></table></figure><h3 id="测试权限"><a href="#测试权限" class="headerlink" title="测试权限"></a>测试权限</h3><p>副本集</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs vim">[mongodb@se122 logs]$ mongo -<span class="hljs-keyword">u</span> rsuseradmin -<span class="hljs-keyword">p</span> changeme1 admin --port <span class="hljs-number">27011</span><br>MongoDB <span class="hljs-keyword">shell</span> <span class="hljs-keyword">version</span>: <span class="hljs-number">3.2</span>.<span class="hljs-number">10</span><br>connecting <span class="hljs-keyword">to</span>: <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">27011</span>/admin<br>rs1:PRIMARY&gt; db.<span class="hljs-built_in">system</span>.users.<span class="hljs-keyword">find</span>().pretty()<br>&#123;<br><span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;admin.fred&quot;</span>,<br><span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;fred&quot;</span>,<br><span class="hljs-string">&quot;db&quot;</span> : <span class="hljs-string">&quot;admin&quot;</span>,<br><span class="hljs-string">&quot;credentials&quot;</span> : &#123;<br><span class="hljs-string">&quot;SCRAM-SHA-1&quot;</span> : &#123;<br><span class="hljs-string">&quot;iterationCount&quot;</span> : <span class="hljs-number">10000</span>,<br><span class="hljs-string">&quot;salt&quot;</span> : <span class="hljs-string">&quot;IWDku4hxN12fEwxEPpP8aw==&quot;</span>,<br><span class="hljs-string">&quot;storedKey&quot;</span> : <span class="hljs-string">&quot;6jkANel76XXtCvTz3fiIvC9vNMc=&quot;</span>,<br><span class="hljs-string">&quot;serverKey&quot;</span> : <span class="hljs-string">&quot;IsKKSA9+zRScpLZLkg3zeMyI5IU=&quot;</span><br>&#125;<br>&#125;,<br><span class="hljs-string">&quot;roles&quot;</span> : [<br>&#123;<br><span class="hljs-string">&quot;role&quot;</span> : <span class="hljs-string">&quot;userAdminAnyDatabase&quot;</span>,<br><span class="hljs-string">&quot;db&quot;</span> : <span class="hljs-string">&quot;admin&quot;</span><br>&#125;<br>]<br>&#125;<br><br>[mongodb@se122 logs]$ mongo -<span class="hljs-keyword">u</span> rsclusteradmin -<span class="hljs-keyword">p</span> changeme2 admin --port <span class="hljs-number">27011</span><br>MongoDB <span class="hljs-keyword">shell</span> <span class="hljs-keyword">version</span>: <span class="hljs-number">3.2</span>.<span class="hljs-number">10</span><br>connecting <span class="hljs-keyword">to</span>: <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">27011</span>/admin<br>Server <span class="hljs-built_in">has</span> startup warning<span class="hljs-variable">s:</span><br><span class="hljs-number">2016</span>-<span class="hljs-number">12</span>-<span class="hljs-number">13</span>T14:<span class="hljs-number">27</span>:<span class="hljs-number">52.966</span>+<span class="hljs-number">0800</span> I CONTROL  [initandlisten]<br><span class="hljs-number">2016</span>-<span class="hljs-number">12</span>-<span class="hljs-number">13</span>T14:<span class="hljs-number">27</span>:<span class="hljs-number">52.966</span>+<span class="hljs-number">0800</span> I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled <span class="hljs-keyword">is</span> <span class="hljs-string">&#x27;always&#x27;</span>.<br><span class="hljs-number">2016</span>-<span class="hljs-number">12</span>-<span class="hljs-number">13</span>T14:<span class="hljs-number">27</span>:<span class="hljs-number">52.966</span>+<span class="hljs-number">0800</span> I CONTROL  [initandlisten] **        We suggest setting it <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;never&#x27;</span><br><span class="hljs-number">2016</span>-<span class="hljs-number">12</span>-<span class="hljs-number">13</span>T14:<span class="hljs-number">27</span>:<span class="hljs-number">52.966</span>+<span class="hljs-number">0800</span> I CONTROL  [initandlisten]<br><span class="hljs-number">2016</span>-<span class="hljs-number">12</span>-<span class="hljs-number">13</span>T14:<span class="hljs-number">27</span>:<span class="hljs-number">52.966</span>+<span class="hljs-number">0800</span> I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/defrag <span class="hljs-keyword">is</span> <span class="hljs-string">&#x27;always&#x27;</span>.<br><span class="hljs-number">2016</span>-<span class="hljs-number">12</span>-<span class="hljs-number">13</span>T14:<span class="hljs-number">27</span>:<span class="hljs-number">52.966</span>+<span class="hljs-number">0800</span> I CONTROL  [initandlisten] **        We suggest setting it <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;never&#x27;</span><br><span class="hljs-number">2016</span>-<span class="hljs-number">12</span>-<span class="hljs-number">13</span>T14:<span class="hljs-number">27</span>:<span class="hljs-number">52.966</span>+<span class="hljs-number">0800</span> I CONTROL  [initandlisten]<br>rs1:PRIMARY&gt; rs.status()<br>&#123;<br><span class="hljs-string">&quot;set&quot;</span> : <span class="hljs-string">&quot;rs1&quot;</span>,<br><span class="hljs-string">&quot;date&quot;</span> : ISODate(<span class="hljs-string">&quot;2016-12-13T08:28:07.902Z&quot;</span>),<br><span class="hljs-string">&quot;myState&quot;</span> : <span class="hljs-number">1</span>,<br><span class="hljs-string">&quot;term&quot;</span> : NumberLong(<span class="hljs-number">19</span>),<br><span class="hljs-string">&quot;heartbeatIntervalMillis&quot;</span> : NumberLong(<span class="hljs-number">2000</span>),<br><span class="hljs-string">&quot;members&quot;</span> : [<br>&#123;<br><span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-number">0</span>,<br><span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;se122:27011&quot;</span>,<br><span class="hljs-string">&quot;health&quot;</span> : <span class="hljs-number">1</span>,<br><span class="hljs-string">&quot;state&quot;</span> : <span class="hljs-number">1</span>,<br><span class="hljs-string">&quot;stateStr&quot;</span> : <span class="hljs-string">&quot;PRIMARY&quot;</span>,<br><span class="hljs-string">&quot;uptime&quot;</span> : <span class="hljs-number">7215</span>,<br><span class="hljs-string">&quot;optime&quot;</span> : &#123;<br><span class="hljs-string">&quot;ts&quot;</span> : Timestamp(<span class="hljs-number">1481617664</span>, <span class="hljs-number">1</span>),<br><span class="hljs-string">&quot;t&quot;</span> : NumberLong(<span class="hljs-number">19</span>)<br>&#125;,<br><span class="hljs-string">&quot;optimeDate&quot;</span> : ISODate(<span class="hljs-string">&quot;2016-12-13T08:27:44Z&quot;</span>),<br><span class="hljs-string">&quot;electionTime&quot;</span> : Timestamp(<span class="hljs-number">1481610472</span>, <span class="hljs-number">1</span>),<br><span class="hljs-string">&quot;electionDate&quot;</span> : ISODate(<span class="hljs-string">&quot;2016-12-13T06:27:52Z&quot;</span>),<br><span class="hljs-string">&quot;configVersion&quot;</span> : <span class="hljs-number">1</span>,<br><span class="hljs-string">&quot;self&quot;</span> : true<br>&#125;<br>],<br><span class="hljs-string">&quot;ok&quot;</span> : <span class="hljs-number">1</span><br>&#125;<br></code></pre></td></tr></table></figure><p>分片</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs vim">[mongodb@se122 logs]$ mongo -<span class="hljs-keyword">u</span> shuseradmin -<span class="hljs-keyword">p</span> changeme1 admin --port <span class="hljs-number">27000</span><br>mongos&gt; db.<span class="hljs-built_in">system</span>.users.<span class="hljs-keyword">find</span>().pretty()<br>&#123;<br><span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;admin.ravi&quot;</span>,<br><span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;ravi&quot;</span>,<br><span class="hljs-string">&quot;db&quot;</span> : <span class="hljs-string">&quot;admin&quot;</span>,<br><span class="hljs-string">&quot;credentials&quot;</span> : &#123;<br><span class="hljs-string">&quot;SCRAM-SHA-1&quot;</span> : &#123;<br><span class="hljs-string">&quot;iterationCount&quot;</span> : <span class="hljs-number">10000</span>,<br><span class="hljs-string">&quot;salt&quot;</span> : <span class="hljs-string">&quot;hXA/YhP0rs4IIk/tkMA/mA==&quot;</span>,<br><span class="hljs-string">&quot;storedKey&quot;</span> : <span class="hljs-string">&quot;XYehp2s7c2KBf9xHeGxE2dxdpKY=&quot;</span>,<br><span class="hljs-string">&quot;serverKey&quot;</span> : <span class="hljs-string">&quot;Iq7zWR9iexZU8Of2WjE8X+Z4/14=&quot;</span><br>&#125;<br>&#125;,<br><span class="hljs-string">&quot;roles&quot;</span> : [<br>&#123;<br><span class="hljs-string">&quot;role&quot;</span> : <span class="hljs-string">&quot;clusterAdmin&quot;</span>,<br><span class="hljs-string">&quot;db&quot;</span> : <span class="hljs-string">&quot;admin&quot;</span><br>&#125;<br>]<br>&#125;<br><br>[mongodb@se122 logs]$ mongo -<span class="hljs-keyword">u</span> shclusteradmin -<span class="hljs-keyword">p</span> changeme2 admin --port <span class="hljs-number">27000</span><br>MongoDB <span class="hljs-keyword">shell</span> <span class="hljs-keyword">version</span>: <span class="hljs-number">3.2</span>.<span class="hljs-number">10</span><br>connecting <span class="hljs-keyword">to</span>: <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">27000</span>/admin<br>mongos&gt; <span class="hljs-keyword">sh</span>.status()<br>--- Sharding Status ---<br>  sharding <span class="hljs-keyword">version</span>: &#123;<br><span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-number">1</span>,<br><span class="hljs-string">&quot;minCompatibleVersion&quot;</span> : <span class="hljs-number">5</span>,<br><span class="hljs-string">&quot;currentVersion&quot;</span> : <span class="hljs-number">6</span>,<br><span class="hljs-string">&quot;clusterId&quot;</span> : ObjectId(<span class="hljs-string">&quot;582574de7ecb76cb2edff64e&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>认证库</p><p>在分片环境中我们使用mongos链接mongod实例获取数据，这个时候会用到认证库来认证数据</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs stylus">mongos&gt; db<span class="hljs-selector-class">.getSiblingDB</span>(<span class="hljs-string">&quot;admin&quot;</span>)<span class="hljs-selector-class">.dropUser</span>(<span class="hljs-string">&quot;test1&quot;</span>)<br>true<br>#清空之前的实验用户<br><br>db<span class="hljs-selector-class">.getSiblingDB</span>(<span class="hljs-string">&quot;admin&quot;</span>)<span class="hljs-selector-class">.createUser</span>(<br>  &#123;<br>    <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;test1&quot;</span>,<br>    <span class="hljs-string">&quot;pwd&quot;</span> : <span class="hljs-string">&quot;test1&quot;</span>,<br>    roles: <span class="hljs-selector-attr">[ &#123; <span class="hljs-string">&quot;role&quot;</span> : <span class="hljs-string">&quot;dbOwner&quot;</span>, <span class="hljs-string">&quot;db&quot;</span> : <span class="hljs-string">&quot;wangxi&quot;</span> &#125; ]</span><br>  &#125;<br>)<br>#在mongos建立用户，这个数据最终会放到config里<br><br><span class="hljs-selector-attr">[mongodb@se122 logs]</span>$ mongo -u test1 -<span class="hljs-selector-tag">p</span> test1 wangxi --port <span class="hljs-number">27000</span> --authenticationDatabase=admin<br>MongoDB shell version: <span class="hljs-number">3.2</span>.<span class="hljs-number">10</span><br>connecting to: <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">27000</span>/wangxi<br>mongos&gt; db<span class="hljs-selector-class">.test</span><span class="hljs-selector-class">.findOne</span>()<br>&#123;<br><span class="hljs-string">&quot;_id&quot;</span> : ObjectId(<span class="hljs-string">&quot;583ce0973e14696294e0bbcf&quot;</span>),<br><span class="hljs-string">&quot;uid&quot;</span> : <span class="hljs-number">3</span>,<br><span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Ale&quot;</span>,<br><span class="hljs-string">&quot;phone&quot;</span> : <span class="hljs-string">&quot;+55 53 1234 4321&quot;</span>,<br><span class="hljs-string">&quot;timestamp&quot;</span> : ISODate(<span class="hljs-string">&quot;2016-11-29T01:57:57.429Z&quot;</span>)<br>&#125;<br>#通过mongos获取用户数据<br></code></pre></td></tr></table></figure><h3 id="权限说明"><a href="#权限说明" class="headerlink" title="权限说明"></a>权限说明</h3><ul><li>数据库用户角色（user）</li></ul><p>read和readWrite，表示用户具有指定数据库的读或者写角色。这两角色比较基本，能对数据库进行基本的读写操作，对于普通的application而言，可以限定用户为此角色</p><ul><li><p>数据库管理员角色（admin）</p><ol><li>userAdmin：“用户管理员”，可以对指定的数据库，创建用户、修改用户的roles；这种角色，只能管理用户，不能访问数据库的数据。</li><li>dbAdmin：“数据库管理员”，可以对指定的数据库，进行创建索引、schema调整、统计信息搜集等，比如“dbStats”、“collStats”、“createCollection”、“createIndex”等；但是它不能创建用户和role</li><li>dbOwner：“数据库持有者”，继承“readWrite”、“dbAdmin”、“userAdmin”三种角色。通常我们必须为每个数据库创建至少一个“userAdmin”或者“dbOwner”权限的管理员用户，以便管理普通的“user”用户。</li></ol></li><li><p>集群管理员角色（cluster admin)</p><p>用于管理集群（replica set和sharding cluster）系统和数据库。如果你的架构是集群模式，数据库至少有一个cluster管理员角色的用户。</p><ol><li>clusterManager：“集群管理员”，可以访问config、local数据库，这对sharding、replica set都很重要，比如sharding的维护方法“enableSharding”、“addShard”、“dbStats”，以及“replica set”中的维护方法“replSetConfigure”、“replSetGetStatus”等等。我们可以使用此角色的用户调整集群节点的部署和查看一些数据库状态。</li><li>hostManager：“host管理员”</li><li>clusterAdmin：“集群管理员”，继承了“clusterManager”、“hostManager”、“clusterMonitor”等角色，是集群管理的最高角色；通常我们只需要给一个sharding database指定一个此角色的用户即可。</li></ol></li><li><p>所有数据库角色（All-Databases)</p><p>即此角色不限定在某个数据库上，它限定在所有的数据库上；如果一个用户需要具有所有数据库的权限，传统的方式就是在每个数据库下创建一个user，繁琐而且易于疏漏，All-Databases提供了一种便捷的手段，创建这样角色的用户时不需要指定数据库。</p><ol><li>readAnyDatabase、readWriteAnyDatabase：对所有数据库具有读、读写角色。</li><li>userAdminAnyDatabase：是所有数据库的用户管理员。</li><li>dbAdminAnyDatabase：是所有数据库的管理员。</li></ol></li><li><p>超级用户权限</p><p>root角色是一个超级角色，此角色的用户具有所有的操作权限，是“readWriteAnyDatabase”、“dbAdminAnyDatabase”、“userAdminAnyDatabase”、“clusterAdmin”角色的组合。对于开发人员而言，为了维护的便捷性，可以给mongodb（或者集群）创建一个root用户。</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>mongodb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Oracle并发查询占用大量process数据库无法登陆</title>
    <link href="/2018/11/13/Oracle%E5%B9%B6%E5%8F%91%E6%9F%A5%E8%AF%A2%E5%8D%A0%E7%94%A8%E5%A4%A7%E9%87%8Fprocess%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A0%E6%B3%95%E7%99%BB%E9%99%86/"/>
    <url>/2018/11/13/Oracle%E5%B9%B6%E5%8F%91%E6%9F%A5%E8%AF%A2%E5%8D%A0%E7%94%A8%E5%A4%A7%E9%87%8Fprocess%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A0%E6%B3%95%E7%99%BB%E9%99%86/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><ol><li>数据库无法登陆</li><li>查看日志ORA-00020: maximum number of processes (300) exceeded</li><li>ps -ef 查看发现大量p开头的session（p代表并行查询parallel）</li></ol><h3 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h3><ol><li>修改processes，需要重启不可行</li><li>处理大量并发sql</li></ol><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><p>查找那些sid使用并行查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> qcsid,<span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> V$PX_SESSION <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> qcsid<br></code></pre></td></tr></table></figure><p><code>V$PX_SESSION</code> contains information about the sessions running parallel execution.</p><table><thead><tr><th>Column</th><th>Datatype</th><th>Description</th></tr></thead><tbody><tr><td><code>SADDR</code></td><td><code>RAW(4/8)</code></td><td>Session address</td></tr><tr><td><code>SID</code></td><td><code>NUMBER</code></td><td>Session identifier</td></tr><tr><td><code>SERIAL#</code></td><td><code>NUMBER</code></td><td>Session serial number</td></tr><tr><td><code>QCSID</code></td><td><code>NUMBER</code></td><td>Session identifier of the parallel coordinator</td></tr><tr><td><code>QCSERIAL#</code></td><td><code>NUMBER</code></td><td>Session serial number of the parallel coordinator</td></tr><tr><td><code>QCINST_ID</code></td><td><code>NUMBER</code></td><td>Instance number on which the parallel coordinator is running</td></tr><tr><td><code>SERVER_GROUP</code></td><td><code>NUMBER</code></td><td>The logical group of servers to which this cluster database process belongs</td></tr><tr><td><code>SERVER_SET</code></td><td><code>NUMBER</code></td><td>The logical set of servers to which this cluster database process belongs. A single server group will have at most two server sets.</td></tr><tr><td><code>SERVER#</code></td><td><code>NUMBER</code></td><td>The logical number of the cluster database process within a server set</td></tr><tr><td><code>DEGREE</code></td><td><code>NUMBER</code></td><td>The degree of parallelism being used by the server set</td></tr><tr><td><code>REQ_DEGREE</code></td><td><code>NUMBER</code></td><td>The degree of parallelism that was requested by the user when the statement was issued and prior to any resource, multi-user, or load balancing reductions</td></tr></tbody></table><p>使用sid查找有问题的session相关信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> s.<span class="hljs-operator">*</span>,<br>       Decode(<span class="hljs-built_in">upper</span>(wait_class), <span class="hljs-string">&#x27;IDLE&#x27;</span>, <span class="hljs-number">0</span>,<br>                                 seconds_in_wait) seconds_in_wait_nodidle,<br>       <span class="hljs-keyword">case</span><br>         <span class="hljs-keyword">when</span> ( sql_id <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span> )<br>              <span class="hljs-keyword">and</span> ( prev_sql_id <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span> ) <span class="hljs-keyword">then</span> <span class="hljs-keyword">NULL</span><br>         <span class="hljs-keyword">else</span> ( <span class="hljs-string">&#x27;Active SQL: &#x27;</span><br>                <span class="hljs-operator">||</span> nvl((<span class="hljs-keyword">select</span> <span class="hljs-built_in">max</span>(sql_text)<br>                        <span class="hljs-keyword">from</span>   gv$<span class="hljs-keyword">SQL</span><br>                        <span class="hljs-keyword">where</span>  ( sql_id <span class="hljs-operator">=</span> s.sql_id )), <span class="hljs-string">&#x27;?&#x27;</span>)<br>                <span class="hljs-operator">||</span> chr(<span class="hljs-number">13</span>)<br>                <span class="hljs-operator">||</span>chr(<span class="hljs-number">10</span>)<br>                <span class="hljs-operator">||</span><span class="hljs-string">&#x27;Prev. SQL: &#x27;</span><br>                <span class="hljs-operator">||</span> nvl((<span class="hljs-keyword">select</span> <span class="hljs-built_in">max</span>(sql_text)<br>                        <span class="hljs-keyword">from</span>   v$<span class="hljs-keyword">SQL</span><br>                        <span class="hljs-keyword">where</span>  ( sql_id <span class="hljs-operator">=</span> s.prev_sql_id )), <span class="hljs-string">&#x27;?&#x27;</span>) )<br>       <span class="hljs-keyword">end</span> SQLINFO<br><span class="hljs-keyword">from</span>   gv$session s<br><span class="hljs-keyword">where</span> s.SCHEMANAME <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;SYS&#x27;</span><br><span class="hljs-keyword">and</span> S.SID <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;287&#x27;</span><br></code></pre></td></tr></table></figure><p>使用执行计划等工具对语句进行分析。kill有问题的session</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> plan_table_output <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">TABLE</span>(DBMS_XPLAN.DISPLAY_CURSOR(<span class="hljs-string">&#x27;c8m5td2tmpcxg&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;advanced  ALLSTATS LAST&#x27;</span>))<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>oracle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mongodb同步慢分析</title>
    <link href="/2018/11/13/Mongodb%E5%90%8C%E6%AD%A5%E6%85%A2%E5%88%86%E6%9E%90/"/>
    <url>/2018/11/13/Mongodb%E5%90%8C%E6%AD%A5%E6%85%A2%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<p>转自：<a href="https://yq.aliyun.com/articles/47336?spm=5176.8091938.0.0.WPuhZ0">https://yq.aliyun.com/articles/47336?spm=5176.8091938.0.0.WPuhZ0</a></p><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>最近生产环境出现多次Primary写入QPS太高，导致Seconary的同步无法跟上的问题（Secondary上的最新oplog时间戳比Primary上最旧oplog时间戳小），使得Secondary变成RECOVERING状态，这时需要人工介入处理，向Secondary发送resync命令，让Secondary重新全量同步一次。</p><h2 id="同步过程"><a href="#同步过程" class="headerlink" title="同步过程"></a>同步过程</h2><p>下图是MongoDB数据同步的流程</p><p><a href="http://77g6ez.com1.z0.glb.clouddn.com/sync.png"><img src="http://77g6ez.com1.z0.glb.clouddn.com/sync.png" alt="img"></a></p><p>Primary上的写入会记录oplog，存储到一个固定大小的<a href="https://docs.mongodb.com/manual/core/capped-collections/?spm=5176.100239.blogcont47336.8.a8boCx">capped collection</a>里，Secondary主动从Primary上拉取oplog并重放应用到自身，以保持数据与Primary节点上一致。</p><h3 id="initial-sync"><a href="#initial-sync" class="headerlink" title="initial sync"></a>initial sync</h3><p>新节点加入（或者主动向Secondary发送resync）时，Secondary会先进行一次initial sync，即全量同步，遍历Primary上的所有DB的所有集合，将数据拷贝到自身节点，然后读取『全量同步开始到结束时间段内』的oplog并重放。全量同步不是本文讨论的重点，将不作过多的介绍。</p><h3 id="tailing-oplog"><a href="#tailing-oplog" class="headerlink" title="tailing oplog"></a>tailing oplog</h3><p>全量同步结束后，Secondary就开始从结束时间点建立tailable cursor，不断的从同步源拉取oplog并重放应用到自身，这个过程并不是由一个线程来完成的，mongodb为了提升同步效率，将拉取oplog以及重放oplog分到了不同的线程来执行。</p><ul><li>producer thread，这个线程不断的从同步源上拉取oplog，并加入到一个BlockQueue的队列里保存着，BlockQueue最大存储240MB的oplog数据，当超过这个阈值时，就必须等到oplog被replBatcher消费掉才能继续拉取。</li><li>replBatcher thread，这个线程负责逐个从producer thread的队列里取出oplog，并放到自己维护的队列里，这个队列最多允许5000个元素，并且元素总大小不超过512MB，当队列满了时，就需要等待oplogApplication消费掉。</li><li>oplogApplication会取出replBatch thread当前队列的所有元素，并将元素根据docId（如果存储引擎不支持文档锁，则根据集合名称）分散到不同的replWriter线程，replWriter线程将所有的oplog应用到自身；等待所有oplog都应用完毕，oplogApplication线程将所有的oplog顺序写入到local.oplog.rs集合。</li></ul><p>producer的buffer和apply线程的统计信息都可以通过<strong>db.serverStatus().metrics.repl</strong>来查询到，在测试过程中，向Primary模拟约10000 qps的写入，观察Secondary上的同步，写入速率远小于Primary，大致只有3000左右的qps，同时观察到<code>producer的buffer很快就达到饱和，可以判断出oplog重放的线程跟不上</code>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css">replset:PRIMARY&gt; db.<span class="hljs-built_in">serverStatus</span>().metrics.repl.buffer<br>&#123;<br><span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-built_in">NumberLong</span>(<span class="hljs-number">0</span>),<br><span class="hljs-string">&quot;maxSizeBytes&quot;</span> : <span class="hljs-number">268435456</span>, <span class="hljs-number">#256</span>MB<br><span class="hljs-string">&quot;sizeBytes&quot;</span> : <span class="hljs-built_in">NumberLong</span>(<span class="hljs-number">0</span>) <br>&#125;<br></code></pre></td></tr></table></figure><p>默认情况下，Secondary采用16个replWriter线程来重放oplog，可通过启动时设置replWriterThreadCount参数来定制线程数，当提升线程数到32时，同步的情况大大改观，主备写入的qps基本持平，主备上数据同步的延时控制在1s以内，进一步验证了上述结论。</p><h2 id="改进思路"><a href="#改进思路" class="headerlink" title="改进思路"></a>改进思路</h2><p>如果因Primary上的写入qps很高，经常出现Secondary同步无法追上的问题，可以考虑以下改进思路</p><ul><li>配置更高的replWriterThreadCount，Secondary上加速oplog重放，代价是更高的内存开销</li><li>使用更大的oplog，可按照官方教程<a href="https://docs.mongodb.com/v3.0/tutorial/change-oplog-size/?spm=5176.100239.blogcont47336.9.a8boCx">修改oplog的大小</a>，<a href="https://www.aliyun.com/product/mongodb/?spm=5176.100239.blogcont47336.10.a8boCx">阿里云MongoDB数据库</a>增加了patch，能做到在线修改oplog的大小。</li><li>将writeOpsToOplog步骤分散到多个replWriter线程来并发执行，这个是官方目前在考虑的策略之一，参考<a href="https://jira.mongodb.org/browse/SERVER-18908?spm=5176.100239.blogcont47336.11.a8boCx">Secondaries unable to keep up with primary under WiredTiger</a></li></ul><p>附修改replWriterThreadCount参数的方法，具体应该调整到多少跟Primary上的写入负载如写入qps、平均文档大小等相关，并没有统一的值。</p><ol><li><p>通过mongod命令行来指定</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">mongod --setParameter <span class="hljs-attribute">replWriterThreadCount</span>=32<br></code></pre></td></tr></table></figure></li><li><p>在配置文件中指定</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">setParameter:</span><br><span class="hljs-symbol">    replWriterThreadCount:</span> <span class="hljs-number">32</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://docs.mongodb.com/manual/core/capped-collections/?spm=5176.100239.blogcont47336.12.a8boCx">capped collection</a></li><li><a href="https://jira.mongodb.org/browse/SERVER-18908?spm=5176.100239.blogcont47336.13.a8boCx">SERVER-18908</a></li><li><a href="https://docs.mongodb.com/v3.0/tutorial/change-oplog-size/?spm=5176.100239.blogcont47336.14.a8boCx">修改oplog的大小</a></li><li><a href="https://www.aliyun.com/product/mongodb/?spm=5176.100239.blogcont47336.15.a8boCx">阿里云MongoDB数据库</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>mongodb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mongodb幂等性的代价</title>
    <link href="/2018/11/13/Mongodb%E5%B9%82%E7%AD%89%E6%80%A7%E7%9A%84%E4%BB%A3%E4%BB%B7/"/>
    <url>/2018/11/13/Mongodb%E5%B9%82%E7%AD%89%E6%80%A7%E7%9A%84%E4%BB%A3%E4%BB%B7/</url>
    
    <content type="html"><![CDATA[<h3 id="幂等性的代价"><a href="#幂等性的代价" class="headerlink" title="幂等性的代价"></a>幂等性的代价</h3><p>MongoDB用于同步的oplog具有一个重要的『幂等』特性，也就是说，一条oplog在备上重放多次，得到的结果跟重放一次结果是一样的，这个特性简化了同步的实现，Secondary不需要有专门的逻辑去保证一条oplog在备上『必须仅能重放』一次。</p><p>为了保证幂等性，记录oplog时，通常需要对写入的请求做一下转换，举个例子，某文档x字段当前值为100，用户向Primary发送一条{inc: {x: 1}}，记录oplog时会转化为一条{inc: {x: 1}}，记录oplog时会转化为一条{set: {x: 101}的操作，才能保证幂等性。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json">replset:PRIMARY&gt; db.coll.insert(&#123;<span class="hljs-attr">&quot;x&quot;</span>:[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]&#125;)<br>WriteResult(&#123; <span class="hljs-attr">&quot;nInserted&quot;</span> : <span class="hljs-number">1</span> &#125;)<br>replset:PRIMARY&gt; db.coll.find()<br>&#123; <span class="hljs-attr">&quot;_id&quot;</span> : ObjectId(<span class="hljs-string">&quot;5809d4d5d17cdb2e8ed16a6d&quot;</span>), <span class="hljs-attr">&quot;x&quot;</span> : [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span> ] &#125;<br></code></pre></td></tr></table></figure><h3 id="push追加数组结尾"><a href="#push追加数组结尾" class="headerlink" title="push追加数组结尾"></a>push追加数组结尾</h3><p>在数组尾部push 2个元素，查看oplog发现push操作被转换为了push操作被转换为了set操作（设置数组指定位置的元素为某个值）。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs json">replset:PRIMARY&gt; db.coll.update(&#123;&#125;, &#123;$push: &#123;x: &#123; $each: [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>] &#125;&#125;&#125;)<br>WriteResult(&#123; <span class="hljs-attr">&quot;nMatched&quot;</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">&quot;nUpserted&quot;</span> : <span class="hljs-number">0</span>, <span class="hljs-attr">&quot;nModified&quot;</span> : <span class="hljs-number">1</span> &#125;)<br><br>replset:PRIMARY&gt; db.getSiblingDB(<span class="hljs-string">&quot;local&quot;</span>).oplog.rs.find().sort(&#123;$natural: <span class="hljs-number">-1</span>&#125;).limit(<span class="hljs-number">1</span>).pretty()<br>&#123;<br><span class="hljs-attr">&quot;ts&quot;</span> : Timestamp(<span class="hljs-number">1477039431</span>, 1),<br><span class="hljs-attr">&quot;t&quot;</span> : NumberLong(<span class="hljs-number">1</span>),<br><span class="hljs-attr">&quot;h&quot;</span> : NumberLong(<span class="hljs-string">&quot;-6218524993105847165&quot;</span>),<br><span class="hljs-attr">&quot;v&quot;</span> : <span class="hljs-number">2</span>,<br><span class="hljs-attr">&quot;op&quot;</span> : <span class="hljs-string">&quot;u&quot;</span>,<br><span class="hljs-attr">&quot;ns&quot;</span> : <span class="hljs-string">&quot;wangxi.coll&quot;</span>,<br><span class="hljs-attr">&quot;o2&quot;</span> : &#123;<br><span class="hljs-attr">&quot;_id&quot;</span> : ObjectId(<span class="hljs-string">&quot;5809d4d5d17cdb2e8ed16a6d&quot;</span>)<br>&#125;,<br><span class="hljs-attr">&quot;o&quot;</span> : &#123;<br><span class="hljs-attr">&quot;$set&quot;</span> : &#123;<br><span class="hljs-attr">&quot;x.4&quot;</span> : <span class="hljs-number">4</span>,    <br><span class="hljs-attr">&quot;x.5&quot;</span> : <span class="hljs-number">5</span> <br>&#125;<br>&#125;<br>&#125;<br># $push转换为带具体位置的$set<br></code></pre></td></tr></table></figure><h3 id="push修改数组头部"><a href="#push修改数组头部" class="headerlink" title="push修改数组头部"></a>push修改数组头部</h3><p>push转换为带具体位置的$set开销上也差不多，但接下来再看看往数组的头部添加2个元素</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs json">replset:PRIMARY&gt; db.coll.update(&#123;&#125;, &#123;$push: &#123;x: &#123; $each: [<span class="hljs-number">6</span>, <span class="hljs-number">7</span>], $position: <span class="hljs-number">0</span> &#125;&#125;&#125;)<br>WriteResult(&#123; <span class="hljs-attr">&quot;nMatched&quot;</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">&quot;nUpserted&quot;</span> : <span class="hljs-number">0</span>, <span class="hljs-attr">&quot;nModified&quot;</span> : <span class="hljs-number">1</span> &#125;)<br>replset:PRIMARY&gt; db.coll.find()<br>&#123; <span class="hljs-attr">&quot;_id&quot;</span> : ObjectId(<span class="hljs-string">&quot;5809d4d5d17cdb2e8ed16a6d&quot;</span>), <span class="hljs-attr">&quot;x&quot;</span> : [ <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> ] &#125;<br><br>replset:PRIMARY&gt; db.getSiblingDB(<span class="hljs-string">&quot;local&quot;</span>).oplog.rs.find().sort(&#123;$natural: <span class="hljs-number">-1</span>&#125;).limit(<span class="hljs-number">1</span>).pretty()<br>&#123;<br><span class="hljs-attr">&quot;ts&quot;</span> : Timestamp(<span class="hljs-number">1477039744</span>, 1),<br><span class="hljs-attr">&quot;t&quot;</span> : NumberLong(<span class="hljs-number">1</span>),<br><span class="hljs-attr">&quot;h&quot;</span> : NumberLong(<span class="hljs-string">&quot;-7873782335047957042&quot;</span>),<br><span class="hljs-attr">&quot;v&quot;</span> : <span class="hljs-number">2</span>,<br><span class="hljs-attr">&quot;op&quot;</span> : <span class="hljs-string">&quot;u&quot;</span>,<br><span class="hljs-attr">&quot;ns&quot;</span> : <span class="hljs-string">&quot;wangxi.coll&quot;</span>,<br><span class="hljs-attr">&quot;o2&quot;</span> : &#123;<br><span class="hljs-attr">&quot;_id&quot;</span> : ObjectId(<span class="hljs-string">&quot;5809d4d5d17cdb2e8ed16a6d&quot;</span>)<br>&#125;,<br><span class="hljs-attr">&quot;o&quot;</span> : &#123;<br><span class="hljs-attr">&quot;$set&quot;</span> : &#123;<br><span class="hljs-attr">&quot;x&quot;</span> : [<br><span class="hljs-number">6</span>,<br><span class="hljs-number">7</span>,<br><span class="hljs-number">1</span>,<br><span class="hljs-number">2</span>,<br><span class="hljs-number">3</span>,<br><span class="hljs-number">4</span>,<br><span class="hljs-number">4</span>,<br><span class="hljs-number">5</span><br>]<br>&#125;<br>&#125;<br>&#125;<br># oplog里会转换成$set数组的全部内容，$pull, $addToSet同理<br></code></pre></td></tr></table></figure><p>可以发现，当向数组的头部添加元素时，oplog里的set操作不再是设置数组某个位置的值（因为基本所有的元素位置都调整了），而是set操作不再是设置数组某个位置的值（因为基本所有的元素位置都调整了），而是set数组最终的结果，即整个数组的内容都要写入oplog。当push操作指定了slice或者slice或者sort参数时，oplog的记录方式也是一样的，会将整个数组的内容作为$set的参数。</p><p>pull,pull,addToSet等更新操作符也是类似，更新数组后，oplog里会转换成$set数组的最终内容，才能保证幂等性。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h3><p> <a href="https://yq.aliyun.com/articles/52404?spm=5176.8091938.0.0.6wi7eh">MongoDB Secondary同步慢问题分析</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>mongodb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Oracle多份路径备份</title>
    <link href="/2018/11/13/Oracle%E5%A4%9A%E4%BB%BD%E8%B7%AF%E5%BE%84%E5%A4%87%E4%BB%BD/"/>
    <url>/2018/11/13/Oracle%E5%A4%9A%E4%BB%BD%E8%B7%AF%E5%BE%84%E5%A4%87%E4%BB%BD/</url>
    
    <content type="html"><![CDATA[<h4 id="建立备份目录"><a href="#建立备份目录" class="headerlink" title="建立备份目录"></a>建立备份目录</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">cd</span> /backup<br><span class="hljs-keyword">mkdir</span> data rman logs <span class="hljs-keyword">arch</span><br></code></pre></td></tr></table></figure><h4 id="配置rman"><a href="#配置rman" class="headerlink" title="配置rman"></a>配置rman</h4><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ada">rman target /<br><br>CONFIGURE DATAFILE BACKUP COPIES <span class="hljs-keyword">FOR</span> DEVICE <span class="hljs-keyword">TYPE</span> <span class="hljs-type">DISK </span>TO <span class="hljs-number">2</span>;<br>CONFIGURE ARCHIVELOG BACKUP COPIES <span class="hljs-keyword">FOR</span> DEVICE <span class="hljs-keyword">TYPE</span> <span class="hljs-type">DISK </span>TO <span class="hljs-number">2</span>;<br></code></pre></td></tr></table></figure><h4 id="配置rman-backup-twoaddr-sh"><a href="#配置rman-backup-twoaddr-sh" class="headerlink" title="配置rman_backup_twoaddr.sh"></a>配置rman_backup_twoaddr.sh</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/ksh</span><br>export LANG=en_US<br>BACKUP_DATE=`date +%d`<br>RMAN_LOG_FILE=/opt/backup/logs/rmanlog`date +%Y%m%d`.out<br>TODAY=`date`<br>USER=`id|cut -d &quot;(&quot; -f2|cut -d &quot;)&quot; -f1`<br>echo &quot;-----------------$TODAY-------------------&quot;&gt;$RMAN_LOG_FILE<br>ORACLE_HOME=/opt/ora10g/db_1<br>export ORACLE_HOME<br>RMAN=$ORACLE_HOME/bin/rman<br>export RMAN<br>ORACLE_SID=zmedi<br>export ORACLE_SID<br>ORACLE_USER=oracle<br>export ORACLE_USER<br><br>echo &quot;ORACLE_SID: $ORACLE_SID&quot;&gt;&gt;$RMAN_LOG_FILE<br>echo &quot;ORACLE_HOME:$ORACLE_HOME&quot;&gt;&gt;$RMAN_LOG_FILE<br>echo &quot;ORACLE_USER:$ORACLE_USER&quot;&gt;&gt;$RMAN_LOG_FILE<br>echo &quot;==========================================&quot;&gt;&gt;$RMAN_LOG_FILE<br>echo &quot;BACKUP DATABASE BEGIN......&quot;&gt;&gt;$RMAN_LOG_FILE<br>echo &quot;                   &quot;&gt;&gt;$RMAN_LOG_FILE<br>chmod 666 $RMAN_LOG_FILE<br><br>WEEK_DAILY=`date +%a`<br>case  &quot;$WEEK_DAILY&quot; in<br>       &quot;Mon&quot;)<br>            BAK_LEVEL=2<br>            ;;<br>       &quot;Tue&quot;)<br>            BAK_LEVEL=2<br>            ;;<br>       &quot;Wed&quot;)<br>            BAK_LEVEL=2<br>            ;;<br>       &quot;Thu&quot;)<br>            BAK_LEVEL=1<br>            ;;<br>       &quot;Fri&quot;)<br>            BAK_LEVEL=2<br>            ;;<br>       &quot;Sat&quot;)<br>            BAK_LEVEL=2<br>            ;;<br>       &quot;Sun&quot;)<br>            BAK_LEVEL=0<br>            ;;<br>       &quot;*&quot;)<br>            BAK_LEVEL=error<br>esac<br><br>export BAK_LEVEL=$BAK_LEVEL<br>echo &quot;Today is : $WEEK_DAILY  incremental level= $BAK_LEVEL&quot;&gt;&gt;$RMAN_LOG_FILE<br><br>RUN_STR=&quot;<br>BAK_LEVEL=$BAK_LEVEL<br>export BAK_LEVEL<br>ORACLE_HOME=$ORACLE_HOME<br>export ORACLE_HOME<br>ORACLE_SID=$ORACLE_SID<br>export ORACLE_SID<br><span class="hljs-meta">$</span><span class="bash">RMAN nocatalog TARGET / msglog <span class="hljs-variable">$RMAN_LOG_FILE</span> append &lt;&lt;<span class="hljs-string">EOF</span></span><br>run<br>&#123;<br>allocate channel c1 type disk MAXPIECESIZE=64G;<br>allocate channel c2 type disk MAXPIECESIZE=64G;<br>allocate channel c3 type disk MAXPIECESIZE=64G;<br>allocate channel c4 type disk MAXPIECESIZE=64G;<br>backup as compressed backupset incremental level= $BAK_LEVEL  skip inaccessible  <br>Database format=&#x27;/opt/backup/data/lev&quot;$BAK_LEVEL&quot;_%d_%U&#x27;,&#x27;/opt/nfsbackup/246zgwdb/rmanbackup/data/lev&quot;$BAK_LEVEL&quot;_%d_%U&#x27; tag=&#x27;lev&quot;$BAK_LEVEL&quot;&#x27;<br>plus archivelog format=&#x27;/opt/backup/data/arch_%d_%U&#x27;,&#x27;/opt/nfsbackup/246zgwdb/rmanbackup/data/arch_%d_%U&#x27; delete input;<br>release channel c1;<br>release channel c2;<br>release channel c3;<br>release channel c4;<br>&#125;<br>allocate channel for maintenance device type disk;<br>report obsolete;<br>delete noprompt obsolete;<br>crosscheck backup;<br>delete noprompt expired backup;<br>list backup summary;<br>release channel;<br>EOF<br>&quot;<br><span class="hljs-meta"> #</span><span class="bash"><span class="hljs-string"> Initiate the command string</span></span><br><br>if [ &quot;$CUSER&quot; = &quot;root&quot; ]<br>then<br>    echo &quot;Root Command String: $RUN_STR&quot; &gt;&gt; $RMAN_LOG_FILE    <br>    su - $ORACLE_USER -c &quot;$RUN_STR&quot; &gt;&gt; $RMAN_LOG_FILE<br>    RSTAT=$?<br>else<br>    echo &quot;User Command String: $RUN_STR&quot; &gt;&gt; $RMAN_LOG_FILE    <br>    /bin/sh -c &quot;$RUN_STR&quot; &gt;&gt; $RMAN_LOG_FILE<br>    RSTAT=$?<br>fi<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"><span class="hljs-string"> ---------------------------------------------------------------------------</span></span><br><span class="hljs-meta">#</span><span class="bash"><span class="hljs-string"> Log the completion of this script.</span></span><br><span class="hljs-meta">#</span><span class="bash"><span class="hljs-string"> ---------------------------------------------------------------------------</span></span><br><br>if [ &quot;$RSTAT&quot; = &quot;0&quot; ]<br>then<br>    LOGMSG=&quot;ended successfully&quot;<br>else<br>    LOGMSG=&quot;ended in error&quot;<br>fi<br>echo &gt;&gt; $RMAN_LOG_FILE<br>echo Script $0 &gt;&gt; $RMAN_LOG_FILE<br>echo ==== $LOGMSG on `date` ==== &gt;&gt; $RMAN_LOG_FILE<br>echo &gt;&gt; $RMAN_LOG_FILE<br>exit $RSTAT<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>oracle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MongoDB Manage Sharded Cluster Balancer</title>
    <link href="/2018/11/13/MongoDB-Manage-Sharded-Cluster-Balancer/"/>
    <url>/2018/11/13/MongoDB-Manage-Sharded-Cluster-Balancer/</url>
    
    <content type="html"><![CDATA[<p><a href="https://docs.mongodb.org/manual/tutorial/manage-sharded-cluster-balancer/">https://docs.mongodb.org/manual/tutorial/manage-sharded-cluster-balancer/</a></p><h4 id="Check-the-Balancer-State"><a href="#Check-the-Balancer-State" class="headerlink" title="Check the Balancer State"></a>Check the Balancer State</h4><p>The following command checks if the balancer is enabled (i.e. that the balancer is allowed to run). The command does not check if the balancer is active (i.e. if it is actively balancing chunks).</p><p>To see if the balancer is enabled in your cluster, issue the following command, which returns a boolean:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">sh.getBalancerState()<br></code></pre></td></tr></table></figure><h4 id="Check-the-Balancer-Lock"><a href="#Check-the-Balancer-Lock" class="headerlink" title="Check the Balancer Lock"></a>Check the Balancer Lock</h4><p>To see if the balancer process is active in your cluster, do the following:</p><p>Connect to any mongos in the cluster using the mongo shell.<br>Issue the following command to switch to the Config Database:<br>use config<br>Use the following query to return the balancer lock:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">db<span class="hljs-selector-class">.locks</span><span class="hljs-selector-class">.find</span>( &#123; _id : <span class="hljs-string">&quot;balancer&quot;</span> &#125; )<span class="hljs-selector-class">.pretty</span>()<br></code></pre></td></tr></table></figure><h4 id="Schedule-the-Balancing-Window"><a href="#Schedule-the-Balancing-Window" class="headerlink" title="Schedule the Balancing Window"></a>Schedule the Balancing Window</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json">use config<br>sh.setBalancerState( <span class="hljs-literal">true</span> )<br>db.settings.update(<br>   &#123; _id: <span class="hljs-string">&quot;balancer&quot;</span> &#125;,<br>   &#123; $set: &#123; activeWindow : &#123; start: <span class="hljs-string">&quot;23:00&quot;</span>, stop: <span class="hljs-string">&quot;6:00&quot;</span> &#125; &#125; &#125;,<br>   &#123; upsert: <span class="hljs-literal">true</span> &#125;<br>)<br></code></pre></td></tr></table></figure><h4 id="Remove-a-Balancing-Window-Schedule"><a href="#Remove-a-Balancing-Window-Schedule" class="headerlink" title="Remove a Balancing Window Schedule"></a>Remove a Balancing Window Schedule</h4><p>If you have set the balancing window and wish to remove the schedule so that the balancer is always running, issue the following sequence of operations:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json">use config<br>db.settings.update(&#123; _id : <span class="hljs-string">&quot;balancer&quot;</span> &#125;, &#123; $unset : &#123; activeWindow : <span class="hljs-literal">true</span> &#125; &#125;)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>mongodb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MongoDB执行计划解读</title>
    <link href="/2018/11/13/MongoDB%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92%E8%A7%A3%E8%AF%BB/"/>
    <url>/2018/11/13/MongoDB%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92%E8%A7%A3%E8%AF%BB/</url>
    
    <content type="html"><![CDATA[<h3 id="现版本explain有三种模式，分别如下："><a href="#现版本explain有三种模式，分别如下：" class="headerlink" title="现版本explain有三种模式，分别如下："></a>现版本explain有三种模式，分别如下：</h3><ul><li>queryPlanner</li><li>executionStats</li><li>allPlansExecution</li></ul><h4 id="IndexFilter"><a href="#IndexFilter" class="headerlink" title="IndexFilter"></a>IndexFilter</h4><p>IndexFilter决定了查询优化器对于某一类型的查询将如何使用index，indexFilter仅影响查询优化器对于该类查询可以用尝试哪些index的执行计划分析，查询优化器还是根据分析情况选择最优计划。</p><blockquote><p><a href="http://docs.mongodb.org/manual/reference/command/planCacheSetFilter/#dbcmd.planCacheSetFilter">http://docs.mongodb.org/manual/reference/command/planCacheSetFilter/#dbcmd.planCacheSetFilter</a></p></blockquote><h4 id="Stage的意义"><a href="#Stage的意义" class="headerlink" title="Stage的意义"></a>Stage的意义</h4><p>如explain.queryPlanner.winningPlan.stage和explain.queryPlanner.winningPlan.inputStage等。</p><p>文档中仅有如下几类介绍</p><ul><li>COLLSCAN 全表扫描</li><li>IXSCAN 索引扫描</li><li>FETCH 根据索引去检索指定document</li><li>SHARD_MERGE 将各个分片返回数据进行merge</li></ul><p>但是根据源码中的信息，个人还总结了文档中没有的如下几类(常用如下，由于是通过源码查找，可能有所遗漏)</p><ul><li>SORT 表明在内存中进行了排序（与老版本的scanAndOrder:true一致）</li><li>LIMIT 使用limit限制返回数</li><li>SKIP 使用skip进行跳过</li><li>IDHACK 针对_id进行查询</li><li>SHARDING_FILTER 通过mongos对分片数据进行查询</li><li>COUNT 利用db.coll.explain().count()之类进行count运算</li><li>COUNTSCAN count不使用用Index进行count时的stage返回</li><li>COUNT_SCAN count使用了Index进行count时的stage返回</li><li>SUBPLA 未使用到索引的$or查询的stage返回</li><li>TEXT 使用全文索引进行查询时候的stage返回</li><li>PROJECTION 限定返回字段时候stage的返回</li></ul><h4 id="对Explain返回逐层分析"><a href="#对Explain返回逐层分析" class="headerlink" title="对Explain返回逐层分析"></a>对Explain返回逐层分析</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-string">&quot;executionStats&quot;</span> : &#123;<br>                <span class="hljs-attr">&quot;executionSuccess&quot;</span> : <span class="hljs-literal">true</span>,<br>                <span class="hljs-attr">&quot;nReturned&quot;</span> : <span class="hljs-number">29861</span>,<br>                <span class="hljs-attr">&quot;executionTimeMillis&quot;</span> : <span class="hljs-number">66948</span>,<br>                <span class="hljs-attr">&quot;totalKeysExamined&quot;</span> : <span class="hljs-number">29861</span>,<br>                <span class="hljs-attr">&quot;totalDocsExamined&quot;</span> : <span class="hljs-number">29861</span>,<br>                <span class="hljs-attr">&quot;executionStages&quot;</span> : &#123;<br>                        <span class="hljs-attr">&quot;stage&quot;</span> : <span class="hljs-string">&quot;FETCH&quot;</span>,<br>                        <span class="hljs-attr">&quot;nReturned&quot;</span> : <span class="hljs-number">29861</span>,<br>                        <span class="hljs-attr">&quot;executionTimeMillisEstimate&quot;</span> : <span class="hljs-number">66244</span>,<br>                        <span class="hljs-attr">&quot;works&quot;</span> : <span class="hljs-number">29862</span>,<br>                        <span class="hljs-attr">&quot;advanced&quot;</span> : <span class="hljs-number">29861</span>,<br>                        <span class="hljs-attr">&quot;needTime&quot;</span> : <span class="hljs-number">0</span>,<br>                        <span class="hljs-attr">&quot;needFetch&quot;</span> : <span class="hljs-number">0</span>,<br>                        <span class="hljs-attr">&quot;saveState&quot;</span> : <span class="hljs-number">2934</span>,<br>                        <span class="hljs-attr">&quot;restoreState&quot;</span> : <span class="hljs-number">2934</span>,<br>                        <span class="hljs-attr">&quot;isEOF&quot;</span> : <span class="hljs-number">1</span>,<br>                        <span class="hljs-attr">&quot;invalidates&quot;</span> : <span class="hljs-number">0</span>,<br>                        <span class="hljs-attr">&quot;docsExamined&quot;</span> : <span class="hljs-number">29861</span>,<br>                        <span class="hljs-attr">&quot;alreadyHasObj&quot;</span> : <span class="hljs-number">0</span>,<br>                        <span class="hljs-attr">&quot;inputStage&quot;</span> : &#123;<br>                                <span class="hljs-attr">&quot;stage&quot;</span> : <span class="hljs-string">&quot;IXSCAN&quot;</span>,<br>                                <span class="hljs-attr">&quot;nReturned&quot;</span> : <span class="hljs-number">29861</span>,<br>                                <span class="hljs-attr">&quot;executionTimeMillisEstimate&quot;</span> : <span class="hljs-number">290</span>,<br>                                <span class="hljs-attr">&quot;works&quot;</span> : <span class="hljs-number">29862</span>,<br>                                <span class="hljs-attr">&quot;advanced&quot;</span> : <span class="hljs-number">29861</span>,<br>                                <span class="hljs-attr">&quot;needTime&quot;</span> : <span class="hljs-number">0</span>,<br>                                <span class="hljs-attr">&quot;needFetch&quot;</span> : <span class="hljs-number">0</span>,<br>                                <span class="hljs-attr">&quot;saveState&quot;</span> : <span class="hljs-number">2934</span>,<br>                                <span class="hljs-attr">&quot;restoreState&quot;</span> : <span class="hljs-number">2934</span>,<br>                                ...<br></code></pre></td></tr></table></figure><ol><li>executionTimeMillis<ul><li>executionStats.executionTimeMillis<br>该query的整体查询时间</li><li>executionStats.executionStages.executionTimeMillis 该查询根据index去检索document获取29861条具体数据的时间</li><li>executionStats.executionStages.inputStage.executionTimeMillis 该查询扫描29861行index所用时间</li></ul></li><li>index与document扫描数与查询返回条目数<ul><li>nReturned=totalKeysExamined &amp; totalDocsExamined=0</li><li>nReturned=totalKeysExamined=totalDocsExamined(需要具体情况具体分析)</li><li>如果有sort的时候，为了使得sort不在内存中进行，我们可以在保证nReturned=totalDocsExamined<br>的基础上，totalKeysExamined可以大于totalDocsExamined与nReturned，因为量级较大的时候内存排序非常消耗性能。</li></ul></li><li>Stage状态分析<ul><li>我们希望看到的组合：<ul><li>Fetch+IDHACK</li><li>Fetch+ixscan</li><li>Limit+（Fetch+ixscan）</li><li>PROJECTION+ixscan</li><li>SHARDING_FILTER+ixscan</li></ul></li><li>不希望看到包含如下的stage：<ul><li>COLLSCAN（全表扫）</li><li>SORT（使用sort但是无index）</li><li>不合理的SKIP</li><li>SUBPLA(未用到index的$or)</li></ul></li><li>对于count查询<ul><li>COUNT_SCAN(好的)</li><li>COUNTSCAN(不好的)</li></ul></li></ul></li></ol><p>当查询覆盖精确匹配，范围查询与排序的时候<br>{精确匹配字段,排序字段,范围查询字段}这样的索引排序会更为高效。</p>]]></content>
    
    
    
    <tags>
      
      <tag>mongodb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MongoDB记录慢日志</title>
    <link href="/2018/11/13/MongoDB%E8%AE%B0%E5%BD%95%E6%85%A2%E6%97%A5%E5%BF%97/"/>
    <url>/2018/11/13/MongoDB%E8%AE%B0%E5%BD%95%E6%85%A2%E6%97%A5%E5%BF%97/</url>
    
    <content type="html"><![CDATA[<h3 id="Profiling-Levels"><a href="#Profiling-Levels" class="headerlink" title="Profiling Levels"></a>Profiling Levels</h3><p>The following profiling levels are available:</p><ul><li>0 - the profiler is off, does not collect any data. mongod always writes operations longer than the slowOpThresholdMs threshold to its log.</li><li>1 - collects profiling data for slow operations only. By default slow operations are those slower than 100 milliseconds.<br>You can modify the threshold for “slow” operations with the slowOpThresholdMs runtime option or the setParameter command. See the Specify the Threshold for Slow Operations section for more information.</li><li>2 - collects profiling data for all database operations.</li></ul><h3 id="Enable-Database-Profiling-and-Set-the-Profiling-Level"><a href="#Enable-Database-Profiling-and-Set-the-Profiling-Level" class="headerlink" title="Enable Database Profiling and Set the Profiling Level"></a>Enable Database Profiling and Set the Profiling Level</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">db</span>.setProfilingLevel(<span class="hljs-number">2</span>) #全部开启<br><br><span class="hljs-attribute">db</span>.setProfilingLevel(<span class="hljs-number">1</span>,<span class="hljs-number">20</span>) #超过<span class="hljs-number">20</span>ms的记录<br></code></pre></td></tr></table></figure><h3 id="Check-Profiling-Level"><a href="#Check-Profiling-Level" class="headerlink" title="Check Profiling Level"></a>Check Profiling Level</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">db</span><span class="hljs-selector-class">.getProfilingStatus</span>()<br><span class="hljs-selector-tag">db</span><span class="hljs-selector-class">.getProfilingLevel</span>()<br></code></pre></td></tr></table></figure><h3 id="Example-Profiler-Data-Queries"><a href="#Example-Profiler-Data-Queries" class="headerlink" title="Example Profiler Data Queries"></a>Example Profiler Data Queries</h3><figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs roboconf">db.system.profile.find().limit(10).sort( &#123; <span class="hljs-attribute">ts</span> : -1 &#125; )<span class="hljs-variable">.pretty</span>()<br>db<span class="hljs-variable">.system</span><span class="hljs-variable">.profile</span><span class="hljs-variable">.find</span>( &#123; op: &#123; $ne : &#x27;command&#x27; &#125; &#125; )<span class="hljs-variable">.pretty</span>()<br>db<span class="hljs-variable">.system</span><span class="hljs-variable">.profile</span><span class="hljs-variable">.find</span>( &#123; ns : &#x27;mydb<span class="hljs-variable">.test</span>&#x27; &#125; )<span class="hljs-variable">.pretty</span>()<br>db<span class="hljs-variable">.system</span><span class="hljs-variable">.profile</span><span class="hljs-variable">.find</span>( &#123; millis : &#123; $gt : 5 &#125; &#125; )<span class="hljs-variable">.pretty</span>()<br><br>查看执行时间大于100毫秒的执行操作，并倒序排列,并取前5行<br>db<span class="hljs-variable">.system</span><span class="hljs-variable">.profile</span><span class="hljs-variable">.find</span>(&#123;millis:&#123;$gt:100&#125;&#125;)<span class="hljs-variable">.sort</span>(&#123;$natural:-1&#125;)<span class="hljs-variable">.limit</span>(5);<br></code></pre></td></tr></table></figure><h3 id="Change-Size-of-system-profile-Collection-on-the-Primary"><a href="#Change-Size-of-system-profile-Collection-on-the-Primary" class="headerlink" title="Change Size of system.profile Collection on the Primary"></a>Change Size of system.profile Collection on the Primary</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">db.set<span class="hljs-constructor">ProfilingLevel(0)</span><br><br>db.system.profile.drop<span class="hljs-literal">()</span><br><br>db.create<span class="hljs-constructor">Collection( <span class="hljs-string">&quot;system.profile&quot;</span>, &#123; <span class="hljs-params">capped</span>: <span class="hljs-params">true</span>, <span class="hljs-params">size</span>:4000000 &#125; )</span><br><br>db.set<span class="hljs-constructor">ProfilingLevel(1)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>mongodb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客误删除了</title>
    <link href="/2018/11/13/%E5%8D%9A%E5%AE%A2%E8%AF%AF%E5%88%A0%E9%99%A4%E4%BA%86/"/>
    <url>/2018/11/13/%E5%8D%9A%E5%AE%A2%E8%AF%AF%E5%88%A0%E9%99%A4%E4%BA%86/</url>
    
    <content type="html"><![CDATA[<p>记录一下今天博客被我不小心无删除了。本来想着github上都有保存记录。结果一看傻眼了，都是html的页面。</p><p>原始的markdown笔记也没有了。 伤心死了。</p><p>总结下。github上的都是html生成的html文件。</p><p>自己原始写的md格式的文件是不会自动上传到github上的。 切记自行保存。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
